{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/attendance/attendance.component.css","webpack:///./src/app/attendance/attendance.component.html","webpack:///./src/app/attendance/attendance.component.ts","webpack:///./src/app/attendance/attendanceView.component.ts","webpack:///./src/app/attendance/viewAttendance.component.html","webpack:///./src/app/books/book.component.css","webpack:///./src/app/books/book.component.html","webpack:///./src/app/books/book.component.ts","webpack:///./src/app/books/viewBook.component.html","webpack:///./src/app/books/viewBook.component.ts","webpack:///./src/app/class.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/edit-student/edit-student.component.css","webpack:///./src/app/edit-student/edit-student.component.html","webpack:///./src/app/edit-student/edit-student.component.ts","webpack:///./src/app/firebasewrapper.js","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/library/library.component.css","webpack:///./src/app/library/library.component.html","webpack:///./src/app/library/library.component.ts","webpack:///./src/app/list-student/delete_dialog.html","webpack:///./src/app/list-student/list-student.component.css","webpack:///./src/app/list-student/list-student.component.html","webpack:///./src/app/list-student/list-student.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/receipt/delete_receipt_dialog.html","webpack:///./src/app/receipt/edit-receipt.commponent.html","webpack:///./src/app/receipt/edit-receipt.commponent.ts","webpack:///./src/app/receipt/list-receipt.component.html","webpack:///./src/app/receipt/list-receipt.component.ts","webpack:///./src/app/receipt/receipt.component.css","webpack:///./src/app/receipt/receipt.component.html","webpack:///./src/app/receipt/receipt.component.ts","webpack:///./src/app/rest.service.ts","webpack:///./src/app/save_dialog.html","webpack:///./src/app/student/student.component.css","webpack:///./src/app/student/student.component.html","webpack:///./src/app/student/student.component.ts","webpack:///./src/app/student/studentDetail.component.html","webpack:///./src/app/student/studentDetail.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"mat-sidenav-container, mat-sidenav-content, mat-sidenav {\\n  height: 100%;\\n}\\n\\nmat-sidenav {\\n  width: 250px;\\n}\\n\\na {\\n  text-decoration: none;\\n  color: white;\\n}\\n\\na:hover,\\na:active {\\n  color: lightgray;\\n}\\n\\n.navigation-items {\\n  list-style: none;\\n  padding: 0;\\n  margin: 0;\\n  cursor: pointer;\\n}\\n\\n.icon {\\n  display: inline-block;\\n  height: 30px;\\n  margin: 0 auto;\\n  padding-right: 5px;\\n  text-align: center;\\n  vertical-align: middle;\\n  width: 15%;\\n}\\n\\n.label {\\n  display: inline-block;\\n  line-height: 30px;\\n  margin: 0;\\n  width: 85%;\\n}\"","module.exports = \"<!--  <mat-sidenav-container>\\n <mat-sidenav-content>\\n   <mat-toolbar color=\\\"primary\\\">\\n    <div fxHide.gt-xs>\\n      <button mat-icon-button>\\n       <mat-icon>menu</mat-icon>\\n     </button>\\n   </div>\\n   <div>\\n    <a>\\n     Daksh International Daniyari\\n   </a>\\n </div>\\n <div fxFlex fxLayout fxLayoutAlign=\\\"flex-end\\\"  fxHide.xs>\\n   <ul fxLayout fxLayoutGap=\\\"20px\\\" class=\\\"navigation-items\\\">\\n     <li>\\n       <a mat-list-item\\n       [routerLink]=\\\"['/login']\\\">\\n       <mat-icon>input</mat-icon>&nbsp;\\n       <span  class=\\\"label\\\">Login</span>\\n     </a>\\n   </li>\\n\\n   <li [matMenuTriggerFor]=\\\"student\\\"  #matMenuTrigger1=\\\"matMenuTrigger\\\">\\n     <a mat-list-item (mouseenter)=\\\"matMenuTrigger1.openMenu()\\\">\\n       <mat-icon class=\\\"icon\\\">people</mat-icon>&nbsp;\\n       <span class=\\\"label\\\">Student</span>\\n     </a>\\n     <mat-menu #student=\\\"matMenu\\\" (mouseleave)=\\\"matMenuTrigger1.closeMenu()\\\" [overlapTrigger]=\\\"false\\\">\\n       <button mat-menu-item [routerLink]=\\\"['/student']\\\">Add Student</button>\\n       <button mat-menu-item [routerLink]=\\\"['/liststudent']\\\">View Student</button>\\n     </mat-menu>\\n   </li>\\n   <li [matMenuTriggerFor]=\\\"books\\\"  #matMenuTrigger3=\\\"matMenuTrigger\\\">\\n     <a mat-list-item (mouseenter)=\\\"matMenuTrigger3.openMenu()\\\">\\n       <mat-icon class=\\\"icon\\\">book</mat-icon>&nbsp;\\n       <span class=\\\"label\\\">Books</span>\\n     </a>\\n     <mat-menu #books=\\\"matMenu\\\" (mouseleave)=\\\"matMenuTrigger1.closeMenu()\\\" [overlapTrigger]=\\\"false\\\">\\n       <button mat-menu-item [routerLink]=\\\"['/bookAdd']\\\">Add Books</button>\\n       <button mat-menu-item [routerLink]=\\\"['/bookView']\\\">View Books</button>\\n     </mat-menu>\\n   </li>\\n\\n   <li [matMenuTriggerFor]=\\\"receipt\\\" #matMenuTrigger2=\\\"matMenuTrigger\\\">\\n     <a mat-list-item (mouseenter)=\\\"matMenuTrigger2.openMenu()\\\">\\n       <mat-icon class=\\\"icon\\\">receipt</mat-icon>&nbsp;\\n       <span class=\\\"label\\\">Receipt</span>\\n     </a>\\n     <mat-menu #receipt=\\\"matMenu\\\" (mouseleave)=\\\"matMenuTrigger2.closeMenu()\\\" [overlapTrigger]=\\\"false\\\">\\n       <button mat-menu-item [routerLink]=\\\"['/receipt']\\\">Add Receipt</button>\\n       <button mat-menu-item [routerLink]=\\\"['/receiptView']\\\">View Receipt</button>\\n     </mat-menu>\\n   </li>\\n\\n <li>\\n   <a  mat-list-item\\n   [routerLink]=\\\"['/']\\\">\\n   <mat-icon class=\\\"icon\\\">dashboard</mat-icon>&nbsp;\\n   <span class=\\\"label\\\">Dashboard</span>\\n </a>\\n</li>\\n<li>\\n <a>\\n   <mat-icon class=\\\"icon\\\">input</mat-icon>&nbsp;\\n   <span class=\\\"label\\\">LogOut</span>\\n </a>\\n</li>\\n</ul>\\n</div>\\n</mat-toolbar>\\n<main>\\n</main>\\n</mat-sidenav-content>\\n</mat-sidenav-container>\\n<router-outlet></router-outlet> -->\\n\\n<router-outlet></router-outlet> \"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'my-angular6';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { DatePipe } from '@angular/common';\n\n\nimport { AppComponent } from './app.component';\nimport { StudentComponent,SaveDialogContent } from './student/student.component';\nimport { LoginComponent } from './login/login.component';\nimport { BooksComponent } from './books/book.component';\nimport { ListBookComponent } from './books/viewBook.component';\nimport { ReceiptComponent } from './receipt/receipt.component';\nimport { RestService } from './rest.service';\n\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule, MatCheckboxModule, MatIconModule, MatSidenavModule, MatListModule, MatToolbarModule, MatSelectModule,MatDatepickerModule, MatRadioModule, MatNativeDateModule, MatCardModule, MatProgressSpinnerModule, MatMenuModule,MatTabsModule,MatTooltipModule,MatSortModule} from '@angular/material';\nimport { MatInputModule } from '@angular/material/input';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport {FormsModule,ReactiveFormsModule} from \"@angular/forms\";\n\nimport { ListStudentComponent,DialogContent } from './list-student/list-student.component';\nimport { MatTableModule} from '@angular/material/table';\n\n\nimport { MatDialogModule } from '@angular/material/dialog';\n\nimport { EditStudentComponent } from './edit-student/edit-student.component';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport { HomeComponent } from './home/home.component';\nimport { AttendanceComponent } from './attendance/attendance.component';\nimport { AttendanceViewComponent } from './attendance/attendanceView.component';\nimport { LibraryComponent } from './library/library.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { StudentDetailComponent } from './student/studentDetail.component';\nimport { ListReceiptComponent } from './receipt/list-receipt.component';\nimport { EditReceiptComponent } from './receipt/edit-receipt.commponent';\n\n\n\n\n\n//import { MatDatepickerModule }  from \"@angular/material/datepicker\";\nconst appRoutes: Routes =[\n{\n\t/*path: '',\n\tredirectTo: '/',\n  pathMatch: 'full'*/\n  path: '',\n  component: LoginComponent\n},\n{\n\tpath: 'student',\n    component: StudentComponent\n},\n{\n  path: 'login',\n  component: LoginComponent\n},\n{\n  path : 'liststudent',\n  component: ListStudentComponent\n},\n\n{ path: 'student/:id', \n  component: EditStudentComponent \n},\n{\n  path : 'receipt',\n  component: ReceiptComponent\n},\n{\n  path : 'receiptList',\n  component: ListReceiptComponent\n},\n{ path: 'editReceipt/:id', \n  component: EditReceiptComponent \n},\n{\n  path : 'bookAdd',\n  component: BooksComponent\n},\n{\n  path : 'bookView',\n  component: ListBookComponent\n},\n{\n  path : 'home',\n  component: HomeComponent\n},\n{\n  path : 'attendance',\n  component: AttendanceComponent\n},\n{\n  path : 'attendanceView',\n  component: AttendanceViewComponent\n},\n{\n  path : 'issueBook',\n  component: LibraryComponent\n},\n{\n  path : 'issuedBooksView',\n  component: LibraryComponent\n},\n{\n  path : 'dashboard',\n  component: DashboardComponent\n},\n{\n  path : 'studentDetail/:id',\n  component: StudentDetailComponent\n},\n\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    StudentComponent,\n    LoginComponent,\n    ListStudentComponent,\n\n    DialogContent,\n    EditStudentComponent,\n\n    ReceiptComponent,\n    DialogContent,\n    BooksComponent,\n    ListBookComponent,\n    HomeComponent,\n    AttendanceComponent,\n    AttendanceViewComponent,\n    LibraryComponent,\n    SaveDialogContent,\n    DashboardComponent,\n    StudentDetailComponent,\n    ListReceiptComponent,\n    EditReceiptComponent\n\n  ],\n  imports: [\n  RouterModule.forRoot(\n  \tappRoutes,\n  \t{\n  \t\tenableTracing: true }\n  \t),\n    BrowserModule,\n    BrowserAnimationsModule,\n    RouterModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatInputModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatListModule,\n    MatToolbarModule,\n    FlexLayoutModule,\n    MatSelectModule,\n    FormsModule,\n    MatDatepickerModule,\n    MatRadioModule,\n    MatButtonModule,\n    MatNativeDateModule,\n    MatCardModule,\n    MatProgressSpinnerModule,\n    MatMenuModule,\n    HttpClientModule,\n    MatTabsModule,\n    MatTableModule,\n    MatTooltipModule,\n    MatDialogModule,\n    MatExpansionModule,\n    ReactiveFormsModule,\n    MatSortModule\n\n  ],\n  providers: [DatePipe],\n  bootstrap: [AppComponent],\n  entryComponents: [DialogContent,SaveDialogContent]\n})\nexport class AppModule { }\n","module.exports = \"mat-header-cell {\\n\\tcolor: #3F51B5;\\n\\tfont-family: courier; \\n\\tfont-size: 100%;\\n}\\nmat-icon {\\n\\tcolor: #3F51B5;\\n}\"","module.exports = \"<app-home></app-home>\\n<mat-sidenav-container>\\n<div class=\\\"container\\\"\\n     fxLayout\\n     fxLayout.xs=\\\"column\\\"\\n     fxLayoutGap=\\\"10px\\\"\\n     fxLayoutGap.xs=\\\"0\\\">\\n  <div class=\\\"item item-1\\\" fxFlex=\\\"15%\\\">\\n\\t<mat-form-field >\\n\\t<mat-icon matPrefix class=\\\"icon\\\">book</mat-icon>\\n\\t<mat-select placeholder=\\\"Class\\\" (ngModelChange)=\\\"getClassName($event)\\\" name=\\\"class\\\">\\n\\t<mat-option *ngFor=\\\"let class of classData;\\\" [value]=\\\"class.id\\\">{{class.name}}</mat-option>\\n\\t</mat-select>\\n\\t</mat-form-field>\\n  </div>\\n</div>\\n\\n <form name=\\\"attendanceData\\\" class=\\\"student-form\\\">\\n  <table style=\\\"width:100%\\\" >\\n   <thead> <tr>\\n      <td>Roll Number</td>\\n      <td>First Name</td>\\n      <td>Last Name</td>\\n      <td>Present</td>\\n      <td>Absent</td>\\n      <td>Leave</td>\\n       <td>Late</td>\\n    </tr>\\n  </thead>\\n    <tr *ngFor=\\\"let student of studentData;let i = index;\\\">\\n    <td><mat-form-field>\\n    <input  matInput name=\\\"roll_number{{i}}\\\" [(ngModel)]=\\\"student.roll_number\\\" #roll_number{{i}}=\\\"ngModel\\\">\\n    </mat-form-field></td>\\n    <td><mat-form-field>\\n            <input  matInput name=\\\"first_name{{i}}\\\" [(ngModel)]=\\\"student.first_name\\\" #first_name{{i}}=\\\"ngModel\\\">\\n    </mat-form-field></td>\\n    <td><mat-form-field>\\n            <input  matInput name=\\\"last_name{{i}}\\\" [(ngModel)]=\\\"student.last_name\\\" #last_name{{i}}=\\\"ngModel\\\">\\n    </mat-form-field></td>\\n    <td>\\n    <mat-radio-button  name=\\\"action{{i}}\\\" [(ngModel)]=\\\"student.action\\\"  #action{{i}}=\\\"ngModel\\\" (click)='onRadioClick(i,\\\"P\\\",student)' ></mat-radio-button> \\n    </td>\\n    <td>\\n          <mat-radio-button  name=\\\"action{{i}}\\\" [(ngModel)]=\\\"student.action\\\" #action{{i}}=\\\"ngModel\\\" (click)='onRadioClick(i,\\\"A\\\",student)'></mat-radio-button> \\n    </td>\\n    <td>\\n          <mat-radio-button  name=\\\"action{{i}}\\\" [(ngModel)]=\\\"student.action\\\" #action{{i}}=\\\"ngModel\\\" (click)='onRadioClick(i,\\\"L\\\",student)'></mat-radio-button> \\n    </td>\\n    <td>\\n          <mat-radio-button  name=\\\"action{{i}}\\\" [(ngModel)]=\\\"student.action\\\" #action{{i}}=\\\"ngModel\\\" (click)='onRadioClick(i,\\\"LT\\\",student)'></mat-radio-button> \\n    </td>\\n    </tr>\\n  </table>\\n<!-- <div class=\\\"container\\\"\\n     fxLayout\\n     fxLayout.xs=\\\"column\\\"\\n     fxLayoutAlign=\\\"left\\\"\\n     fxLayoutGap=\\\"10px\\\"\\n     fxLayoutGap.xs=\\\"0\\\">\\n<div class=\\\"button-row\\\">\\n     <button type=\\\"submit\\\" mat-stroked-button color=\\\"primary\\\">Save</button>\\n      <button mat-raised-button color=\\\"primary\\\">Reset</button>\\n  </div></div> -->\\n</form>\\n</mat-sidenav-container>\\n\"","import { Component, OnInit,OnChanges } from '@angular/core';\nimport { CLASSES } from '../class';\nimport { FormControl,NgForm,Validators } from '@angular/forms';\nimport { RestService } from '../rest.service';\nimport { Router } from '@angular/router';\nimport { DatePipe } from '@angular/common';\n\n\n@Component({\n  selector: 'app-attendance',\n  templateUrl: './attendance.component.html',\n  styleUrls: ['./attendance.component.css']\n})\nexport class AttendanceComponent {\n\nclassData = CLASSES;\nclassId;\nstudentData: any = [];\nattendanceObj;\ndelAttendanceObj;\n\nconstructor(public rest:RestService,public router:Router,public datePipe: DatePipe){\n console.log(\"class:\",this.classData);\t\n};\n\npublic getClassName(id): void {\nthis.classId = id;  \n    let classObj = {\"fn\": \"selectAllById\",\"params\": [\"students\",['class'],[id] ]};\n    this.rest.getStudentsById(classObj).subscribe((response) => {\n\t\t this.studentData = response;\n    \t for(let i=0; i<((this.studentData).length ); i++){\n           this.studentData[i].action = 'present';\n\t\t }\n\t});\n}\n\npublic getDate(date): void {\n\tconsole.log(\"date:\",date);\n}\n\n/*submitAttendance(form:NgForm){\n\t\tconsole.log(\"att form: \",form);\n\t\tlet keys = Object.keys(form.controls);\n\t\tlet values = Object.values(form.value);\n\t\tconsole.log(\"keys: \",keys);\n\t\tconsole.log(\"values: \",values);\n\t\tkeys.push('date');\n\t\tvalues.push(new Date());\n\t\tkeys.push('class');\n\t\tvalues.push(this.classId);\n\t\tconsole.log(\"keys: \",keys);\n\t\tconsole.log(\"values: \",values);\n\t\tvar key = keys.keys()[0]; console.log(\"key:\",key);\n\t\tthis.attendanceObj = {\"fn\": \"insert\",\"params\": [\"attendance\",keys,values]};\n\t\tconsole.log(\"attendanceObj: \",this.attendanceObj);\n   \t     \tthis.rest.postAttendance(this.attendanceObj).subscribe((response) => {\n   \t\t    alert(\"attendance added.\")\n           this.router.navigate(['/liststudent']);\n  \t  });\n}*/\n\nonRadioClick(index,val,student) {\n    this.studentData[index].action = val;\n    console.log(\"student:\",student);\n    let date = this.datePipe.transform(new Date(), 'yyyy-MM-dd') ;\n    let keys = ['date','class','roll_number','action'];\n    let values = [date,student.class,student.roll_number,student.action];\n    this.delAttendanceObj = {\"fn\": \"deleteRowAttendance\",\"params\": [\"attendance\",[student.roll_number],[date],[student.class] ]};\n\tthis.rest.deleteRowAttendance(this.delAttendanceObj).subscribe((response) => {\n\t});\n\n    this.attendanceObj = {\"fn\": \"insert\",\"params\": [\"attendance\",keys,values]};\n\tthis.rest.postAttendance(this.attendanceObj).subscribe((response) => {\n\t\t/*alert(\"attendance added.\")\n\t\tthis.router.navigate(['/liststudent']);*/\n\t\t});\n    }\n}","import { Component, OnInit,OnChanges } from '@angular/core';\nimport { RestService } from '../rest.service';\nimport { CLASSES } from '../class';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-attendance-view',\n  templateUrl: './viewAttendance.component.html',\n  styleUrls: ['./attendance.component.css']\n})\nexport class AttendanceViewComponent {\n    classData = CLASSES;\n\tclassId;\n\tdataSource;\n\tdisplayedColumns = ['roll_number','first_name','last_name','action'];\n\ttodayDate = this.datePipe.transform(new Date(), 'yyyy-MM-dd');\n\tpresentAction: number =0;\n\tabsentAction : number =0;\n\tleaveAction : number =0;\nconstructor(private rest:RestService,private datePipe:DatePipe){};\npublic getClassName(id): void {\nthis.classId = id;\nconsole.log(\"getClassName:\"+this.todayDate);this.dataSource='';\n    let classObj = { \"fn\": \"selectAttendance\",\"params\": [\"attendance\",\"students\",[this.classId],[this.todayDate] ]};\n    console.log(classObj);\n    this.rest.getAttendanceByClass(classObj).subscribe((response) => {\n\t\t this.dataSource = response;\n\t\t for(let i=0; i<=[response].length; i++){\n\t\t \tif(response[i].action == 'A'){\n\t\t \t\tthis.absentAction += parseInt(\"01\");\n\t\t \t}else if(response[i].action == 'L'){\n\t\t \t\tthis.leaveAction += parseInt(\"01\");\n\t\t \t}else {\n\t\t \t\tthis.presentAction += parseInt(\"01\");\n\t\t \t}\n\t\t }\n\t});\n}\npublic getSearchDate(searchDate): void {\n\t//console.log(this.datePipe.transform(searchDate, 'yyyy-MM-dd'));\n\tthis.todayDate = this.datePipe.transform(searchDate, 'yyyy-MM-dd');\n\tconsole.log(\"getSearchDate:\"+this.todayDate);\n\tthis.getClassName(this.classId);\n\n}\n\n}\n","module.exports = \"<app-home></app-home>\\n<mat-sidenav-container>\\n<div class=\\\"container\\\"\\n     fxLayout\\n     fxLayout.xs=\\\"column\\\"\\n     fxLayoutGap=\\\"10px\\\"\\n     fxLayoutGap.xs=\\\"0\\\">\\n  <div class=\\\"item item-1\\\" fxFlex=\\\"15%\\\">\\n\\t<mat-form-field >\\n\\t<mat-icon matPrefix class=\\\"icon\\\">book</mat-icon>\\n\\t<mat-select placeholder=\\\"Class\\\" ngModel (ngModelChange)=\\\"getClassName($event)\\\" name=\\\"className\\\" #className=\\\"ngModel\\\">\\n\\t<mat-option *ngFor=\\\"let class of classData;\\\" [value]=\\\"class.id\\\">{{class.name}}</mat-option>\\n\\t</mat-select>\\n\\t</mat-form-field>\\n  </div>\\n  <div class=\\\"item item-1\\\" fxFlex=\\\"15%\\\">\\n\\t<mat-form-field >\\n\\t <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\" name=\\\"searchDate\\\" ngModel #searchDate=\\\"ngModel\\\" (ngModelChange)=\\\"getSearchDate($event)\\\" >\\n  <mat-datepicker-toggle matPrefix [for]=\\\"picker\\\">\\n  </mat-datepicker-toggle>\\n  <mat-datepicker #picker></mat-datepicker>\\n \\n\\t</mat-form-field>\\n  </div>\\n\\n  <div class=\\\"item item-1\\\" fxFlex=\\\"15%\\\">\\n  <mat-form-field >\\n    <input matInput type=\\\"text\\\" name=\\\"present\\\" style=\\\"color:green;font-weight:bold;\\\" value=\\\"Present- {{presentAction}}\\\">\\n  </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"item item-1\\\" fxFlex=\\\"15%\\\">\\n  <mat-form-field >\\n    <input matInput type=\\\"text\\\" name=\\\"absent\\\" style=\\\"color:red;font-weight:bold;\\\" value=\\\"Leave- {{leaveAction}}\\\">\\n  </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"item item-1\\\" fxFlex=\\\"15%\\\">\\n  <mat-form-field >\\n    <input matInput type=\\\"text\\\" name=\\\"leave\\\" style=\\\"color:blue;font-weight:bold;\\\" value=\\\"Absent- {{absentAction}}\\\">\\n  </mat-form-field>\\n  </div>\\n\\n</div></mat-sidenav-container>\\n<mat-table #table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\n\\n  <!-- Position Column -->\\n  <ng-container matColumnDef=\\\"roll_number\\\">\\n            <mat-header-cell *matHeaderCellDef>Roll Number</mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element \\\">{{element.roll_number }} \\n            </mat-cell>\\n        </ng-container>\\n\\n  <ng-container matColumnDef=\\\"first_name\\\">\\n            <mat-header-cell *matHeaderCellDef>Name</mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element \\\">{{element.first_name | titlecase }} \\n            </mat-cell>\\n        </ng-container>\\n\\n  <!-- Name Column -->\\n  <ng-container matColumnDef=\\\"last_name\\\">\\n    <mat-header-cell *matHeaderCellDef> Last Name </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\"> {{element.last_name | titlecase }} </mat-cell>\\n  </ng-container>\\n\\n          <ng-container matColumnDef=\\\"action\\\">\\n            <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\\n             <mat-cell *matCellDef=\\\"let element\\\" style=\\\"font-weight: bold;\\\" [ngStyle]=\\\"{'color': element.action == 'A' ? 'red' : element.action == 'L' ? 'blue' : 'green'}\\\"> {{element.action }} </mat-cell>\\n        </ng-container>\\n\\n  <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n  <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n</mat-table>\\n<router-outlet></router-outlet>\"","module.exports = \"mat-header-cell {\\n\\tcolor: #3F51B5;\\n\\tfont-family: courier; \\n\\tfont-size: 100%;\\n}\\nmat-icon {\\n\\tcolor: #3F51B5;\\n}\"","module.exports = \"<app-home></app-home>\\n<mat-sidenav-container>\\n<form name=\\\"bookData\\\" (submit)=\\\"submitBook(postForm); postForm.reset()\\\" #postForm=\\\"ngForm\\\" class=\\\"student-form\\\">\\n<div class=\\\"container\\\"\\n   fxLayout\\n   fxLayout.xs=\\\"column\\\"\\n   fxLayoutGap=\\\"10px\\\"\\n   fxLayoutGap.xs=\\\"0\\\">\\n   <div class=\\\"item item-1\\\" fxFlex=\\\"15%\\\">\\n      <mat-form-field class=\\\"navigation-items\\\">\\n         <mat-label>Book Title</mat-label>\\n         <mat-icon matPrefix class=\\\"icon\\\">book</mat-icon>\\n         <input matInput value=\\\"\\\" name=\\\"book_title\\\" ngModel required minlength=\\\"4\\\" #book_title=\\\"ngModel\\\">\\n         <mat-error *ngIf=\\\"book_title.invalid\\\">Please enter Book Title.</mat-error>\\n      </mat-form-field>\\n   </div>\\n   <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\n      <mat-form-field >\\n         <mat-label>Author Name</mat-label>\\n         <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\n         <input matInput placeholder=\\\"Author Name\\\" name=\\\"author_name\\\" ngModel required minlength=\\\"5\\\" #author_name=\\\"ngModel\\\">\\n         <mat-error *ngIf=\\\"author_name.invalid\\\">Please enter Author name.</mat-error>\\n      </mat-form-field>\\n   </div>\\n\\n   <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\n      <mat-form-field >\\n         <mat-icon matPrefix class=\\\"icon\\\">print</mat-icon>\\n         <input matInput placeholder=\\\"Publication\\\" name=\\\"publication\\\" ngModel required minlength=\\\"4\\\" #publication=\\\"ngModel\\\">\\n         <mat-error *ngIf=\\\"publication.invalid\\\">Please enter publication.</mat-error>\\n      </mat-form-field>\\n   </div>\\n</div>\\n<div class=\\\"container\\\"\\n   fxLayout\\n   fxLayout.xs=\\\"column\\\"\\n   fxLayoutGap=\\\"10px\\\"\\n   fxLayoutGap.xs=\\\"0\\\">\\n   <div class=\\\"item item-1\\\" fxFlex=\\\"15%\\\">\\n      <mat-form-field class=\\\"navigation-items\\\">\\n         <mat-label>Course Book</mat-label>\\n         <mat-icon matPrefix class=\\\"icon\\\">pan_tool</mat-icon>\\n         <mat-select placeholder=\\\"Course Book\\\"  name=\\\"course_book\\\" ngModel required #course_book=\\\"ngModel\\\">\\n            <mat-option value=\\\"yes\\\">Yes</mat-option>\\n            <mat-option value=\\\"no\\\">No</mat-option>\\n         </mat-select>\\n         <mat-error *ngIf=\\\"course_book.invalid\\\">Please select option.</mat-error>\\n      </mat-form-field>\\n   </div>\\n</div>\\n\\n<div class=\\\"container\\\"\\n   fxLayout\\n   fxLayout.xs=\\\"column\\\"\\n   fxLayoutAlign=\\\"left\\\"\\n   fxLayoutGap=\\\"10px\\\"\\n   fxLayoutGap.xs=\\\"0\\\">\\n   <div class=\\\"button-row\\\">\\n      <button type=\\\"submit\\\" mat-stroked-button color=\\\"primary\\\">Save</button>\\n      <button mat-raised-button color=\\\"primary\\\" type=\\\"reset\\\">Reset</button>\\n   </div>\\n</div>\\n</form>\\n</mat-sidenav-container>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { RestService} from '../rest.service';\nimport { FormControl,NgForm,Validators } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-book',\n  templateUrl: './book.component.html',\n  styleUrls: ['./book.component.css']\n})\nexport class BooksComponent implements OnInit {\n\tbookData: any = {};\n\n  constructor(public rest:RestService) {\n  \t/*this.rest.getClasses().subscribe((response) => {\n    console.log(\"res KV class: \",response);\n    this.classData = response;\n    });*/\n  }\n\n  ngOnInit() {\n  }\n\n  submitBook(form: NgForm) {\n  \tif(form.invalid){\n  \t\treturn;\n  \t}\n  let keys = Object.keys(form.form.controls);\n\tlet values = Object.values(form.value);\n  console.log(\"key & values\",keys,values);\n\tvar bookObj = {\"fn\": \"insert\",\"params\": [\"books\",keys,values]};\n   \t   \tthis.rest.postBook(bookObj).subscribe((response) => {\n   \t\talert(\"Book Added.\");\n      });\n    }\n}\n","module.exports = \"<app-home></app-home>\\n<mat-table #table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\n\\n  <!-- Position Column -->\\n  <ng-container matColumnDef=\\\"id\\\">\\n            <mat-header-cell *matHeaderCellDef>Book ID</mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element \\\">{{element.id }}\\n            </mat-cell>\\n        </ng-container>\\n\\n  <ng-container matColumnDef=\\\"book_title\\\">\\n            <mat-header-cell *matHeaderCellDef>Book Title</mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element \\\">{{element.book_title | titlecase }}\\n            </mat-cell>\\n        </ng-container>\\n\\n  <!-- Name Column -->\\n  <ng-container matColumnDef=\\\"author_name\\\">\\n    <mat-header-cell *matHeaderCellDef> Author Name </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\"> {{element.author_name | titlecase }} </mat-cell>\\n  </ng-container>\\n\\n  <!-- Weight Column -->\\n  <ng-container matColumnDef=\\\"publication\\\">\\n    <mat-header-cell  *matHeaderCellDef> Publication </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\"> {{element.publication | titlecase }} </mat-cell>\\n  </ng-container>\\n\\n  <!-- Symbol Column -->\\n  <ng-container matColumnDef=\\\"course_book\\\">\\n    <mat-header-cell *matHeaderCellDef> Course Book </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\"> {{element.course_book}} </mat-cell>\\n  </ng-container>\\n\\n<ng-container matColumnDef=\\\"action\\\">\\n    <mat-header-cell *matHeaderCellDef> Action </mat-header-cell>\\n    <mat-cell [routerLink]=\\\"['/bookAdd']\\\" *matCellDef=\\\"let element\\\"><mat-icon  matTooltip=\\\"Edit Book\\\" matPrefix class=\\\"icon\\\">edit</mat-icon> <mat-icon  matTooltip=\\\"Delete Book\\\" matPrefix class=\\\"icon\\\">delete</mat-icon>  \\n            </mat-cell>\\n  </ng-container>\\n  <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n  <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n</mat-table>\\n<router-outlet></router-outlet>\\n\"","import { Component, OnInit,Inject } from '@angular/core';\nimport { RestService } from '../rest.service';\n\n@Component({\n  selector: 'app-list-book',\n  templateUrl: './viewBook.component.html',\n  styleUrls: ['./book.component.css']\n})\nexport class ListBookComponent implements OnInit {\nbookList;\ndataSource ;\ndisplayedColumns = ['id','book_title','author_name','publication','course_book','action'];\n\n  constructor( public rest: RestService) {\n\n  var books = {\n  \"fn\":\"selectAll\",\n  \"params\":[\"books\"]\n  }\nthis.rest.getBooks().subscribe((response) => {\n    this.dataSource = response ;\n    this.bookList = response;\n});\n }\n  ngOnInit() {\n  }\n\n}\n","export class ClassList {\n\tid : string ;\n\tname : string ; \n}\n\nexport const CLASSES: ClassList[] = [\n  { id: 'Nursery',  name: 'Nursery'  },\n  { id: 'LKG',  name: 'LKG'      },\n  { id: 'UKG',  name: 'UKG'      },\n  { id: 'First',  name: 'First'    },\n  { id: 'Second',  name: 'Second'   },\n  { id: 'Third' ,  name: 'Third'    },\n  { id: 'Fourth',  name: 'Fourth'   },\n  { id: 'Fifth',  name: 'Fifth'    },\n  { id: 'Sixth',  name: 'Sixth'    },\n  { id: 'Seventh', name: 'Seventh'  },\n  { id: 'Eighth', name: 'Eighth'   },\n  { id: 'Nineth', name: 'Nineth'   },\n  { id: 'Tenth', name: 'Tenth'    },\n  { id: 'Eleventh', name: 'Eleventh' },\n  { id: 'Twelveth', name: 'Twelveth' },\n];","module.exports = \"\\n/* mat-grid-tile {\\n  background: lightblue;\\n} */\"","module.exports = \"<app-home></app-home>\\n<mat-sidenav-container>\\n<div class=\\\"container\\\"\\n     fxLayout\\n     fxLayout.xs=\\\"column\\\"\\n     fxLayoutGap=\\\"10px\\\"\\n     fxLayoutGap.xs=\\\"0\\\">\\n     <div fxFlex=\\\"20%\\\">\\n  \\t<mat-card class=\\\"example-card\\\">\\n  <mat-card-header>\\n    <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n    <mat-card-title>Student</mat-card-title>\\n    <mat-card-subtitle>Class-1 <button mat-button>View</button></mat-card-subtitle>\\n     <mat-card-subtitle>Class-2 <button mat-button>View</button></mat-card-subtitle>\\n      <mat-card-subtitle>Class-3 <button mat-button>View</button></mat-card-subtitle>\\n  </mat-card-header>\\n</mat-card>\\n </div>\\n <div fxFlex=\\\"20%\\\">\\n  \\t<mat-card class=\\\"example-card\\\">\\n  <mat-card-header>\\n    <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n    <mat-card-title>Student</mat-card-title>\\n    <mat-card-subtitle>Class-1 <button mat-button>View</button></mat-card-subtitle>\\n     <mat-card-subtitle>Class-2 <button mat-button>View</button></mat-card-subtitle>\\n      <mat-card-subtitle>Class-3 <button mat-button>View</button></mat-card-subtitle>\\n  </mat-card-header>\\n</mat-card>\\n </div>\\n <div fxFlex=\\\"20%\\\">\\n  \\t<mat-card class=\\\"example-card\\\">\\n  <mat-card-header>\\n    <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n    <mat-card-title>Student</mat-card-title>\\n    <mat-card-subtitle>Class-1 <button mat-button>View</button></mat-card-subtitle>\\n     <mat-card-subtitle>Class-2 <button mat-button>View</button></mat-card-subtitle>\\n      <mat-card-subtitle>Class-3 <button mat-button>View</button></mat-card-subtitle>\\n  </mat-card-header>\\n</mat-card>\\n</div>\\n\\n     <div fxFlex=\\\"20%\\\">\\n \\n  \\t<mat-card class=\\\"example-card\\\">\\n  <mat-card-header>\\n    <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n    <mat-card-title>Student</mat-card-title>\\n    <mat-card-subtitle>Class-1 <button mat-button>View</button></mat-card-subtitle>\\n     <mat-card-subtitle>Class-2 <button mat-button>View</button></mat-card-subtitle>\\n      <mat-card-subtitle>Class-3 <button mat-button>View</button></mat-card-subtitle>\\n  </mat-card-header>\\n</mat-card>\\n  </div></div>\\n</mat-sidenav-container>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<!-- <app-home></app-home>\\n <mat-sidenav-container>\\n   <p>\\n  Edit Student\\n</p>\\n <form name=\\\"studentData\\\" (submit)=\\\"submitEditStudent(postForm.form);\\\" #postForm=\\\"ngForm\\\" class=\\\"student-form\\\" *ngFor = \\\"let student of studentData\\\">\\n<div class=\\\"container\\\"\\n     fxLayout\\n     fxLayout.xs=\\\"column\\\"\\n     fxLayoutGap=\\\"10px\\\"\\n     fxLayoutGap.xs=\\\"0\\\" >\\n  <div class=\\\"item item-1\\\" fxFlex=\\\"15%\\\">\\n     <mat-form-field class=\\\"navigation-items\\\">\\n     <mat-label>Student Name</mat-label>       \\n    <mat-icon matPrefix class=\\\"icon\\\">face</mat-icon>\\n    <input matInput type=\\\"text\\\" name=\\\"first_name\\\" [(ngModel)]=\\\"student.first_name\\\" required minlength=\\\"4\\\" #first_name=\\\"ngModel\\\">\\n    <mat-error *ngIf=\\\"first_name.invalid\\\">Please enter first name.</mat-error>\\n  </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\n    <input matInput placeholder=\\\"Last Name\\\" name=\\\"last_name\\\" [(ngModel)]=\\\"student.last_name\\\" required minlength=\\\"5\\\" #last_name=\\\"ngModel\\\">\\n    <mat-error *ngIf=\\\"last_name.invalid\\\">Please enter last name.</mat-error>\\n  </mat-form-field>\\n  </div>\\n\\n   <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\n    <input matInput placeholder=\\\"Father Name\\\" name=\\\"father_name\\\" [(ngModel)]=\\\"student.father_name\\\" required minlength=\\\"4\\\" #father_name=\\\"ngModel\\\">\\n    <mat-error *ngIf=\\\"father_name.invalid\\\">Please enter father name.</mat-error>\\n  </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\n    <input matInput placeholder=\\\"Mother Name\\\" name=\\\"mother_name\\\" [(ngModel)]=\\\"student.mother_name\\\" required minlength=\\\"5\\\" #mother_name=\\\"ngModel\\\">\\n    <mat-error *ngIf=\\\"mother_name.invalid\\\">Please enter mother name.</mat-error>\\n  </mat-form-field>\\n  </div>\\n\\n</div>\\n\\n<div class=\\\"container\\\"\\n     fxLayout\\n     fxLayout.xs=\\\"column\\\"\\n     fxLayoutGap=\\\"10px\\\"\\n     fxLayoutGap.xs=\\\"0\\\">\\n  <div class=\\\"item item-1\\\" fxFlex=\\\"15%\\\">\\n     <mat-form-field class=\\\"navigation-items\\\">\\n     <mat-label>Gender</mat-label>       \\n    <mat-icon matPrefix class=\\\"icon\\\">sex</mat-icon>\\n    <mat-select placeholder=\\\"gender\\\"  name=\\\"gender\\\" [(ngModel)]=\\\"student.gender\\\" required #gender=\\\"ngModel\\\">\\n      <mat-option value=\\\"male\\\">Male</mat-option>\\n      <mat-option value=\\\"female\\\">Female</mat-option>\\n    </mat-select>\\n<mat-error *ngIf=\\\"gender.invalid\\\">Please select gender.</mat-error>\\n  </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n       <mat-label>Address</mat-label>  \\n    <mat-icon matPrefix class=\\\"icon\\\">place</mat-icon>\\n        <textarea matInput name=\\\"address\\\" [(ngModel)]=\\\"student.address\\\" required minlength=\\\"10\\\" #address=\\\"ngModel\\\"></textarea>\\n        <mat-error *ngIf=\\\"address.invalid\\\">Please enter address.</mat-error>\\n\\n  </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n       <mat-label>Phone</mat-label> \\n    <mat-icon matPrefix class=\\\"icon\\\">call</mat-icon>\\n    <input matInput placeholder=\\\"Contact\\\" name=\\\"contact_number\\\" [(ngModel)]=\\\"student.contact_number\\\" required minlength=\\\"9\\\" maxlength=\\\"11\\\" #contact_name=\\\"ngModel\\\">\\n     <mat-error *ngIf=\\\"contact_name.invalid\\\">Please enter contact.</mat-error>\\n  </mat-form-field>\\n  </div>\\n\\n</div>\\n\\n<div class=\\\"container\\\"\\n     fxLayout\\n     fxLayout.xs=\\\"column\\\"\\n     fxLayoutGap=\\\"10px\\\"\\n     fxLayoutGap.xs=\\\"0\\\">\\n  <div class=\\\"item item-1\\\" fxFlex=\\\"15%\\\">\\n     <mat-form-field class=\\\"navigation-items\\\">\\n     <mat-label>Email</mat-label>       \\n    <mat-icon matPrefix class=\\\"icon\\\">email</mat-icon>\\n    <input matInput value=\\\"\\\" [(ngModel)]=\\\"student.email\\\" name=\\\"email\\\"  required #email=\\\"ngModel\\\">\\n    <mat-error *ngIf=\\\"email.invalid\\\">Please enter valid email address.</mat-error>\\n   \\n  </mat-form-field>\\n  </div>\\n\\n<div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\n  <mat-form-field >\\n  <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\" name=\\\"dob\\\" [(ngModel)]=\\\"student.dob\\\" required #dob=\\\"ngModel\\\" >\\n<mat-datepicker-toggle matPrefix [for]=\\\"picker\\\">\\n  \\n</mat-datepicker-toggle>\\n<mat-datepicker #picker></mat-datepicker>\\n<mat-error *ngIf=\\\"dob.invalid\\\">Please enter dob.</mat-error>\\n</mat-form-field>\\n</div>\\n\\n</div>\\n<div class=\\\"container\\\"\\n     fxLayout\\n     fxLayout.xs=\\\"column\\\"\\n     fxLayoutAlign=\\\"left\\\"\\n     fxLayoutGap=\\\"10px\\\"\\n     fxLayoutGap.xs=\\\"0\\\">\\n  <div class=\\\"button-row\\\">\\n     <button type=\\\"submit\\\" mat-stroked-button color=\\\"primary\\\">Save</button>\\n      <button type=\\\"button\\\" (click)=\\\"goto()\\\" mat-raised-button color=\\\"primary\\\">Cancel</button>\\n\\n  </div>\\n  \\n\\n</div>\\n\\n</form>\\n</mat-sidenav-container> -->\\n\\n<app-home></app-home>\\n <mat-sidenav-container>\\n <form  name=\\\"editStudentData\\\" (submit)=\\\"submitEditStudent(postForm.form)\\\" #postForm=\\\"ngForm\\\"  class=\\\"student-form\\\" *ngFor = \\\"let student of studentData\\\">\\n<div class=\\\"container\\\"\\n     fxLayout\\n     fxLayout.xs=\\\"column\\\"\\n     fxLayoutGap=\\\"10px\\\"\\n     fxLayoutGap.xs=\\\"0\\\">\\n  <div class=\\\"item item-1\\\" fxFlex=\\\"15%\\\">\\n     <mat-form-field class=\\\"navigation-items\\\">\\n     <mat-label>Student Name</mat-label>       \\n    <mat-icon matPrefix class=\\\"icon\\\">face</mat-icon>\\n    <input matInput value=\\\"\\\" name=\\\"first_name\\\" [(ngModel)]=\\\"student.first_name\\\" #first_name=\\\"ngModel\\\" required>\\n     <mat-error *ngIf=\\\"first_name.invalid\\\">Please enter first name.</mat-error> \\n  </mat-form-field>\\n  </div>\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\n    <input matInput placeholder=\\\"Last Name\\\" name=\\\"last_name\\\" [(ngModel)]=\\\"student.last_name\\\" #last_name=\\\"ngModel\\\" required>\\n     <mat-error *ngIf=\\\"last_name.invalid\\\">Please enter last name.</mat-error> \\n  </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\n    <input matInput placeholder=\\\"Adhaar No\\\" name=\\\"adhaar_no\\\" [(ngModel)]=\\\"student.adhaar_no\\\" #adhaar_no=\\\"ngModel\\\" required>\\n     <mat-error *ngIf=\\\"adhaar_no.invalid\\\">Please enter last name.</mat-error> \\n    \\n  </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\n   <mat-select placeholder=\\\"Category\\\"  name=\\\"category\\\" [(ngModel)]=\\\"student.category\\\" #category=\\\"ngModel\\\">\\n      <mat-option value=\\\"OBC\\\">OBC</mat-option>\\n      <mat-option value=\\\"Gen\\\">Gen</mat-option>\\n      <mat-option value=\\\"SC\\\">SC</mat-option>\\n      <mat-option value=\\\"ST\\\">ST</mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n</div>\\n\\n<div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\n   <mat-select placeholder=\\\"Religion\\\"  name=\\\"religion\\\" [(ngModel)]=\\\"student.religion\\\" #religion=\\\"ngModel\\\">\\n      <mat-option value=\\\"HINDU\\\">HINDU</mat-option>\\n      <mat-option value=\\\"MUSLIM\\\">MUSLIM</mat-option>\\n      <mat-option value=\\\"SIKH\\\">SIKH</mat-option>\\n      <mat-option value=\\\"CHRISTIAN\\\">CHRISTIAN</mat-option>\\n      <mat-option value=\\\"BODH\\\">BODH</mat-option>\\n      <mat-option value=\\\"JAIN\\\">JAIN</mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n</div>\\n\\n<div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\n   <mat-select placeholder=\\\"Handicapped\\\"  name=\\\"handicapped\\\" [(ngModel)]=\\\"student.handicapped\\\" #handicapped=\\\"ngModel\\\">\\n      <mat-option value=\\\"YES\\\">Yes</mat-option>\\n      <mat-option value=\\\"NO\\\">No</mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n</div>\\n</div>\\n\\n<div class=\\\"container\\\"\\n     fxLayout\\n     fxLayout.xs=\\\"column\\\"\\n     fxLayoutGap=\\\"10px\\\"\\n     fxLayoutGap.xs=\\\"0\\\">\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\n    <input matInput placeholder=\\\"Father Name\\\" name=\\\"father_name\\\" [(ngModel)]=\\\"student.father_name\\\" #father_name=\\\"ngModel\\\" required>\\n     <mat-error *ngIf=\\\"father_name.invalid\\\">Please enter father name.</mat-error> \\n  </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\n    <input matInput placeholder=\\\"Father Qualification\\\" name=\\\"father_qualification\\\" [(ngModel)]=\\\"student.father_qualification\\\" #father_qualification=\\\"ngModel\\\" required>\\n     <mat-error *ngIf=\\\"father_qualification.invalid\\\">Please enter father Qualification.</mat-error> \\n     \\n  </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\n    <input matInput placeholder=\\\"Father Occupation\\\" name=\\\"father_occupation\\\" [(ngModel)]=\\\"student.father_occupation\\\" #father_occupation=\\\"ngModel\\\" required>\\n     <mat-error *ngIf=\\\"father_occupation.invalid\\\">Please enter father Occupation.</mat-error> \\n  </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\n    <input matInput placeholder=\\\"Mother Name\\\" name=\\\"mother_name\\\" [(ngModel)]=\\\"student.mother_name\\\" #mother_name=\\\"ngModel\\\" required>\\n    <mat-error *ngIf=\\\"mother_name.invalid\\\">Please enter mother name.</mat-error>\\n  </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\n    <input matInput placeholder=\\\"Mother Qualification\\\" name=\\\"mother_qualification\\\" [(ngModel)]=\\\"student.mother_qualification\\\" #mother_qualification=\\\"ngModel\\\">\\n     \\n  </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\n    <input matInput placeholder=\\\"Mother Occupation\\\" name=\\\"mother_occupation\\\" [(ngModel)]=\\\"student.mother_occupation\\\" #mother_occupation=\\\"ngModel\\\">\\n  </mat-form-field>\\n  </div>\\n  \\n</div>\\n\\n<div class=\\\"container\\\"\\n     fxLayout\\n     fxLayout.xs=\\\"column\\\"\\n     fxLayoutGap=\\\"10px\\\"\\n     fxLayoutGap.xs=\\\"0\\\">\\n  <div class=\\\"item item-1\\\" fxFlex=\\\"15%\\\">\\n     <mat-form-field class=\\\"navigation-items\\\">\\n     <mat-label>Gender</mat-label>       \\n    <mat-icon matPrefix class=\\\"icon\\\">sex</mat-icon>\\n    <mat-select placeholder=\\\"gender\\\"  name=\\\"gender\\\" [(ngModel)]=\\\"student.gender\\\" #gender=\\\"ngModel\\\" required>\\n      <mat-option value=\\\"male\\\">Male</mat-option>\\n      <mat-option value=\\\"female\\\">Female</mat-option>\\n    </mat-select>\\n<mat-error *ngIf=\\\"gender.invalid\\\">Please select gender.</mat-error> \\n  </mat-form-field>\\n  </div>\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n       <mat-label>Address</mat-label>  \\n    <mat-icon matPrefix class=\\\"icon\\\">place</mat-icon>\\n        <textarea matInput name=\\\"address\\\" [(ngModel)]=\\\"student.address\\\" #address=\\\"ngModel\\\" required></textarea>\\n         <mat-error *ngIf=\\\"address.invalid\\\">Please enter address.</mat-error>\\n\\n  </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n       <mat-label>Phone1</mat-label> \\n    <mat-icon matPrefix class=\\\"icon\\\">call</mat-icon>\\n    <input matInput placeholder=\\\"Contact\\\" name=\\\"contact_number\\\" [(ngModel)]=\\\"student.contact_number\\\" #contact_number=\\\"ngModel\\\" required>\\n      <mat-error *ngIf=\\\"contact_number.invalid\\\">Please enter contact.</mat-error> \\n  </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n       <mat-label>Phone2</mat-label> \\n    <mat-icon matPrefix class=\\\"icon\\\">call</mat-icon>\\n    <input matInput placeholder=\\\"Contact\\\" name=\\\"contact_number2\\\" [(ngModel)]=\\\"student.contact_number2\\\" #contact_number2=\\\"ngModel\\\">\\n  </mat-form-field>\\n  </div>\\n\\n   <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n       <mat-label>Annual Income</mat-label> \\n    <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\n    <input matInput placeholder=\\\"Income\\\" name=\\\"annual_income\\\" [(ngModel)]=\\\"student.annual_income\\\" #annual_income=\\\"ngModel\\\" required>\\n    <mat-error *ngIf=\\\"annual_income.invalid\\\">Please enter annual income.</mat-error> \\n  </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\n   <mat-select placeholder=\\\"miniority\\\"  name=\\\"miniority\\\" [(ngModel)]=\\\"student.miniority\\\" #miniority=\\\"ngModel\\\">\\n      <mat-option value=\\\"YES\\\">Yes</mat-option>\\n      <mat-option value=\\\"NO\\\">No</mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n</div>\\n\\n</div>\\n\\n<div class=\\\"container\\\"\\n     fxLayout\\n     fxLayout.xs=\\\"column\\\"\\n     fxLayoutGap=\\\"10px\\\"\\n     fxLayoutGap.xs=\\\"0\\\">\\n  <div class=\\\"item item-1\\\" fxFlex=\\\"15%\\\">\\n     <mat-form-field class=\\\"navigation-items\\\">\\n     <mat-label>Email</mat-label>       \\n    <mat-icon matPrefix class=\\\"icon\\\">email</mat-icon>\\n    <input matInput value=\\\"\\\" name=\\\"email\\\" [(ngModel)]=\\\"student.email\\\" #email=\\\"ngModel\\\" required>\\n     <mat-error *ngIf=\\\"email.invalid\\\">Please enter valid email address.</mat-error> \\n   \\n  </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\n   <mat-select placeholder=\\\"Only Child\\\"  name=\\\"only_child\\\" [(ngModel)]=\\\"student.only_child\\\" #only_child=\\\"ngModel\\\">\\n      <mat-option value=\\\"YES\\\">Yes</mat-option>\\n      <mat-option value=\\\"NO\\\">No</mat-option>\\n    </mat-select>\\n\\n     <mat-error *ngIf=\\\"only_child.invalid\\\">Please enter only_child.</mat-error> \\n  </mat-form-field>\\n</div>\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"DOB\\\" name=\\\"dob\\\" [(ngModel)]=\\\"student.dob\\\" #dob=\\\"ngModel\\\" required>\\n  <mat-datepicker-toggle matPrefix [for]=\\\"picker\\\">\\n    \\n  </mat-datepicker-toggle>\\n  <mat-datepicker #picker></mat-datepicker>\\n   <mat-error *ngIf=\\\"dob.invalid\\\">Please enter dob.</mat-error> \\n  </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-icon matPrefix class=\\\"icon\\\">book</mat-icon>\\n    <mat-select placeholder=\\\"Class\\\"  name=\\\"class\\\" [(ngModel)]=\\\"student.class\\\" #class=\\\"ngModel\\\" required>\\n      <mat-option *ngFor=\\\"let class of classData;\\\" value=\\\"{{class.id}}\\\">{{class.name}}</mat-option>\\n    </mat-select>\\n     <mat-error *ngIf=\\\"class.invalid\\\">Please select class.</mat-error> \\n  </mat-form-field>\\n  </div>\\n<div class=\\\"item item-1\\\" fxFlex=\\\"15%\\\">\\n    <button mat-stroked-button  type=\\\"button\\\" color=\\\"primary\\\" (click)=\\\"filePicker.click()\\\">Pick Image</button>\\n    <input type=\\\"file\\\"  style=\\\"display: none;\\\" #filePicker (change)=\\\"onImagePicked($event)\\\">\\n  </div>\\n  <div class=\\\"image-preview\\\" *ngIf=\\\"imagePreview !='' && imagePreview\\\">\\n    <img [src]=\\\"imagePreview\\\" [alt]=\\\"form.value.first_name\\\">\\n  </div>\\n</div>\\n\\n<div class=\\\"container\\\"\\n     fxLayout\\n     fxLayout.xs=\\\"column\\\"\\n     fxLayoutAlign=\\\"left\\\"\\n     fxLayoutGap=\\\"10px\\\"\\n     fxLayoutGap.xs=\\\"0\\\">\\n  <div class=\\\"button-row\\\">\\n     <button type=\\\"submit\\\" mat-stroked-button color=\\\"primary\\\">Save</button>\\n      <button mat-raised-button color=\\\"primary\\\">Reset</button>\\n\\n  </div>\\n  \\n\\n</div>\\n\\n</form>\\n</mat-sidenav-container>\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl,NgForm,Validators} from '@angular/forms';\nimport { RestService } from '../rest.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { CLASSES } from '../class';\nimport { DatePipe } from '@angular/common';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-edit-student',\n  templateUrl: './edit-student.component.html',\n  styleUrls: ['./edit-student.component.css']\n})\nexport class EditStudentComponent implements OnInit {\n    studentData: any = {};\n    editStudentId;\n\tprivate sub: any;\n    editStudentData;\n    classData = CLASSES ;\n\n  constructor(public rest: RestService,private route:  ActivatedRoute,private router: Router) { }\n\n  ngOnInit() {\n  \t\n     this.sub = this.route.params.subscribe(params => {\n    console.log(\"std id: \"+[params['id']]);\n    this.editStudentId = params['id'];\n    this.rest.getStudentsById(params['id']).then((response) => {\n    console.log(\"res KV: \",response);\n    this.studentData = response ;\n    console.log(\"studentData edit :\",this.studentData);\n    });\n  });\n  }\n\n   submitEditStudent(form: NgForm) {\n    if(form.invalid){\n    return;\n    }\n    console.log(\"edit form :\",form);\n    let keys = Object.keys(form.controls);\n    //form.value.dob = (form.value.dob).toString();\n    let values = Object.values(form.value);\n    //let classValue = Object.values(form.value.class) ;\n    this.rest.update('students',this.editStudentId,form.value).then((response) => {\n       alert(\"Student Edited !!\");\n       this.router.navigate(['/liststudent']);\n    });\n  }\n}\n\n","import firebase from \"firebase\";\nexport class FirebaseWrapper {\n\n  constructor(){\n    let config = {\n    apiKey: \"AIzaSyD9B2YdN4gAPqryKSiHRQocPc9kA_ZSFLY\",\n    authDomain: \"jhoraapp.firebaseapp.com\",\n    databaseURL: \"https://jhoraapp.firebaseio.com\",\n    projectId: \"jhoraapp\",\n    storageBucket: \"jhoraapp.appspot.com\",\n    messagingSenderId: \"105398319929\"\n  };\n    firebase.initializeApp(config);\n    this.fireStore = firebase.firestore();\n  }\n\n  uuidv4() {\n    let x = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c)=> {\n      var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n    return Math.floor(new Date() / 1000)+\"-\"+ x;\n  }\n\n  login(body){\n    return firebase.auth().signInWithEmailAndPassword(body.username, body.password).then(function() {\n      return  firebase.auth().currentUser;\n    });\n  }\n\n  logout(){\n\n  }\n\n  addStudent(student){\n    return this.fireStore.collection('students').where('class', '==', student.class).get().then((students)=>{\n       return students.size || students.length;\n    })\n    .then((data)=>{\n      data ? (student.roll_number = data +1) : (student.roll_number = 1);\n      let uId = this.uuidv4();\n      student.uId = uId;\n      return this.fireStore.collection('students').doc(uId).set(student)\n    })\n  }\n\n  addReceipt(receipt){\n    let uId = this.uuidv4();\n      receipt.uId = uId;\n      console.log(\"firebase: \",receipt);\n      return this.fireStore.collection('receipt').doc(uId).set(receipt)\n\n  }\n\n  selectAll(tableName){\n    let p = new Promise( (resolve, reject)=>{\n      this.fireStore.collection(tableName).get()\n      .then((snapshots) => {\n        let rows = []\n        snapshots.forEach((doc) => {\n          let data = doc.data();\n          rows.push(data)\n        })\n        resolve(rows)\n      })\n    });\n    return p;\n  }\n\n  insert(tableName ='', docName, data){\n    let p = new Promise( (resolve, reject)=>{\n      resolve(this.fireStore.collection(tableName).doc(docName).set(data));\n    });\n    return p;\n  }\n\n  update(tableName, docName, data){\n    let p = new Promise( (resolve, reject)=>{\n      resolve(this.fireStore.collection(tableName).doc(docName).update(data));\n    });\n    return p;\n  }\n\n  selectAllById(tableName,id){\n    let p = new Promise( (resolve, reject)=>{\n      this.fireStore.collection(tableName).where('uId', '==', id).get()\n      .then((snapshots) => {\n        let rows = []\n        snapshots.forEach((doc) => {\n          let data = doc.data();\n          rows.push(data)\n        })\n        resolve(rows)\n      })\n    });\n    return p;\n  }\n\n  deleteData(tableName, docName){\n    let p = new Promise( (resolve, reject)=>{\n      resolve(this.fireStore.collection(tableName).doc(docName).delete());\n    });\n    return p;\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<mat-sidenav-container>\\n <mat-sidenav-content>\\n   <mat-toolbar color=\\\"primary\\\">\\n    <div fxHide.gt-xs>\\n      <button mat-icon-button>\\n       <mat-icon>menu</mat-icon>\\n     </button>\\n   </div>\\n   <div>\\n    <a>\\n     Daksh International Daniyari\\n   </a>\\n </div>\\n <div fxFlex fxLayout fxLayoutAlign=\\\"flex-end\\\"  fxHide.xs>\\n   <ul fxLayout fxLayoutGap=\\\"20px\\\" class=\\\"navigation-items\\\">\\n     <!-- <li>\\n       <a mat-list-item\\n       [routerLink]=\\\"['/login']\\\">\\n       <mat-icon>input</mat-icon>&nbsp;\\n       <span  class=\\\"label\\\">Login</span>\\n     </a>\\n        </li> -->\\n\\n   <li [matMenuTriggerFor]=\\\"student\\\"  #matMenuTrigger1=\\\"matMenuTrigger\\\">\\n     <a mat-list-item (mouseenter)=\\\"matMenuTrigger1.openMenu()\\\">\\n       <mat-icon class=\\\"icon\\\">people</mat-icon>&nbsp;\\n       <span class=\\\"label\\\">Student</span>\\n     </a>\\n     <mat-menu #student=\\\"matMenu\\\" (mouseleave)=\\\"matMenuTrigger1.closeMenu()\\\" [overlapTrigger]=\\\"false\\\">\\n       <button mat-menu-item [routerLink]=\\\"['/student']\\\">Add Student</button>\\n       <button mat-menu-item [routerLink]=\\\"['/liststudent']\\\">View Student</button>\\n       <button mat-menu-item [routerLink]=\\\"['/attendance']\\\">Attendance</button>\\n       <button mat-menu-item [routerLink]=\\\"['/attendanceView']\\\">View Attendance</button>\\n     </mat-menu>\\n   </li>\\n   <li [matMenuTriggerFor]=\\\"books\\\"  #matMenuTrigger3=\\\"matMenuTrigger\\\">\\n     <a mat-list-item (mouseenter)=\\\"matMenuTrigger3.openMenu()\\\">\\n       <mat-icon class=\\\"icon\\\">book</mat-icon>&nbsp;\\n       <span class=\\\"label\\\">Books</span>\\n     </a>\\n     <mat-menu #books=\\\"matMenu\\\" (mouseleave)=\\\"matMenuTrigger1.closeMenu()\\\" [overlapTrigger]=\\\"false\\\">\\n       <button mat-menu-item [routerLink]=\\\"['/bookAdd']\\\">Add Books</button>\\n       <button mat-menu-item [routerLink]=\\\"['/bookView']\\\">View Books</button>\\n       <button mat-menu-item [routerLink]=\\\"['/issueBook']\\\">Add Library</button>\\n       <button mat-menu-item [routerLink]=\\\"['/issuedBooksView']\\\">View Library</button>\\n     </mat-menu>\\n   </li>\\n\\n   <li [matMenuTriggerFor]=\\\"receipt\\\" #matMenuTrigger2=\\\"matMenuTrigger\\\">\\n     <a mat-list-item (mouseenter)=\\\"matMenuTrigger2.openMenu()\\\">\\n       <mat-icon class=\\\"icon\\\">receipt</mat-icon>&nbsp;\\n       <span class=\\\"label\\\">Receipt</span>\\n     </a>\\n     <mat-menu #receipt=\\\"matMenu\\\" (mouseleave)=\\\"matMenuTrigger2.closeMenu()\\\" [overlapTrigger]=\\\"false\\\">\\n       <button mat-menu-item [routerLink]=\\\"['/receipt']\\\">Add Receipt</button>\\n       <button mat-menu-item [routerLink]=\\\"['/receiptList']\\\">View Receipt</button>\\n     </mat-menu>\\n   </li>\\n\\n <li>\\n   <a mat-list-item\\n   [routerLink]=\\\"['/dashboard']\\\">\\n   <mat-icon class=\\\"icon\\\">dashboard</mat-icon>&nbsp;\\n   <span class=\\\"label\\\">Dashboard</span>\\n </a>\\n</li>\\n<li>\\n <a mat-list-item\\n   [routerLink]=\\\"['/login']\\\">\\n   <mat-icon class=\\\"icon\\\">input</mat-icon>&nbsp;\\n   <span class=\\\"label\\\">LogOut</span>\\n </a>\\n</li>\\n</ul>\\n</div>\\n</mat-toolbar>\\n<main>\\n</main>\\n</mat-sidenav-content>\\n</mat-sidenav-container>\\n<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<app-home></app-home>\\n<p>\\n  library works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-library',\n  templateUrl: './library.component.html',\n  styleUrls: ['./library.component.css']\n})\nexport class LibraryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<h2 mat-dialog-title>Delete Student</h2>\\n<mat-dialog-content>Are you sure?</mat-dialog-content>\\n<mat-dialog-actions>\\n  <button mat-button mat-dialog-close>No</button>\\n  <!-- The mat-dialog-close directive optionally accepts a value as a result for the dialog. -->\\n  <button mat-button [mat-dialog-close]=\\\"true\\\" (click)=\\\"deleteStudent(data.studentId)\\\" >Yes</button>\\n</mat-dialog-actions>\"","module.exports = \"mat-header-cell {\\n\\tcolor: #3F51B5;\\n\\tfont-family: courier; \\n\\tfont-size: 100%;\\n}\\nmat-icon {\\n\\tcolor: #3F51B5;\\n}\"","module.exports = \"<app-home></app-home>\\n<mat-form-field>\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n    </mat-form-field>\\n<mat-table #table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\">\\n\\n  <!-- Position Column -->\\n  <ng-container matColumnDef=\\\"roll_number\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Roll Number</mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element \\\">{{element.roll_number }} \\n            </mat-cell>\\n        </ng-container>\\n\\n  <ng-container matColumnDef=\\\"first_name\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Name</mat-header-cell>\\n            <mat-cell  *matCellDef=\\\"let element \\\"><a href=\\\"\\\" [routerLink]=\\\"['/studentDetail',element.uId]\\\">{{element.first_name | titlecase }} </a>\\n            </mat-cell>\\n        </ng-container>\\n\\n  <!-- Name Column -->\\n  <ng-container matColumnDef=\\\"father_name\\\">\\n    <mat-header-cell *matHeaderCellDef mat-sort-header> Father Name </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\"> {{element.father_name | titlecase }} </mat-cell>\\n  </ng-container>\\n\\n  <!-- Weight Column -->\\n  <ng-container matColumnDef=\\\"mother_name\\\">\\n    <mat-header-cell  *matHeaderCellDef mat-sort-header> Mother Name </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\"> {{element.mother_name | titlecase }} </mat-cell>\\n  </ng-container>\\n\\n  <!-- Symbol Column -->\\n  <ng-container matColumnDef=\\\"class\\\">\\n    <mat-header-cell *matHeaderCellDef mat-sort-header> Class </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\"> {{element.class}} </mat-cell>\\n  </ng-container>\\n\\n<ng-container matColumnDef=\\\"dob\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>DOB</mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element \\\">  {{element.dob | date}}\\n            </mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"uId\\\">\\n            <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\\n            <mat-cell [routerLink]=\\\"['/student',element.uId]\\\" *matCellDef=\\\"let element\\\"><mat-icon  matTooltip=\\\"Edit Student\\\" matPrefix class=\\\"icon\\\">edit</mat-icon> <mat-icon (click)=\\\"openDialog(element)\\\" matTooltip=\\\"Delete Student\\\" matPrefix class=\\\"icon\\\">delete</mat-icon>\\n            </mat-cell>\\n        </ng-container>\\n\\n  <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n  <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n</mat-table>\\n<router-outlet></router-outlet>\\n\"","import { Component, OnInit,Inject,ViewChild } from '@angular/core';\nimport { RestService } from '../rest.service';\nimport { MatDialog, MAT_DIALOG_DATA ,MatTableDataSource,MatSort} from '@angular/material';\nimport { Router } from '@angular/router';\n\nexport interface DialogData {\n  studentId;\n}\n\n@Component({\n  selector: 'app-list-student',\n  templateUrl: './list-student.component.html',\n  styleUrls: ['./list-student.component.css']\n})\nexport class ListStudentComponent implements OnInit {\nstudentList;\ndataSource ;\ndisplayedColumns = ['roll_number','first_name','father_name','mother_name','class','dob','uId'];\n\n\n  constructor( public rest: RestService, public dialog: MatDialog) {}\n openDialog(studentData) {\n    console.log(\"studentData console: \",studentData);\n    const dialogRef = this.dialog.open(DialogContent, {\n      data: {\n        studentId: studentData.uId\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(`Dialog result: ${result}`);\n      console.log(\"Dialog result: \",result);\n    });\n  }\n\n@ViewChild(MatSort) sort: MatSort;\n  ngOnInit() {\n    this.rest.getStudents().then((response) => {\n    console.log(\"res KV: \",response);\n    this.dataSource = new MatTableDataSource(response);\n    console.log(\"dataSource mat:\",this.dataSource);\n    this.dataSource.sort = this.sort;\n  });\n    \n  }\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n}\n\n@Component({\n  selector: 'dialog-content-example-dialog',\n  templateUrl: 'delete_dialog.html',\n})\nexport class DialogContent {\n  constructor(@Inject(MAT_DIALOG_DATA) public data: DialogData,public rest: RestService,private router: Router) {}\n  deleteStudent(id) {\n   console.log(\"delete : \"+id);\n     this.rest.delete(\"students\",id).then((response) => {\n       alert(\"Student deleted.\");\n       this.rest.getStudents().then((response) => {\n    console.log(\"res KV getStudents: \",response);\n\n});\n       this.router.navigate(['/liststudent']);\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<!-- <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\">\\n  <form name=\\\"loginForm\\\" (submit)=\\\"getLoggedIn(postForm)\\\" #postForm=\\\"ngForm\\\">\\n<mat-card>\\n   <mat-card-header color=\\\"primary\\\">\\n     <mat-card-title>Login</mat-card-title>\\n   </mat-card-header>\\n   <mat-card-content>\\n     <form class=\\\"example-form\\\">\\n       <table class=\\\"example-full-width\\\" cellspacing=\\\"0\\\">\\n         <tr>\\n           <td>\\n             <mat-form-field>\\n               <mat-icon matPrefix class=\\\"icon\\\">email</mat-icon>\\n             <input matInput placeholder=\\\"Username\\\" ngModel name=\\\"username\\\" #username=\\\"ngModel\\\" minlength=\\\"5\\\" required>\\n                          <mat-error *ngIf=\\\"username.invalid\\\">Please enter last name.</mat-error>\\n\\n             <input matInput placeholder=\\\"Username\\\" ngModel name=\\\"username\\\" #username=\\\"ngModel\\\" minlength=\\\"5\\\" required>\\n             <mat-error *ngIf=\\\"username.invalid\\\">Please enter User Name.</mat-error>\\n             </mat-form-field>\\n           </td>\\n         </tr>\\n         <tr>\\n         <td><mat-form-field>\\n           <mat-icon matPrefix class=\\\"icon\\\">lock</mat-icon>\\n           <input matInput placeholder=\\\"Password\\\" ngModel type=\\\"password\\\" name=\\\"password\\\" #password=\\\"ngModel\\\" minlength=\\\"5\\\" required>\\n           <mat-error *ngIf=\\\"password.invalid\\\">Please enter Password.</mat-error>\\n         </mat-form-field>\\n       </td>\\n       </tr></table>\\n     </form>\\n   </mat-card-content>\\n   <div style=\\\"margin-left:70px;\\\">\\n   <mat-card-actions>\\n     <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\">Login</button>\\n   </mat-card-actions>\\n</div>\\n </mat-card>\\n</form>\\n</div>\\n -->\\n\\n\\n <!-- <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\">\\n    <form class=\\\"example-form\\\" name=\\\"loginData\\\" (submit)=\\\"getLoggedIn(postForm)\\\" #postForm=\\\"ngForm\\\">\\n <mat-card>\\n   <mat-card-header color=\\\"primary\\\">\\n     <mat-card-title>Login</mat-card-title>\\n   </mat-card-header>\\n   <mat-card-content>\\n   \\n       <table class=\\\"example-full-width\\\" cellspacing=\\\"0\\\">\\n         <tr>\\n           <td>\\n             <mat-form-field>\\n              <mat-icon matPrefix class=\\\"icon\\\">email</mat-icon>\\n             <input matInput placeholder=\\\"Username\\\" ngModel name=\\\"username\\\" #username=\\\"ngModel\\\" minlength=\\\"5\\\" required>\\n             <mat-error *ngIf=\\\"username.invalid\\\">Please enter last name.</mat-error>\\n             </mat-form-field>\\n           </td>\\n         </tr>\\n         <tr>\\n         <td><mat-form-field>\\n          <mat-icon matPrefix class=\\\"icon\\\">lock</mat-icon>\\n           <input matInput placeholder=\\\"Password\\\" ngModel type=\\\"password\\\" name=\\\"password\\\" #password=\\\"ngModel\\\" required>\\n         </mat-form-field></td>\\n       </tr></table>\\n     \\n   </mat-card-content>\\n   <div style=\\\"margin-left:70px;\\\">\\n   <mat-card-actions>\\n     <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\">Login</button>\\n   </mat-card-actions>\\n </div>\\n </mat-card>\\n </form>\\n </div> -->\\n\\n\\n <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\">\\n    <form class=\\\"example-form\\\" name=\\\"loginData\\\" (submit)=\\\"getLoggedIn(postForm)\\\" #postForm=\\\"ngForm\\\">\\n<mat-card>\\n   <mat-card-header color=\\\"primary\\\">\\n     <mat-card-title>Login</mat-card-title>\\n   </mat-card-header>\\n   <mat-card-content>\\n   \\n       <table class=\\\"example-full-width\\\" cellspacing=\\\"0\\\">\\n         <tr>\\n           <td>\\n             <mat-form-field>\\n              <mat-icon matPrefix class=\\\"icon\\\">email</mat-icon>\\n             <input matInput placeholder=\\\"Username\\\" ngModel name=\\\"username\\\" #username=\\\"ngModel\\\" minlength=\\\"5\\\" required>\\n             <mat-error *ngIf=\\\"username.invalid\\\">Please enter user name.</mat-error>\\n             </mat-form-field>\\n           </td>\\n         </tr>\\n         <tr>\\n         <td><mat-form-field>\\n          <mat-icon matPrefix class=\\\"icon\\\">lock</mat-icon>\\n           <input matInput placeholder=\\\"Password\\\" ngModel type=\\\"password\\\" name=\\\"password\\\" #password=\\\"ngModel\\\" required>\\n            <mat-error *ngIf=\\\"password.invalid\\\">Please enter password.</mat-error>\\n         </mat-form-field></td>\\n       </tr></table>\\n     \\n   </mat-card-content>\\n   <div style=\\\"margin-left:70px;\\\">\\n   <mat-card-actions>\\n     <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\">Login</button>\\n   </mat-card-actions>\\n</div>\\n </mat-card>\\n</form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { RestService } from '../rest.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private router: Router,private api:RestService) { }\n\n  ngOnInit() { }\n\n  getLoggedIn(form:NgForm){\n  \tif(form.invalid){\n  \t\treturn;\n  \t}\n\n    this.api.postLogin(form.value).then((response)=>{\n  \t     console.log(\"response: \",response);\n         this.router.navigateByUrl('/home');\n  \t});\n  }\n}\n","module.exports = \"<h2 mat-dialog-title>Delete Student</h2>\\n<mat-dialog-content>Are you sure?</mat-dialog-content>\\n<mat-dialog-actions>\\n  <button mat-button mat-dialog-close>No</button>\\n  <!-- The mat-dialog-close directive optionally accepts a value as a result for the dialog. -->\\n  <button mat-button [mat-dialog-close]=\\\"true\\\" (click)=\\\"deleteReceipt(data.receiptId)\\\" >Yes</button>\\n</mat-dialog-actions>\"","module.exports = \"\\n\\n<app-home></app-home>\\n<h4>Edit Receipt</h4>\\n<mat-sidenav-container>\\n <form  name=\\\"receiptData\\\" (submit)=\\\"updateStudentFee(postForm.form)\\\" #postForm=\\\"ngForm\\\" *ngFor=\\\"let receipt of editReceiptData\\\">\\n<div class=\\\"container\\\"\\n     fxLayout\\n     fxLayout.xs=\\\"column\\\"\\n     fxLayoutGap=\\\"10px\\\"\\n     fxLayoutGap.xs=\\\"0\\\">\\n\\n      <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-label>Session</mat-label>       \\n    <mat-icon matPrefix class=\\\"icon\\\">face</mat-icon>\\n    <input matInput value=\\\"\\\" name=\\\"session\\\" [(ngModel)]=\\\"receipt.session\\\" #session=\\\"ngModel\\\" required>\\n    <mat-error *ngIf=\\\"session.invalid\\\">Please enter session.</mat-error>\\n  </mat-form-field>\\n  </div>\\n\\n<div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-icon matPrefix class=\\\"icon\\\">book</mat-icon>\\n    <input matInput value=\\\"\\\" name=\\\"class\\\" [(ngModel)]=\\\"receipt.class\\\" #class=\\\"ngModel\\\" readonly>\\n    \\n  </mat-form-field>\\n  </div>\\n\\n    <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-label>Student Name</mat-label>       \\n    <mat-icon matPrefix class=\\\"icon\\\">face</mat-icon>\\n    <input matInput name=\\\"student_name\\\" [(ngModel)]=\\\"receipt.student_name\\\" #student_name=\\\"ngModel\\\" required>\\n    <mat-error *ngIf=\\\"student_name.invalid\\\">Please enter student name.</mat-error>\\n  </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-label>Mother Name</mat-label>       \\n    <mat-icon matPrefix class=\\\"icon\\\">face</mat-icon>\\n    <input matInput value=\\\"\\\" name=\\\"mother_name\\\" [(ngModel)]=\\\"receipt.mother_name\\\" #mother_name=\\\"ngModel\\\" required>\\n    <mat-error *ngIf=\\\"mother_name.invalid\\\">Please enter mother name.</mat-error>\\n  </mat-form-field>\\n  </div>\\n\\n\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-label>Father Name</mat-label>       \\n    <mat-icon matPrefix class=\\\"icon\\\">face</mat-icon>\\n    <input matInput value=\\\"\\\" name=\\\"father_name\\\" [(ngModel)]=\\\"receipt.father_name\\\" #father_name=\\\"ngModel\\\" required>\\n    <mat-error *ngIf=\\\"father_name.invalid\\\">Please enter father name.</mat-error>\\n  </mat-form-field>\\n  </div>\\n\\n   <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-label>SNo.</mat-label>       \\n    <mat-icon matPrefix class=\\\"icon\\\">face</mat-icon>\\n    <input matInput type=\\\"number\\\" name=\\\"sno\\\" [(ngModel)]=\\\"receipt.sno\\\" #sno=\\\"ngModel\\\">\\n  </mat-form-field>\\n  </div>\\n</div>\\n\\n\\n<div class=\\\"container\\\"\\n     fxLayout\\n     fxLayout.xs=\\\"column\\\"\\n     fxLayoutGap=\\\"10px\\\"\\n     fxLayoutGap.xs=\\\"0\\\">\\n\\n \\n\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-icon matPrefix class=\\\"icon\\\">date_range</mat-icon>\\t\\n    <input matInput name=\\\"searchDate\\\" [(ngModel)]=\\\"receipt.searchDate\\\" #searchDate=\\\"ngModel\\\" readonly >\\n    </mat-form-field>\\n  </div>\\n</div>\\n\\n<div class=\\\"container\\\"\\n     fxLayout\\n     fxLayout.xs=\\\"column\\\"\\n     fxLayoutGap=\\\"10px\\\"\\n     fxLayoutGap.xs=\\\"0\\\">\\n    <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-label>Pre Balance</mat-label>       \\n    <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\n    <input matInput type=\\\"number\\\" name=\\\"pre_bal\\\" [(ngModel)]=\\\"receipt.pre_bal\\\" #pre_bal=\\\"ngModel\\\" (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\n    \\n  </mat-form-field>\\n  </div>\\n\\n    <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-label>Form Chargs.</mat-label>       \\n    <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\n    <input matInput type=\\\"number\\\" name=\\\"form_chrgs\\\" [(ngModel)]=\\\"receipt.form_chrgs\\\" #form_chrgs=\\\"ngModel\\\" (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\n    \\n  </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-label>Admission Fee</mat-label>       \\n    <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\n    <input matInput type=\\\"number\\\" name=\\\"adm_fee\\\" [(ngModel)]=\\\"receipt.adm_fee\\\" #adm_fee=\\\"ngModel\\\" required (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\n    <mat-error *ngIf=\\\"adm_fee.invalid\\\">Please enter Admission Fee.</mat-error>\\n  </mat-form-field>\\n  </div>\\n\\n\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-label>Dearness Fee</mat-label>       \\n    <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\n    <input matInput type=\\\"number\\\" name=\\\"dearness_fee\\\" [(ngModel)]=\\\"receipt.dearness_fee\\\" #dearness_fee=\\\"ngModel\\\" required (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\n    <mat-error *ngIf=\\\"dearness_fee.invalid\\\">Please enter dearness fee.</mat-error>\\n  </mat-form-field>\\n  </div>\\n\\n   <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-label>Devlop Fee</mat-label>       \\n    <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\n    <input matInput type=\\\"number\\\" name=\\\"dev_fee\\\" [(ngModel)]=\\\"receipt.dev_fee\\\" #dev_fee=\\\"ngModel\\\" (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\n  </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-label>Electric Fee.</mat-label>       \\n    <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\n    <input matInput type=\\\"number\\\" name=\\\"elec_fee\\\" [(ngModel)]=\\\"receipt.elec_fee\\\" #elec_fee=\\\"ngModel\\\" (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\n  </mat-form-field>\\n  </div>\\n\\n </div>\\n\\n <div class=\\\"container\\\"\\n     fxLayout\\n     fxLayout.xs=\\\"column\\\"\\n     fxLayoutGap=\\\"10px\\\"\\n     fxLayoutGap.xs=\\\"0\\\">\\n\\n      <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-label>Library Fee</mat-label>       \\n    <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\n    <input matInput type=\\\"number\\\" name=\\\"lib_fee\\\" [(ngModel)]=\\\"receipt.lib_fee\\\" #lib_fee=\\\"ngModel\\\" (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\n    \\n  </mat-form-field>\\n  </div>\\n\\n    <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-label>Lab Fee</mat-label>       \\n    <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\n    <input matInput type=\\\"number\\\" name=\\\"lab_fee\\\" [(ngModel)]=\\\"receipt.lab_fee\\\" #lab_fee=\\\"ngModel\\\" (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\n    \\n  </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-label>Music Fee</mat-label>       \\n    <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\n    <input matInput type=\\\"number\\\" name=\\\"music_fee\\\" [(ngModel)]=\\\"receipt.music_fee\\\" #music_fee=\\\"ngModel\\\" (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\n    \\n  </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-label>Annual Func Chrgs</mat-label>       \\n    <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\n    <input matInput type=\\\"number\\\" name=\\\"annual_func_fee\\\" [(ngModel)]=\\\"receipt.annual_func_fee\\\" #annual_func_fee=\\\"ngModel\\\" (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\n  </mat-form-field>\\n  </div>\\n\\n   <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-label>Exam Fee</mat-label>       \\n    <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\n    <input matInput type=\\\"number\\\" name=\\\"exam_fee\\\" [(ngModel)]=\\\"receipt.exam_fee\\\" #exam_fee=\\\"ngModel\\\" (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\n  </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-label>S Class Fee.</mat-label>       \\n    <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\n    <input matInput type=\\\"number\\\" name=\\\"sclass\\\" [(ngModel)]=\\\"receipt.sclass\\\" #sclass=\\\"ngModel\\\" (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\n  </mat-form-field>\\n  </div>\\n\\n  \\n </div>\\n\\n <div class=\\\"container\\\"\\n     fxLayout\\n     fxLayout.xs=\\\"column\\\"\\n     fxLayoutGap=\\\"10px\\\"\\n     fxLayoutGap.xs=\\\"0\\\">\\n\\n     <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n      <mat-form-field >\\n      <mat-label>Tuition Fee</mat-label>       \\n      <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\n      <input matInput type=\\\"number\\\" name=\\\"tution_fee\\\" [(ngModel)]=\\\"receipt.tution_fee\\\" #tution_fee=\\\"ngModel\\\" (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\n      <!-- <mat-error *ngIf=\\\"form.get('tution_fee').invalid\\\">Please enter tution fee.</mat-error> -->\\n      </mat-form-field>\\n      </div>\\n\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n      <mat-form-field >\\n      <mat-label>Activity Fee</mat-label>       \\n      <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\n      <input matInput type=\\\"number\\\" name=\\\"acti_fee\\\" [(ngModel)]=\\\"receipt.acti_fee\\\" #acti_fee=\\\"ngModel\\\" (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\n      </mat-form-field>\\n      </div>\\n\\n      <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n      <mat-form-field >\\n      <mat-label>Month</mat-label>       \\n      <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\n      <mat-select placeholder=\\\"Month\\\" name=\\\"monthName\\\"  [(ngModel)]=\\\"receipt.monthName\\\" #monthName=\\\"ngModel\\\">\\n      <mat-option value=\\\"January\\\">January</mat-option>\\n      <mat-option value=\\\"February\\\">February</mat-option>\\n      <mat-option value=\\\"March\\\">March</mat-option>\\n      <mat-option value=\\\"April\\\">April</mat-option>\\n      <mat-option value=\\\"May\\\">May</mat-option>\\n      <mat-option value=\\\"June\\\">June</mat-option>\\n      <mat-option value=\\\"July\\\">July</mat-option>\\n      <mat-option value=\\\"August\\\">August</mat-option>\\n      <mat-option value=\\\"September\\\">September</mat-option>\\n      <mat-option value=\\\"October\\\">October</mat-option>\\n      <mat-option value=\\\"November\\\">November</mat-option>\\n      <mat-option value=\\\"December\\\">December</mat-option>\\n  </mat-select>\\n      </mat-form-field>\\n      </div>\\n\\n        <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n      <mat-form-field >\\n      <mat-label>Late Fee(if any)</mat-label>       \\n      <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon> \\n      <input matInput type=\\\"number\\\" name=\\\"late_fee\\\" [(ngModel)]=\\\"receipt.late_fee\\\" #late_fee=\\\"ngModel\\\" (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\n      </mat-form-field>\\n      </div>\\n</div>\\n\\n <div class=\\\"container\\\"\\n     fxLayout\\n     fxLayout.xs=\\\"column\\\"\\n     fxLayoutGap=\\\"10px\\\"\\n     fxLayoutGap.xs=\\\"0\\\">\\n      \\n       <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n      <mat-form-field >\\n      <mat-label>Total Amount</mat-label>       \\n      <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\n      <input matInput type=\\\"number\\\" name=\\\"total_amount\\\" [(ngModel)]=\\\"receipt.total_amount\\\" #total_amount=\\\"ngModel\\\" required>\\n      <mat-error *ngIf=\\\"total_amount.invalid\\\">Please enter total amount.</mat-error>\\n      </mat-form-field>\\n      </div>\\n\\n       <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n      <mat-form-field >\\n      <mat-label>Amount Deposite</mat-label>       \\n      <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\n      <input matInput type=\\\"number\\\" name=\\\"amt_deposite\\\" [(ngModel)]=\\\"receipt.amt_deposite\\\" #amt_deposite=\\\"ngModel\\\" required>\\n      <mat-error *ngIf=\\\"amt_deposite.invalid\\\">Please enter total amount.</mat-error>\\n      </mat-form-field>\\n      </div>\\n\\n       <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n      <mat-form-field >\\n      <mat-label>Balance Amount</mat-label>       \\n      <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\n      <input matInput type=\\\"number\\\" name=\\\"bal_amt\\\" [(ngModel)]=\\\"receipt.bal_amt\\\"  #bal_amt=\\\"ngModel\\\">\\n      </mat-form-field>\\n      </div>\\n\\n       <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n      <mat-form-field >\\n      <mat-label>Remark</mat-label>       \\n      <mat-icon matPrefix class=\\\"icon\\\">pencil</mat-icon>\\n      <input matInput  name=\\\"remark\\\" [(ngModel)]=\\\"receipt.remark\\\" #remark=\\\"ngModel\\\">\\n      </mat-form-field>\\n      </div>\\n\\n       <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n      <mat-form-field >\\n      <mat-label>Received By</mat-label>       \\n      <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\n       <mat-select placeholder=\\\"Received By\\\" name=\\\"received_by\\\" [(ngModel)]=\\\"receipt.received_by\\\" #received_by=\\\"ngModel\\\">\\n      <mat-option value=\\\"Admin\\\">Admin</mat-option>\\n      <mat-option value=\\\"Sales\\\">Sales</mat-option>\\n    </mat-select>\\n      </mat-form-field>\\n      </div>\\n  </div>\\n\\n\\n\\n<div class=\\\"container\\\"\\n     fxLayout\\n     fxLayout.xs=\\\"column\\\"\\n     fxLayoutAlign=\\\"left\\\"\\n     fxLayoutGap=\\\"10px\\\"\\n     fxLayoutGap.xs=\\\"0\\\">\\n  <div class=\\\"button-row\\\">\\n  \\t <button type=\\\"submit\\\" mat-stroked-button color=\\\"primary\\\">Save</button>\\n  \\t  <button mat-raised-button color=\\\"primary\\\">Reset</button>\\n\\n  </div>\\n  \\n\\n</div>\\n</form>\\n</mat-sidenav-container>\\n\\n\\n<router-outlet></router-outlet>\"","import { Component, OnInit,Inject } from '@angular/core';\nimport { RestService } from '../rest.service';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material';\nimport { Router,ActivatedRoute } from '@angular/router';\nimport { FormControl,Validators,FormGroup ,NgForm} from '@angular/forms';\n\n\nexport interface DialogData {\n  studentId;\n}\n\n@Component({\n  selector: 'edit-receipt',\n  templateUrl: './edit-receipt.commponent.html',\n  styleUrls: ['./receipt.component.css']\n})\nexport class EditReceiptComponent implements OnInit {\neditReceiptData ;\nedirReceiptId;\nsum:number =0;\nprivate sub : any;\ndisplayedColumns = ['roll_number','first_name','father_name','mother_name','class','dob','uId'];\n\n  constructor( public rest: RestService, public dialog: MatDialog,public route : ActivatedRoute,public router : Router) {\n  }\n  ngOnInit(){\n  \tthis.sub = this.route.params.subscribe(params => {\n  \tconsole.log(\"std id: \"+[params['id']]);\n  \tthis.edirReceiptId = params['id'];\n\t\tthis.rest.getReceiptById(params['id']).then((response) => {\n\t\tconsole.log(\"res KV: \",response);\n\t\tthis.editReceiptData = response ;\n\t\tconsole.log(\"editReceiptData receipt :\",this.editReceiptData);\n\t\t});\n  });\n}\n\nupdateStudentFee(form: NgForm){\n\tif(form.invalid){\n\t\treturn;\n\t}\n\tconsole.log(\"update form: \",form);\n\tconsole.log(\"id: \"+this.edirReceiptId);\n\tif(this.sum > 0){\n\t\t//form.controls.amt_deposite.value = this.sum;\n    form.controls.amt_deposite.setValue(this.sum);\n\t}\n\tconsole.log(\"update form2: \",form);\n\tthis.rest.update('receipt',this.edirReceiptId,form.value).then((response) => {\n       alert(\"Receipt added. !!\");\n       this.router.navigate(['/receiptList']);\n    });\n}\n\n getDepositeAmt(formData){\n   console.log(\"val:\",formData);\n   console.log(formData.controls.pre_bal.value);\n   console.log(formData.controls.form_chrgs.value);\n     if(formData.controls.pre_bal.value == ''){\n       formData.controls.pre_bal.value =0;\n     }\n     if(formData.controls.form_chrgs.value == ''){\n       formData.controls.form_chrgs.value = 0;\n     }\n     if(formData.controls.adm_fee.value == ''){\n       formData.controls.adm_fee.value = 0;\n     }\n     if(formData.controls.dearness_fee.value == ''){\n       formData.controls.dearness_fee.value = 0;\n     }\n    if(formData.controls.dev_fee.value == ''){\n       formData.controls.dev_fee.value = 0;\n     }\n     if(formData.controls.elec_fee.value == ''){\n       formData.controls.elec_fee.value = 0;\n     }\n     if(formData.controls.lib_fee.value == ''){\n       formData.controls.lib_fee.value = 0;\n     }\n     if(formData.controls.lab_fee.value == ''){\n       formData.controls.lab_fee.value = 0;\n     }\n     if(formData.controls.music_fee.value == ''){\n       formData.controls.music_fee.value = 0;\n     }\n     if(formData.controls.annual_func_fee.value == ''){\n       formData.controls.annual_func_fee.value = 0;\n     }\n     if(formData.controls.exam_fee.value == ''){\n       formData.controls.exam_fee.value = 0;\n     }\n     if(formData.controls.sclass.value == ''){\n       formData.controls.sclass.value = 0;\n     }\n     if(formData.controls.tution_fee.value == ''){\n       formData.controls.tution_fee.value = 0;\n     }\n\n     if(formData.controls.acti_fee.value == ''){\n       formData.controls.acti_fee.value = 0;\n     }\n     if(formData.controls.late_fee.value == ''){\n       formData.controls.late_fee.value = 0;\n     }\n      let depositeAmt = +(formData.controls.pre_bal.value ) + (formData.controls.form_chrgs.value) + (formData.controls.adm_fee.value) + (formData.controls.dearness_fee.value)  + (formData.controls.dev_fee.value)\n     + (formData.controls.elec_fee.value) + (formData.controls.lib_fee.value) + (formData.controls.lab_fee.value) + (formData.controls.music_fee.value) \n     + (formData.controls.annual_func_fee.value) + (formData.controls.exam_fee.value) + (formData.controls.sclass.value) + (formData.controls.tution_fee.value)  + (formData.controls.acti_fee.value)  + (formData.controls.late_fee.value);\n     this.sum = depositeAmt;\n     formData.controls.amt_deposite.value = this.sum;\n     console.log(\"sum:: \"+this.sum);\n  }\n\n}","module.exports = \"<app-home></app-home>\\n<p>Receipt list </p>\\n<mat-form-field>\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n    </mat-form-field>\\n<mat-table #table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\">\\n\\n  <!-- Position Column -->\\n  <ng-container matColumnDef=\\\"session\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Session</mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element \\\">{{element.session }} \\n            </mat-cell>\\n        </ng-container>\\n\\n  <ng-container matColumnDef=\\\"class\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Class</mat-header-cell>\\n            <mat-cell  *matCellDef=\\\"let element \\\">{{element.class | titlecase }} \\n            </mat-cell>\\n        </ng-container>\\n\\n  <!-- Name Column -->\\n   <ng-container matColumnDef=\\\"student_name\\\">\\n    <mat-header-cell *matHeaderCellDef mat-sort-header> Student Name </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\"> {{element.student_name | titlecase }} </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"father_name\\\">\\n    <mat-header-cell *matHeaderCellDef mat-sort-header> Father Name </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\"> {{element.father_name | titlecase }} </mat-cell>\\n  </ng-container>\\n\\n  <!-- Weight Column -->\\n  <ng-container matColumnDef=\\\"mother_name\\\">\\n    <mat-header-cell  *matHeaderCellDef mat-sort-header> Mother Name </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\"> {{element.mother_name | titlecase }} </mat-cell>\\n  </ng-container>\\n\\n  <!-- Symbol Column -->\\n  <ng-container matColumnDef=\\\"total_amount\\\">\\n    <mat-header-cell *matHeaderCellDef mat-sort-header> Total Fee </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\"> {{element.total_amount}} </mat-cell>\\n  </ng-container>\\n\\n<ng-container matColumnDef=\\\"amt_deposite\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Amount Deposite</mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element \\\">  {{ element.amt_deposite }}\\n            </mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"pre_bal\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Pre Balance</mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element \\\">  {{ element.pre_bal }}\\n            </mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"bal_amount\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Balance Amount</mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element \\\">  {{ element.bal_amount }}\\n            </mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"annual_func_fee\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Annual Func Fee</mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element \\\">  {{ element.annual_func_fee }}\\n            </mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"dearness_fee\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Dearness Fee</mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element \\\">  {{ element.dearness_fee }}\\n            </mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"dev_fee\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Dev Fee</mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element \\\">  {{ element.dev_fee }}\\n            </mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"elec_fee\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Elec. Fee</mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element \\\">  {{ element.elec_fee }}\\n            </mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"exam_fee\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Exam Fee</mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element \\\">  {{ element.exam_fee }}\\n            </mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"form_chrgs\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Form Chargs</mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element \\\">  {{ element.form_chrgs }}\\n            </mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"lab_fee\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Lab Fee</mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element \\\">  {{ element.lab_fee }}\\n            </mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"lib_fee\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Lib Fee</mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element \\\">  {{ element.lib_fee }}\\n            </mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"monthName\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>month Name</mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element \\\">  {{ element.monthName }}\\n            </mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"music_fee\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Music Fee</mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element \\\">  {{ element.music_fee }}\\n            </mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"received_by\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Received By</mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element \\\">  {{ element.received_by }}\\n            </mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"remark\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Remark</mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element \\\">  {{ element.remark }}\\n            </mat-cell>\\n        </ng-container>\\n\\n         <ng-container matColumnDef=\\\"sclass\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Sclass</mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element \\\">  {{ element.sclass }}\\n            </mat-cell>\\n        </ng-container>\\n\\n         <ng-container matColumnDef=\\\"searchDate\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Date</mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element \\\">  {{ element.searchDate }}\\n            </mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"uId\\\">\\n            <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\\n            <mat-cell [routerLink]=\\\"['/editReceipt',element.uId]\\\" *matCellDef=\\\"let element\\\"><mat-icon  matTooltip=\\\"Edit Receipt\\\" matPrefix class=\\\"icon\\\">edit</mat-icon> <mat-icon (click)=\\\"openDialog(element)\\\" matTooltip=\\\"Delete Receipt\\\" matPrefix class=\\\"icon\\\">delete</mat-icon>\\n            </mat-cell>\\n        </ng-container>\\n\\n  <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n  <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n</mat-table>\\n<router-outlet></router-outlet>\\n\"","import { Component, OnInit,Inject,ViewChild } from '@angular/core';\nimport { RestService } from '../rest.service';\nimport { MatDialog, MAT_DIALOG_DATA ,MatTableDataSource,MatSort } from '@angular/material';\nimport { Router } from '@angular/router';\n\nexport interface DialogData {\n  receiptId;\n}\n\n@Component({\n  selector: 'app-list-receipt',\n  templateUrl: './list-receipt.component.html',\n  styleUrls: ['./receipt.component.css']\n})\nexport class ListReceiptComponent implements OnInit {\n\tdataSource ;\ndisplayedColumns = ['session','class','student_name','father_name','mother_name','total_amount','amt_deposite','pre_bal','bal_amount','annual_func_fee','dearness_fee','dev_fee','elec_fee','exam_fee','form_chrgs','lab_fee','lib_fee','monthName','music_fee','received_by','remark','sclass','searchDate','uId'];\nconstructor(public rest:RestService, public dialog: MatDialog){\n\n}\n\nopenDialog(receiptData) {\n   console.log(\"receiptData console: \",receiptData);\n    const dialogRef = this.dialog.open(DialogContent, {\n      data: {\n        receiptId: receiptData.uId\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(`Dialog result: ${result}`);\n      console.log(\"Dialog result: \",result);\n    });\n  }\n\n  @ViewChild(MatSort) sort: MatSort;\nngOnInit() {\n  this.rest.getReceipt().then((response) => {\n    console.log(\"res KV: \",response);\n    this.dataSource = response ;\n    console.log(\"dataSource receipt :\",this.dataSource);\n    this.dataSource = new MatTableDataSource(response);\n    this.dataSource.sort = this.sort;\n});\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n}\n\n@Component({\n  selector: 'dialog-content-example-dialog',\n  templateUrl: 'delete_receipt_dialog.html',\n})\nexport class DialogContent {\n  constructor(@Inject(MAT_DIALOG_DATA) public data: DialogData,public rest: RestService,private router: Router) {}\n  deleteReceipt(id) {\n   console.log(\"delete receipt : \"+id);\n     this.rest.delete(\"receipt\",id).then((response) => {\n       alert(\"receipt deleted.\");\n       this.rest.getReceipt().then((response) => {\n    console.log(\"res KV getReceipt: \",response);\n\n});\n       this.router.navigate(['/receiptList']);\n    });\n  }\n}\n\n","module.exports = \"\"","module.exports = \"<app-home></app-home>\\n<mat-sidenav-container>\\n <form  name=\\\"receiptData\\\" (submit)=\\\"saveStudentFee(postForm.form)\\\" #postForm=\\\"ngForm\\\">\\n<div class=\\\"container\\\"\\n     fxLayout\\n     fxLayout.xs=\\\"column\\\"\\n     fxLayoutGap=\\\"10px\\\"\\n     fxLayoutGap.xs=\\\"0\\\">\\n\\n      <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-label>Session</mat-label>       \\n    <mat-icon matPrefix class=\\\"icon\\\">face</mat-icon>\\n    <input matInput value=\\\"\\\" name=\\\"session\\\" ngModel #session=\\\"ngModel\\\" required>\\n    <mat-error *ngIf=\\\"session.invalid\\\">Please enter session.</mat-error>\\n  </mat-form-field>\\n  </div>\\n\\n<div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-icon matPrefix class=\\\"icon\\\">book</mat-icon>\\n    <mat-select placeholder=\\\"Class\\\"  name=\\\"class\\\"  ngModel #class=\\\"ngModel\\\" required>\\n      <mat-option *ngFor=\\\"let class of classData;\\\" value=\\\"{{class.id}}\\\">{{class.name}}</mat-option>\\n    </mat-select>\\n    <mat-error *ngIf=\\\"class.invalid\\\">Please select class.</mat-error>\\n  </mat-form-field>\\n  </div>\\n\\n    <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-label>Student Name</mat-label>       \\n    <mat-icon matPrefix class=\\\"icon\\\">face</mat-icon>\\n    <input matInput name=\\\"student_name\\\" ngModel #student_name=\\\"ngModel\\\" required>\\n    <mat-error *ngIf=\\\"student_name.invalid\\\">Please enter student name.</mat-error>\\n  </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-label>Mother Name</mat-label>       \\n    <mat-icon matPrefix class=\\\"icon\\\">face</mat-icon>\\n    <input matInput value=\\\"\\\" name=\\\"mother_name\\\" ngModel #mother_name=\\\"ngModel\\\" required>\\n    <mat-error *ngIf=\\\"mother_name.invalid\\\">Please enter mother name.</mat-error>\\n  </mat-form-field>\\n  </div>\\n\\n\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-label>Father Name</mat-label>       \\n    <mat-icon matPrefix class=\\\"icon\\\">face</mat-icon>\\n    <input matInput value=\\\"\\\" name=\\\"father_name\\\" ngModel #father_name=\\\"ngModel\\\" required>\\n    <mat-error *ngIf=\\\"father_name.invalid\\\">Please enter father name.</mat-error>\\n  </mat-form-field>\\n  </div>\\n\\n   <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-label>SNo.</mat-label>       \\n    <mat-icon matPrefix class=\\\"icon\\\">face</mat-icon>\\n    <input matInput name=\\\"sno\\\" ngModel #sno=\\\"ngModel\\\" >\\n  </mat-form-field>\\n  </div>\\n</div>\\n\\n\\n<div class=\\\"container\\\"\\n     fxLayout\\n     fxLayout.xs=\\\"column\\\"\\n     fxLayoutGap=\\\"10px\\\"\\n     fxLayoutGap.xs=\\\"0\\\">\\n\\n \\n\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-icon matPrefix class=\\\"icon\\\">date_range</mat-icon>\\n    <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\" name=\\\"searchDate\\\" [(ngModel)]=\\\"todayDate\\\" #searchDate=\\\"ngModel\\\" >\\n    <mat-datepicker-toggle matPrefix [for]=\\\"picker\\\">\\n    </mat-datepicker-toggle>\\n    <mat-datepicker #picker></mat-datepicker>\\n    </mat-form-field>\\n  </div>\\n</div>\\n\\n<div class=\\\"container\\\"\\n     fxLayout\\n     fxLayout.xs=\\\"column\\\"\\n     fxLayoutGap=\\\"10px\\\"\\n     fxLayoutGap.xs=\\\"0\\\">\\n    <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-label>Pre Balance</mat-label>       \\n    <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\n    <input matInput type=\\\"number\\\" name=\\\"pre_bal\\\" ngModel #pre_bal=\\\"ngModel\\\" (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\n    \\n  </mat-form-field>\\n  </div>\\n\\n    <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-label>Form Chargs.</mat-label>       \\n    <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\n    <input matInput type=\\\"number\\\" name=\\\"form_chrgs\\\" ngModel #form_chrgs=\\\"ngModel\\\" (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\n    \\n  </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-label>Admission Fee</mat-label>       \\n    <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\n    <input matInput type=\\\"number\\\" name=\\\"adm_fee\\\" ngModel #adm_fee=\\\"ngModel\\\" required (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\n    <mat-error *ngIf=\\\"adm_fee.invalid\\\">Please enter Admission Fee.</mat-error>\\n  </mat-form-field>\\n  </div>\\n\\n\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-label>Dearness Fee</mat-label>       \\n    <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\n    <input matInput type=\\\"number\\\" name=\\\"dearness_fee\\\" ngModel #dearness_fee=\\\"ngModel\\\" required (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\n    <mat-error *ngIf=\\\"dearness_fee.invalid\\\">Please enter dearness fee.</mat-error>\\n  </mat-form-field>\\n  </div>\\n\\n   <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-label>Devlop Fee</mat-label>       \\n    <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\n    <input matInput type=\\\"number\\\" name=\\\"dev_fee\\\" ngModel #dev_fee=\\\"ngModel\\\" (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\n  </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-label>Electric Fee.</mat-label>       \\n    <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\n    <input matInput type=\\\"number\\\" name=\\\"elec_fee\\\" ngModel #elec_fee=\\\"ngModel\\\" (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\n  </mat-form-field>\\n  </div>\\n\\n </div>\\n\\n <div class=\\\"container\\\"\\n     fxLayout\\n     fxLayout.xs=\\\"column\\\"\\n     fxLayoutGap=\\\"10px\\\"\\n     fxLayoutGap.xs=\\\"0\\\">\\n\\n      <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-label>Library Fee</mat-label>       \\n    <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\n    <input matInput type=\\\"number\\\" name=\\\"lib_fee\\\" ngModel #lib_fee=\\\"ngModel\\\" (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\n    \\n  </mat-form-field>\\n  </div>\\n\\n    <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-label>Lab Fee</mat-label>       \\n    <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\n    <input matInput type=\\\"number\\\" name=\\\"lab_fee\\\" ngModel #lab_fee=\\\"ngModel\\\" (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\n    \\n  </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-label>Music Fee</mat-label>       \\n    <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\n    <input matInput type=\\\"number\\\" name=\\\"music_fee\\\" ngModel #music_fee=\\\"ngModel\\\" (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\n    \\n  </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-label>Annual Func Chrgs</mat-label>       \\n    <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\n    <input matInput type=\\\"number\\\" name=\\\"annual_func_fee\\\" ngModel #annual_func_fee=\\\"ngModel\\\" (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\n  </mat-form-field>\\n  </div>\\n\\n   <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-label>Exam Fee</mat-label>       \\n    <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\n    <input matInput type=\\\"number\\\" name=\\\"exam_fee\\\" ngModel #exam_fee=\\\"ngModel\\\" (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\n  </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-label>S Class Fee.</mat-label>       \\n    <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\n    <input matInput type=\\\"number\\\" name=\\\"sclass\\\" ngModel #sclass=\\\"ngModel\\\" (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\n  </mat-form-field>\\n  </div>\\n\\n  \\n </div>\\n\\n <div class=\\\"container\\\"\\n     fxLayout\\n     fxLayout.xs=\\\"column\\\"\\n     fxLayoutGap=\\\"10px\\\"\\n     fxLayoutGap.xs=\\\"0\\\">\\n\\n     <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n      <mat-form-field >\\n      <mat-label>Tuition Fee</mat-label>       \\n      <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\n      <input matInput type=\\\"number\\\" name=\\\"tution_fee\\\" ngModel #tution_fee=\\\"ngModel\\\" (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\n      <!-- <mat-error *ngIf=\\\"form.get('tution_fee').invalid\\\">Please enter tution fee.</mat-error> -->\\n      </mat-form-field>\\n      </div>\\n\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n      <mat-form-field >\\n      <mat-label>Activity Fee</mat-label>       \\n      <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\n      <input matInput type=\\\"number\\\" name=\\\"acti_fee\\\" ngModel #acti_fee=\\\"ngModel\\\" (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\n      </mat-form-field>\\n      </div>\\n\\n      <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n      <mat-form-field >\\n      <mat-label>Month</mat-label>       \\n      <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\n      <mat-select placeholder=\\\"Month\\\" name=\\\"monthName\\\"  ngModel #monthName=\\\"ngModel\\\">\\n      <mat-option value=\\\"January\\\">January</mat-option>\\n      <mat-option value=\\\"February\\\">February</mat-option>\\n      <mat-option value=\\\"March\\\">March</mat-option>\\n      <mat-option value=\\\"April\\\">April</mat-option>\\n      <mat-option value=\\\"May\\\">May</mat-option>\\n      <mat-option value=\\\"June\\\">June</mat-option>\\n      <mat-option value=\\\"July\\\">July</mat-option>\\n      <mat-option value=\\\"August\\\">August</mat-option>\\n      <mat-option value=\\\"September\\\">September</mat-option>\\n      <mat-option value=\\\"October\\\">October</mat-option>\\n      <mat-option value=\\\"November\\\">November</mat-option>\\n      <mat-option value=\\\"December\\\">December</mat-option>\\n  </mat-select>\\n      </mat-form-field>\\n      </div>\\n\\n        <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n      <mat-form-field >\\n      <mat-label>Late Fee(if any)</mat-label>       \\n      <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon> \\n      <input matInput type=\\\"number\\\" name=\\\"late_fee\\\" ngModel #late_fee=\\\"ngModel\\\" (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\n      </mat-form-field>\\n      </div>\\n</div>\\n\\n <div class=\\\"container\\\"\\n     fxLayout\\n     fxLayout.xs=\\\"column\\\"\\n     fxLayoutGap=\\\"10px\\\"\\n     fxLayoutGap.xs=\\\"0\\\">\\n      \\n       <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n      <mat-form-field >\\n      <mat-label>Total Amount</mat-label>       \\n      <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\n      <input matInput type=\\\"number\\\" name=\\\"total_amount\\\" ngModel #total_amount=\\\"ngModel\\\" required>\\n      <mat-error *ngIf=\\\"total_amount.invalid\\\">Please enter total amount.</mat-error>\\n      </mat-form-field>\\n      </div>\\n\\n       <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n      <mat-form-field >\\n      <mat-label>Amount Deposite</mat-label>       \\n      <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\n      <input matInput type=\\\"number\\\" name=\\\"amt_deposite\\\" [(ngModel)]=\\\"sum\\\" readonly #amt_deposite=\\\"ngModel\\\" required>\\n      <mat-error *ngIf=\\\"amt_deposite.invalid\\\">Please enter total amount.</mat-error>\\n      </mat-form-field>\\n      </div>\\n\\n       <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n      <mat-form-field >\\n      <mat-label>Balance Amount</mat-label>       \\n      <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\n      <input matInput type=\\\"number\\\" name=\\\"bal_amt\\\" ngModel  #bal_amt=\\\"ngModel\\\">\\n      </mat-form-field>\\n      </div>\\n\\n       <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n      <mat-form-field >\\n      <mat-label>Remark</mat-label>       \\n      <mat-icon matPrefix class=\\\"icon\\\">pencil</mat-icon>\\n      <input matInput  name=\\\"remark\\\" ngModel #remark=\\\"ngModel\\\">\\n      </mat-form-field>\\n      </div>\\n\\n       <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n      <mat-form-field >\\n      <mat-label>Received By</mat-label>       \\n      <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\n       <mat-select placeholder=\\\"Received By\\\" name=\\\"received_by\\\" ngModel #received_by=\\\"ngModel\\\">\\n      <mat-option value=\\\"Admin\\\">Admin</mat-option>\\n      <mat-option value=\\\"Sales\\\">Sales</mat-option>\\n    </mat-select>\\n      </mat-form-field>\\n      </div>\\n  </div>\\n\\n\\n\\n<div class=\\\"container\\\"\\n     fxLayout\\n     fxLayout.xs=\\\"column\\\"\\n     fxLayoutAlign=\\\"left\\\"\\n     fxLayoutGap=\\\"10px\\\"\\n     fxLayoutGap.xs=\\\"0\\\">\\n  <div class=\\\"button-row\\\">\\n  \\t <button type=\\\"submit\\\" mat-stroked-button color=\\\"primary\\\">Save</button>\\n  \\t  <button mat-raised-button color=\\\"primary\\\">Reset</button>\\n\\n  </div>\\n  \\n\\n</div>\\n</form>\\n</mat-sidenav-container>\"","import { Component, OnInit, Inject, Input } from '@angular/core';\nimport { RestService} from '../rest.service';\nimport { FormControl,Validators,FormGroup ,NgForm} from '@angular/forms';\nimport { CLASSES } from '../class';\nimport { Router } from '@angular/router';\nimport { DatePipe } from '@angular/common';\n\n\n@Component({\n  selector: 'app-receipt',\n  templateUrl: './receipt.component.html',\n  styleUrls: ['./receipt.component.css']\n})\nexport class ReceiptComponent implements OnInit {\n   studentData: any = {};\n\tclassData = CLASSES ;\n  sum;\n\n\ttodayDate = this.datePipe.transform(new Date(), 'yyyy-MM-dd');\n  form: FormGroup;\n  constructor(public datePipe : DatePipe,public rest: RestService) { \n  \tconsole.log(\"date: \"+(new Date()) );\n    }\n\n  ngOnInit() {\n  }\n\n  saveStudentFee(form: NgForm){\n    if(form.invalid){\n    return;\n    }\n  \t/*let keys = Object.keys(form.controls);\n    let values = Object.values(form.value);*/\n    console.log(\"form: \",form.value);\n  \t\n    this.rest.postReceipt(form.value).then((response) => {\n      console.log(\"post 1\");\n       alert(\"Receipt added. !!\");\n       \n    });\n\n  }\n\n  getDepositeAmt(formData){\n   console.log(\"val:\",formData);\n   console.log(formData.controls.pre_bal.value);\n   console.log(formData.controls.form_chrgs.value);\n     if(formData.controls.pre_bal.value == ''){\n       formData.controls.pre_bal.value =0;\n     }\n     if(formData.controls.form_chrgs.value == ''){\n       formData.controls.form_chrgs.value = 0;\n     }\n     if(formData.controls.adm_fee.value == ''){\n       formData.controls.adm_fee.value = 0;\n     }\n     if(formData.controls.dearness_fee.value == ''){\n       formData.controls.dearness_fee.value = 0;\n     }\n    if(formData.controls.dev_fee.value == ''){\n       formData.controls.dev_fee.value = 0;\n     }\n     if(formData.controls.elec_fee.value == ''){\n       formData.controls.elec_fee.value = 0;\n     }\n     if(formData.controls.lib_fee.value == ''){\n       formData.controls.lib_fee.value = 0;\n     }\n     if(formData.controls.lab_fee.value == ''){\n       formData.controls.lab_fee.value = 0;\n     }\n     if(formData.controls.music_fee.value == ''){\n       formData.controls.music_fee.value = 0;\n     }\n     if(formData.controls.annual_func_fee.value == ''){\n       formData.controls.annual_func_fee.value = 0;\n     }\n     if(formData.controls.exam_fee.value == ''){\n       formData.controls.exam_fee.value = 0;\n     }\n     if(formData.controls.sclass.value == ''){\n       formData.controls.sclass.value = 0;\n     }\n     if(formData.controls.tution_fee.value == ''){\n       formData.controls.tution_fee.value = 0;\n     }\n\n     if(formData.controls.acti_fee.value == ''){\n       formData.controls.acti_fee.value = 0;\n     }\n     if(formData.controls.late_fee.value == ''){\n       formData.controls.late_fee.value = 0;\n     }\n      let depositeAmt = +(formData.controls.pre_bal.value ) + (formData.controls.form_chrgs.value) + (formData.controls.adm_fee.value) + (formData.controls.dearness_fee.value)  + (formData.controls.dev_fee.value)\n     + (formData.controls.elec_fee.value) + (formData.controls.lib_fee.value) + (formData.controls.lab_fee.value) + (formData.controls.music_fee.value) \n     + (formData.controls.annual_func_fee.value) + (formData.controls.exam_fee.value) + (formData.controls.sclass.value) + (formData.controls.tution_fee.value)  + (formData.controls.acti_fee.value)  + (formData.controls.late_fee.value);\n     this.sum = depositeAmt;\n  }\n\n}\n","/*import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestService {\n\n  constructor() { }\n}\n*/\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError, tap } from 'rxjs/operators';\nimport { FirebaseWrapper } from './firebasewrapper';\nlet firewrap = new FirebaseWrapper();\n//import firebase from \"firebase\";\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json',\n  'Authorization': 'did' })\n};\n\n@Injectable({ providedIn: 'root'})\n\nexport class RestService {\n API_URL  =  'http://localhost:5001/sql';\nconstructor(private  httpClient:  HttpClient)\n {}\n\tgetStudents(){\n\t\t //const body = JSON.stringify({\"fn\": 'selectAll', \"params\": [\"students\"]});\n     return firewrap.selectAll('students');\n\t    //return  this.httpClient.post(`${this.API_URL}`,body, httpOptions)\n\t}\n  getBooks(){\n\t\t //const body = JSON.stringify({\"fn\": 'selectAll', \"params\": [\"books\"]});\n\t    return firewrap.selectAll('books');\n\t}\n\n  postStudent(student) {\n    return firewrap.addStudent(student);\n    //return this.httpClient.post(`${this.API_URL}`,studentData, httpOptions)\n  }\n  postReceipt(receiptDate) {\n    console.log(\"rest postReceipt\");\n    return firewrap.addReceipt(receiptDate);\n    //return this.httpClient.post(`${this.API_URL}`,studentData, httpOptions)\n  }\n  getReceipt(){\n     //const body = JSON.stringify({\"fn\": 'selectAll', \"params\": [\"students\"]});\n     return firewrap.selectAll('receipt');\n      //return  this.httpClient.post(`${this.API_URL}`,body, httpOptions)\n  }\n  getReceiptById(id){\n    return firewrap.selectAllById('receipt',id);\n  }\n  update(tableName,id,data){\n    return firewrap.update(tableName,id,data);\n  }\n  delete(tableName,id){\n    return firewrap.deleteData(tableName,id);\n  }\n  getStudentsById(id){\n      return firewrap.selectAllById('students',id);\n  }\n  postBook(bookData) {\n    return this.httpClient.post(`${this.API_URL}`,bookData, httpOptions)\n  }\n  getClasses(){\n     //const body = JSON.stringify({\"fn\": 'selectAll', \"params\": [\"class\"]});\n      return firewrap.selectAll('class');\n  }\n  getRollNumber(classId){\n      return  this.httpClient.post(`${this.API_URL}`,classId, httpOptions)\n  }\n  \n  postEditStudent(editStudentData){\n      return this.httpClient.post(`${this.API_URL}`,editStudentData,httpOptions)\n  }\n  postLogin(body){\n    return firewrap.login(body);\n  }\n  postAttendance(body){\n    return this.httpClient.post(`${this.API_URL}`,body,httpOptions)\n  }\n  deleteRowAttendance(body){\n    return this.httpClient.post(`${this.API_URL}`,body,httpOptions)\n  }\n  getAttendanceByClass(body){\n    return this.httpClient.post(`${this.API_URL}`,body,httpOptions)\n  }\n};\n","module.exports = \"<h2 mat-dialog-title>Save Student</h2>\\n<mat-dialog-content>Student Saved !!</mat-dialog-content>\\n<mat-dialog-actions>\\n  <button mat-button mat-dialog-close>OK</button>\\n  \\n  <!-- <button mat-button [mat-dialog-close]=\\\"true\\\" (click)=\\\"deleteStudent(data.studentId)\\\" >Yes</button> -->\\n</mat-dialog-actions>\\n\\n<!-- <h1 mat-dialog-title>Favorite Animal</h1>\\n<div mat-dialog-content>\\n  My favorite animal is:\\n  <ul>\\n    <li>\\n      <span *ngIf=\\\"data.animal === 'panda'\\\">&#10003;</span> Panda\\n    </li>\\n    <li>\\n      <span *ngIf=\\\"data.animal === 'unicorn'\\\">&#10003;</span> Unicorn\\n    </li>\\n    <li>\\n      <span *ngIf=\\\"data.animal === 'lion'\\\">&#10003;</span> Lion\\n    </li>\\n  </ul>\\n</div> -->\"","module.exports = \".image-preview{\\n\\theight: 5rem;\\n\\tmargin: 1rem 0;\\n\\n}\\n.image-preview img {\\n\\theight: 100%;\\n}\"","module.exports = \"<app-home></app-home>\\n <mat-sidenav-container>\\n <form [formGroup]=\\\"form\\\" name=\\\"studentData\\\" (submit)=\\\"submitStudent()\\\"  class=\\\"student-form\\\">\\n<div class=\\\"container\\\"\\n     fxLayout\\n     fxLayout.xs=\\\"column\\\"\\n     fxLayoutGap=\\\"10px\\\"\\n     fxLayoutGap.xs=\\\"0\\\">\\n  <div class=\\\"item item-1\\\" fxFlex=\\\"15%\\\">\\n  \\t <mat-form-field class=\\\"navigation-items\\\">\\n  \\t <mat-label>Student Name</mat-label>       \\n  \\t<mat-icon matPrefix class=\\\"icon\\\">face</mat-icon>\\n    <input matInput value=\\\"\\\" name=\\\"first_name\\\" formControlName=\\\"first_name\\\">\\n     <mat-error *ngIf=\\\"form.get('first_name').invalid\\\">Please enter first name.</mat-error> \\n  </mat-form-field>\\n  </div>\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\n    <input matInput placeholder=\\\"Last Name\\\" name=\\\"last_name\\\" formControlName=\\\"last_name\\\">\\n     <mat-error *ngIf=\\\"form.get('last_name').invalid\\\">Please enter last name.</mat-error> \\n  </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\n    <input matInput placeholder=\\\"Adhaar No\\\" name=\\\"adhaar_no\\\" formControlName=\\\"adhaar_no\\\">\\n     <mat-error *ngIf=\\\"form.get('adhaar_no').invalid\\\">Please enter last name.</mat-error> \\n    \\n  </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\n   <mat-select placeholder=\\\"Category\\\"  name=\\\"category\\\" >\\n      <mat-option value=\\\"OBC\\\">OBC</mat-option>\\n      <mat-option value=\\\"Gen\\\">Gen</mat-option>\\n      <mat-option value=\\\"SC\\\">SC</mat-option>\\n      <mat-option value=\\\"ST\\\">ST</mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n</div>\\n\\n<div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\n   <mat-select placeholder=\\\"Religion\\\"  name=\\\"religion\\\" >\\n      <mat-option value=\\\"HINDU\\\">HINDU</mat-option>\\n      <mat-option value=\\\"MUSLIM\\\">MUSLIM</mat-option>\\n      <mat-option value=\\\"SIKH\\\">SIKH</mat-option>\\n      <mat-option value=\\\"CHRISTIAN\\\">CHRISTIAN</mat-option>\\n      <mat-option value=\\\"BODH\\\">BODH</mat-option>\\n      <mat-option value=\\\"JAIN\\\">JAIN</mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n</div>\\n\\n<div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\n   <mat-select placeholder=\\\"Handicapped\\\"  name=\\\"handicapped\\\" >\\n      <mat-option value=\\\"YES\\\">Yes</mat-option>\\n      <mat-option value=\\\"NO\\\">No</mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n</div>\\n</div>\\n\\n<div class=\\\"container\\\"\\n     fxLayout\\n     fxLayout.xs=\\\"column\\\"\\n     fxLayoutGap=\\\"10px\\\"\\n     fxLayoutGap.xs=\\\"0\\\">\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\n  \\t<mat-form-field >\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\n    <input matInput placeholder=\\\"Father Name\\\" name=\\\"father_name\\\" formControlName=\\\"father_name\\\">\\n     <mat-error *ngIf=\\\"form.get('father_name').invalid\\\">Please enter father name.</mat-error> \\n  </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\n    <input matInput placeholder=\\\"Father Qualification\\\" name=\\\"father_qualification\\\" formControlName=\\\"father_qualification\\\">\\n     <mat-error *ngIf=\\\"form.get('father_qualification').invalid\\\">Please enter father Qualification.</mat-error> \\n     \\n  </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\n    <input matInput placeholder=\\\"Father Occupation\\\" name=\\\"father_occupation\\\" formControlName=\\\"father_occupation\\\">\\n     <mat-error *ngIf=\\\"form.get('father_occupation').invalid\\\">Please enter father Occupation.</mat-error> \\n  </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n  \\t<mat-form-field >\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\n    <input matInput placeholder=\\\"Mother Name\\\" name=\\\"mother_name\\\" formControlName=\\\"mother_name\\\">\\n    <mat-error *ngIf=\\\"form.get('mother_name').invalid\\\">Please enter mother name.</mat-error>\\n  </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\n    <input matInput placeholder=\\\"Mother Qualification\\\" name=\\\"mother_qualification\\\" formControlName=\\\"mother_qualification\\\"> \\n     \\n  </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\n    <input matInput placeholder=\\\"Mother Occupation\\\" name=\\\"mother_occupation\\\" formControlName=\\\"mother_occupation\\\">\\n  </mat-form-field>\\n  </div>\\n  \\n</div>\\n\\n<div class=\\\"container\\\"\\n     fxLayout\\n     fxLayout.xs=\\\"column\\\"\\n     fxLayoutGap=\\\"10px\\\"\\n     fxLayoutGap.xs=\\\"0\\\">\\n  <div class=\\\"item item-1\\\" fxFlex=\\\"15%\\\">\\n  \\t <mat-form-field class=\\\"navigation-items\\\">\\n  \\t <mat-label>Gender</mat-label>       \\n  \\t<mat-icon matPrefix class=\\\"icon\\\">sex</mat-icon>\\n    <mat-select placeholder=\\\"gender\\\"  name=\\\"gender\\\" formControlName=\\\"gender\\\">\\n      <mat-option value=\\\"male\\\">Male</mat-option>\\n      <mat-option value=\\\"female\\\">Female</mat-option>\\n    </mat-select>\\n<mat-error *ngIf=\\\"form.get('gender').invalid\\\">Please select gender.</mat-error> \\n  </mat-form-field>\\n  </div>\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\n  \\t<mat-form-field >\\n  \\t\\t <mat-label>Address</mat-label>  \\n    <mat-icon matPrefix class=\\\"icon\\\">place</mat-icon>\\n        <textarea matInput name=\\\"address\\\" formControlName=\\\"address\\\"></textarea>\\n         <mat-error *ngIf=\\\"form.get('address').invalid\\\">Please enter address.</mat-error>\\n\\n  </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n  \\t<mat-form-field >\\n  \\t\\t <mat-label>Phone1</mat-label> \\n    <mat-icon matPrefix class=\\\"icon\\\">call</mat-icon>\\n    <input matInput placeholder=\\\"Contact\\\" name=\\\"contact_number\\\" formControlName=\\\"contact_number\\\">\\n      <mat-error *ngIf=\\\"form.get('contact_number').invalid\\\">Please enter contact.</mat-error> \\n  </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n       <mat-label>Phone2</mat-label> \\n    <mat-icon matPrefix class=\\\"icon\\\">call</mat-icon>\\n    <input matInput placeholder=\\\"Contact\\\" name=\\\"contact_number2\\\" >\\n  </mat-form-field>\\n  </div>\\n\\n   <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n       <mat-label>Annual Income</mat-label> \\n    <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\n    <input matInput placeholder=\\\"Income\\\" name=\\\"annual_income\\\" formControlName=\\\"annual_income\\\" >\\n    <mat-error *ngIf=\\\"form.get('annual_income').invalid\\\">Please enter annual income.</mat-error> \\n  </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\n   <mat-select placeholder=\\\"miniority\\\"  name=\\\"miniority\\\" >\\n      <mat-option value=\\\"YES\\\">Yes</mat-option>\\n      <mat-option value=\\\"NO\\\">No</mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n</div>\\n\\n</div>\\n\\n<div class=\\\"container\\\"\\n     fxLayout\\n     fxLayout.xs=\\\"column\\\"\\n     fxLayoutGap=\\\"10px\\\"\\n     fxLayoutGap.xs=\\\"0\\\">\\n  <div class=\\\"item item-1\\\" fxFlex=\\\"15%\\\">\\n  \\t <mat-form-field class=\\\"navigation-items\\\">\\n  \\t <mat-label>Email</mat-label>       \\n  \\t<mat-icon matPrefix class=\\\"icon\\\">email</mat-icon>\\n    <input matInput value=\\\"\\\" name=\\\"email\\\" formControlName=\\\"email\\\">\\n     <mat-error *ngIf=\\\"form.get('email').invalid\\\">Please enter valid email address.</mat-error> \\n   \\n  </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\n    <mat-form-field >\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\n   <mat-select placeholder=\\\"Only Child\\\"  name=\\\"only_child\\\" formControlName=\\\"only_child\\\">\\n      <mat-option value=\\\"YES\\\">Yes</mat-option>\\n      <mat-option value=\\\"NO\\\">No</mat-option>\\n    </mat-select>\\n\\n     <mat-error *ngIf=\\\"form.get('only_child').invalid\\\">Please enter only_child.</mat-error> \\n  </mat-form-field>\\n</div>\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\n  \\t<mat-form-field >\\n    <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"DOB\\\" name=\\\"dob\\\" formControlName=\\\"dob\\\">\\n  <mat-datepicker-toggle matPrefix [for]=\\\"picker\\\">\\n    \\n  </mat-datepicker-toggle>\\n  <mat-datepicker #picker></mat-datepicker>\\n   <mat-error *ngIf=\\\"form.get('dob').invalid\\\">Please enter dob.</mat-error> \\n  </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\n  \\t<mat-form-field >\\n    <mat-icon matPrefix class=\\\"icon\\\">book</mat-icon>\\n    <mat-select placeholder=\\\"Class\\\"  name=\\\"class\\\" formControlName=\\\"class\\\">\\n      <mat-option *ngFor=\\\"let class of classData;\\\" value=\\\"{{class.id}}\\\">{{class.name}}</mat-option>\\n    </mat-select>\\n     <mat-error *ngIf=\\\"form.get('class').invalid\\\">Please select class.</mat-error> \\n  </mat-form-field>\\n  </div>\\n<div class=\\\"item item-1\\\" fxFlex=\\\"15%\\\">\\n    <button mat-stroked-button  type=\\\"button\\\" color=\\\"primary\\\" (click)=\\\"filePicker.click()\\\">Pick Image</button>\\n    <input type=\\\"file\\\"  style=\\\"display: none;\\\" #filePicker (change)=\\\"onImagePicked($event)\\\">\\n  </div>\\n  <div class=\\\"image-preview\\\" *ngIf=\\\"imagePreview !='' && imagePreview\\\">\\n    <img [src]=\\\"imagePreview\\\" [alt]=\\\"form.value.first_name\\\">\\n  </div>\\n</div>\\n\\n<div class=\\\"container\\\"\\n     fxLayout\\n     fxLayout.xs=\\\"column\\\"\\n     fxLayoutAlign=\\\"left\\\"\\n     fxLayoutGap=\\\"10px\\\"\\n     fxLayoutGap.xs=\\\"0\\\">\\n  <div class=\\\"button-row\\\">\\n  \\t <button type=\\\"submit\\\" mat-stroked-button color=\\\"primary\\\">Save</button>\\n  \\t  <button mat-raised-button color=\\\"primary\\\">Reset</button>\\n\\n  </div>\\n  \\n\\n</div>\\n\\n</form>\\n</mat-sidenav-container>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { RestService} from '../rest.service';\nimport { FormControl,Validators,FormGroup } from '@angular/forms';\nimport { CLASSES } from '../class';\nimport { ActivatedRoute,Router } from '@angular/router';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material';\nimport { DatePipe } from '@angular/common';\n\nexport interface DialogData {\n  studentId;\n}\n\n@Component({\n  selector: 'app-student',\n  templateUrl: './student.component.html',\n  styleUrls: ['./student.component.css']\n})\nexport class StudentComponent implements OnInit {\n\tstudentData: any = {};\n\tclassData = CLASSES ;\n  form: FormGroup;\n  imagePreview: string;\n\n  constructor(public rest:RestService,private route: ActivatedRoute,private router: Router,public dialog : MatDialog ,public datePipe:DatePipe) {\n  \t/*this.rest.getClasses().subscribe((response) => {\n    console.log(\"res KV class: \",response);\n    this.classData = response;\n    });*/\n  }\n\n  ngOnInit() {\n    this.form = new FormGroup({\n      'first_name' : new FormControl('',{\n        validators:[Validators.required, Validators.minLength(3)]\n      }),\n      'last_name' : new FormControl('',{\n        validators:[Validators.required, Validators.minLength(3)]\n      }),\n      'father_name' : new FormControl('',{\n        validators:[Validators.required, Validators.minLength(3)]\n      }),\n      'mother_name' : new FormControl('',{\n        validators:[Validators.required, Validators.minLength(3)]\n      }),\n      'address' : new FormControl('',{\n        validators:[Validators.required, Validators.minLength(3)]\n      }),\n       'gender' : new FormControl('',{\n        validators:[Validators.required]\n      }),\n        'contact_number' : new FormControl('',{\n        validators:[Validators.required, Validators.minLength(3)]\n      }),\n         'email' : new FormControl('',{\n        validators:[Validators.required, Validators.minLength(3)]\n      }),\n          'dob' : new FormControl('',{\n        validators:[Validators.required]\n      }),\n           'class' : new FormControl('',{\n        validators:[Validators.required]\n      }),\n           'image' : new FormControl('',{\n             validators:[Validators.required]\n           }),\n            'adhaar_no' : new FormControl('',{ \n        validators:[Validators.required, Validators.minLength(10)] \n      }),\n             'father_occupation' : new FormControl('',{ \n        validators:[Validators.required, Validators.minLength(10)] \n      }),\n             'father_qualification' : new FormControl('',{ \n        validators:[Validators.required, Validators.minLength(10)] \n      }),\n             'only_child' : new FormControl('',{ \n        validators:[Validators.required] \n      }),\n              'annual_income' : new FormControl('',{ \n        validators:[Validators.required, Validators.minLength(4)] \n      }),\n\n    })\n  }\n\n  ngOnDestroy() {\n    //this.sub.unsubscribe();\n  }\n onImagePicked(event:Event){\n   const file = (event.target as HTMLInputElement).files[0];\n   this.form.patchValue({image:file});\n   this.form.get('image').updateValueAndValidity();\n   const reader = new FileReader();\n   reader.onload = () => {\n     this.imagePreview = reader.result;\n   };\n   reader.readAsDataURL(file);\n\n }\n\n  submitStudent() {\n    this.form.value.dob= this.datePipe.transform(this.form.value.dob, 'yyyy-MM-dd');\n\t  this.rest.postStudent(this.form.value).then((response) => {\n       this.openDialog();\n       console.log(\"Student added. !!\");\n       this.form.reset();\n    });\n}\n\nopenDialog() {\n    const dialogRef = this.dialog.open(SaveDialogContent);\n  }\n\n}\n\n@Component({\n  selector: 'save-dialog',\n  templateUrl: '../save_dialog.html',\n})\nexport class SaveDialogContent {\n  constructor(@Inject(MAT_DIALOG_DATA) public data: DialogData,public rest: RestService,public router: Router) {}\n  //this.router.navigate(['/liststudent']);\n}\n","module.exports = \"<app-home></app-home>\\n<p>Student Detail</p>\"","import { Component, OnInit, Inject } from '@angular/core';\n\n@Component({\n  selector: 'app-student-detail',\n  templateUrl: './studentDetail.component.html',\n  styleUrls: ['./student.component.css']\n})\n\nexport class StudentDetailComponent  {\n\tconstructor(){\n\tconsole.log(\"StudentDetailComponent\");\n\t}\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n  if ('serviceWorker' in navigator) {\n\n    window.addEventListener('load', function() {\n      navigator.serviceWorker.register('/sw.js', {scope:'/'}).then(function(registration) {\n        console.log('anp service worker registered.', registration)\n      }, function(err) {\n         console.error('ServiceWorker registration failed: ', err);\n      });\n    });\n  }\n"],"sourceRoot":""}