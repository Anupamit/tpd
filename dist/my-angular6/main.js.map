{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/attendance/attendance.component.css","webpack:///./src/app/attendance/attendance.component.html","webpack:///./src/app/attendance/attendance.component.ts","webpack:///./src/app/attendance/attendanceView.component.ts","webpack:///./src/app/attendance/viewAttendance.component.html","webpack:///./src/app/books/book.component.css","webpack:///./src/app/books/book.component.html","webpack:///./src/app/books/book.component.ts","webpack:///./src/app/books/viewBook.component.html","webpack:///./src/app/books/viewBook.component.ts","webpack:///./src/app/class.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/edit-student/edit-student.component.css","webpack:///./src/app/edit-student/edit-student.component.html","webpack:///./src/app/edit-student/edit-student.component.ts","webpack:///./src/app/firebasewrapper.js","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/library/library.component.css","webpack:///./src/app/library/library.component.html","webpack:///./src/app/library/library.component.ts","webpack:///./src/app/list-student/delete_dialog.html","webpack:///./src/app/list-student/list-student.component.css","webpack:///./src/app/list-student/list-student.component.html","webpack:///./src/app/list-student/list-student.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/receipt/edit-receipt.commponent.html","webpack:///./src/app/receipt/edit-receipt.commponent.ts","webpack:///./src/app/receipt/list-receipt.component.html","webpack:///./src/app/receipt/list-receipt.component.ts","webpack:///./src/app/receipt/receipt.component.css","webpack:///./src/app/receipt/receipt.component.html","webpack:///./src/app/receipt/receipt.component.ts","webpack:///./src/app/rest.service.ts","webpack:///./src/app/save_dialog.html","webpack:///./src/app/student/student.component.css","webpack:///./src/app/student/student.component.html","webpack:///./src/app/student/student.component.ts","webpack:///./src/app/student/studentDetail.component.html","webpack:///./src/app/student/studentDetail.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"mat-sidenav-container, mat-sidenav-content, mat-sidenav {\\r\\n  height: 100%;\\r\\n}\\r\\n\\r\\nmat-sidenav {\\r\\n  width: 250px;\\r\\n}\\r\\n\\r\\na {\\r\\n  text-decoration: none;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\na:hover,\\r\\na:active {\\r\\n  color: lightgray;\\r\\n}\\r\\n\\r\\n.navigation-items {\\r\\n  list-style: none;\\r\\n  padding: 0;\\r\\n  margin: 0;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.icon {\\r\\n  display: inline-block;\\r\\n  height: 30px;\\r\\n  margin: 0 auto;\\r\\n  padding-right: 5px;\\r\\n  text-align: center;\\r\\n  vertical-align: middle;\\r\\n  width: 15%;\\r\\n}\\r\\n\\r\\n.label {\\r\\n  display: inline-block;\\r\\n  line-height: 30px;\\r\\n  margin: 0;\\r\\n  width: 85%;\\r\\n}\"","module.exports = \"<!--  <mat-sidenav-container>\\r\\n <mat-sidenav-content>\\r\\n   <mat-toolbar color=\\\"primary\\\">\\r\\n    <div fxHide.gt-xs>\\r\\n      <button mat-icon-button>\\r\\n       <mat-icon>menu</mat-icon>\\r\\n     </button>\\r\\n   </div>\\r\\n   <div>\\r\\n    <a>\\r\\n     Daksh International Daniyari\\r\\n   </a>\\r\\n </div>\\r\\n <div fxFlex fxLayout fxLayoutAlign=\\\"flex-end\\\"  fxHide.xs>\\r\\n   <ul fxLayout fxLayoutGap=\\\"20px\\\" class=\\\"navigation-items\\\">\\r\\n     <li>\\r\\n       <a mat-list-item\\r\\n       [routerLink]=\\\"['/login']\\\">\\r\\n       <mat-icon>input</mat-icon>&nbsp;\\r\\n       <span  class=\\\"label\\\">Login</span>\\r\\n     </a>\\r\\n   </li>\\r\\n\\r\\n   <li [matMenuTriggerFor]=\\\"student\\\"  #matMenuTrigger1=\\\"matMenuTrigger\\\">\\r\\n     <a mat-list-item (mouseenter)=\\\"matMenuTrigger1.openMenu()\\\">\\r\\n       <mat-icon class=\\\"icon\\\">people</mat-icon>&nbsp;\\r\\n       <span class=\\\"label\\\">Student</span>\\r\\n     </a>\\r\\n     <mat-menu #student=\\\"matMenu\\\" (mouseleave)=\\\"matMenuTrigger1.closeMenu()\\\" [overlapTrigger]=\\\"false\\\">\\r\\n       <button mat-menu-item [routerLink]=\\\"['/student']\\\">Add Student</button>\\r\\n       <button mat-menu-item [routerLink]=\\\"['/liststudent']\\\">View Student</button>\\r\\n     </mat-menu>\\r\\n   </li>\\r\\n   <li [matMenuTriggerFor]=\\\"books\\\"  #matMenuTrigger3=\\\"matMenuTrigger\\\">\\r\\n     <a mat-list-item (mouseenter)=\\\"matMenuTrigger3.openMenu()\\\">\\r\\n       <mat-icon class=\\\"icon\\\">book</mat-icon>&nbsp;\\r\\n       <span class=\\\"label\\\">Books</span>\\r\\n     </a>\\r\\n     <mat-menu #books=\\\"matMenu\\\" (mouseleave)=\\\"matMenuTrigger1.closeMenu()\\\" [overlapTrigger]=\\\"false\\\">\\r\\n       <button mat-menu-item [routerLink]=\\\"['/bookAdd']\\\">Add Books</button>\\r\\n       <button mat-menu-item [routerLink]=\\\"['/bookView']\\\">View Books</button>\\r\\n     </mat-menu>\\r\\n   </li>\\r\\n\\r\\n   <li [matMenuTriggerFor]=\\\"receipt\\\" #matMenuTrigger2=\\\"matMenuTrigger\\\">\\r\\n     <a mat-list-item (mouseenter)=\\\"matMenuTrigger2.openMenu()\\\">\\r\\n       <mat-icon class=\\\"icon\\\">receipt</mat-icon>&nbsp;\\r\\n       <span class=\\\"label\\\">Receipt</span>\\r\\n     </a>\\r\\n     <mat-menu #receipt=\\\"matMenu\\\" (mouseleave)=\\\"matMenuTrigger2.closeMenu()\\\" [overlapTrigger]=\\\"false\\\">\\r\\n       <button mat-menu-item [routerLink]=\\\"['/receipt']\\\">Add Receipt</button>\\r\\n       <button mat-menu-item [routerLink]=\\\"['/receiptView']\\\">View Receipt</button>\\r\\n     </mat-menu>\\r\\n   </li>\\r\\n\\r\\n <li>\\r\\n   <a  mat-list-item\\r\\n   [routerLink]=\\\"['/']\\\">\\r\\n   <mat-icon class=\\\"icon\\\">dashboard</mat-icon>&nbsp;\\r\\n   <span class=\\\"label\\\">Dashboard</span>\\r\\n </a>\\r\\n</li>\\r\\n<li>\\r\\n <a>\\r\\n   <mat-icon class=\\\"icon\\\">input</mat-icon>&nbsp;\\r\\n   <span class=\\\"label\\\">LogOut</span>\\r\\n </a>\\r\\n</li>\\r\\n</ul>\\r\\n</div>\\r\\n</mat-toolbar>\\r\\n<main>\\r\\n</main>\\r\\n</mat-sidenav-content>\\r\\n</mat-sidenav-container>\\r\\n<router-outlet></router-outlet> -->\\r\\n\\r\\n<router-outlet></router-outlet> \"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'my-angular6';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { StudentComponent,SaveDialogContent } from './student/student.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { BooksComponent } from './books/book.component';\r\nimport { ListBookComponent } from './books/viewBook.component';\r\nimport { ReceiptComponent } from './receipt/receipt.component';\r\nimport { RestService } from './rest.service';\r\n\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatButtonModule, MatCheckboxModule, MatIconModule, MatSidenavModule, MatListModule, MatToolbarModule, MatSelectModule,MatDatepickerModule, MatRadioModule, MatNativeDateModule, MatCardModule, MatProgressSpinnerModule, MatMenuModule,MatTabsModule,MatTooltipModule} from '@angular/material';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport {FormsModule,ReactiveFormsModule} from \"@angular/forms\";\r\n\r\nimport { ListStudentComponent,DialogContent } from './list-student/list-student.component';\r\nimport { MatTableModule} from '@angular/material/table';\r\n\r\n\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\n\r\nimport { EditStudentComponent } from './edit-student/edit-student.component';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { AttendanceComponent } from './attendance/attendance.component';\r\nimport { AttendanceViewComponent } from './attendance/attendanceView.component';\r\nimport { LibraryComponent } from './library/library.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { StudentDetailComponent } from './student/studentDetail.component';\r\nimport { ListReceiptComponent } from './receipt/list-receipt.component';\r\nimport { EditReceiptComponent } from './receipt/edit-receipt.commponent';\r\n\r\n\r\n\r\n\r\n\r\n//import { MatDatepickerModule }  from \"@angular/material/datepicker\";\r\nconst appRoutes: Routes =[\r\n{\r\n\t/*path: '',\r\n\tredirectTo: '/',\r\n  pathMatch: 'full'*/\r\n  path: '',\r\n  component: LoginComponent\r\n},\r\n{\r\n\tpath: 'student',\r\n    component: StudentComponent\r\n},\r\n{\r\n  path: 'login',\r\n  component: LoginComponent\r\n},\r\n{\r\n  path : 'liststudent',\r\n  component: ListStudentComponent\r\n},\r\n\r\n{ path: 'student/:id', \r\n  component: EditStudentComponent \r\n},\r\n{\r\n  path : 'receipt',\r\n  component: ReceiptComponent\r\n},\r\n{\r\n  path : 'receiptList',\r\n  component: ListReceiptComponent\r\n},\r\n{ path: 'editReceipt/:id', \r\n  component: EditReceiptComponent \r\n},\r\n{\r\n  path : 'bookAdd',\r\n  component: BooksComponent\r\n},\r\n{\r\n  path : 'bookView',\r\n  component: ListBookComponent\r\n},\r\n{\r\n  path : 'home',\r\n  component: HomeComponent\r\n},\r\n{\r\n  path : 'attendance',\r\n  component: AttendanceComponent\r\n},\r\n{\r\n  path : 'attendanceView',\r\n  component: AttendanceViewComponent\r\n},\r\n{\r\n  path : 'issueBook',\r\n  component: LibraryComponent\r\n},\r\n{\r\n  path : 'issuedBooksView',\r\n  component: LibraryComponent\r\n},\r\n{\r\n  path : 'dashboard',\r\n  component: DashboardComponent\r\n},\r\n{\r\n  path : 'studentDetail/:id',\r\n  component: StudentDetailComponent\r\n},\r\n\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    StudentComponent,\r\n    LoginComponent,\r\n    ListStudentComponent,\r\n\r\n    DialogContent,\r\n    EditStudentComponent,\r\n\r\n    ReceiptComponent,\r\n    DialogContent,\r\n    BooksComponent,\r\n    ListBookComponent,\r\n    HomeComponent,\r\n    AttendanceComponent,\r\n    AttendanceViewComponent,\r\n    LibraryComponent,\r\n    SaveDialogContent,\r\n    DashboardComponent,\r\n    StudentDetailComponent,\r\n    ListReceiptComponent,\r\n    EditReceiptComponent\r\n\r\n  ],\r\n  imports: [\r\n  RouterModule.forRoot(\r\n  \tappRoutes,\r\n  \t{\r\n  \t\tenableTracing: true }\r\n  \t),\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    RouterModule,\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatToolbarModule,\r\n    FlexLayoutModule,\r\n    MatSelectModule,\r\n    FormsModule,\r\n    MatDatepickerModule,\r\n    MatRadioModule,\r\n    MatButtonModule,\r\n    MatNativeDateModule,\r\n    MatCardModule,\r\n    MatProgressSpinnerModule,\r\n    MatMenuModule,\r\n    HttpClientModule,\r\n    MatTabsModule,\r\n    MatTableModule,\r\n    MatTooltipModule,\r\n    MatDialogModule,\r\n    MatExpansionModule,\r\n    ReactiveFormsModule\r\n\r\n  ],\r\n  providers: [DatePipe],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [DialogContent,SaveDialogContent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"mat-header-cell {\\r\\n\\tcolor: #3F51B5;\\r\\n\\tfont-family: courier; \\r\\n\\tfont-size: 100%;\\r\\n}\\r\\nmat-icon {\\r\\n\\tcolor: #3F51B5;\\r\\n}\"","module.exports = \"<app-home></app-home>\\r\\n<mat-sidenav-container>\\r\\n<div class=\\\"container\\\"\\r\\n     fxLayout\\r\\n     fxLayout.xs=\\\"column\\\"\\r\\n     fxLayoutGap=\\\"10px\\\"\\r\\n     fxLayoutGap.xs=\\\"0\\\">\\r\\n  <div class=\\\"item item-1\\\" fxFlex=\\\"15%\\\">\\r\\n\\t<mat-form-field >\\r\\n\\t<mat-icon matPrefix class=\\\"icon\\\">book</mat-icon>\\r\\n\\t<mat-select placeholder=\\\"Class\\\" (ngModelChange)=\\\"getClassName($event)\\\" name=\\\"class\\\">\\r\\n\\t<mat-option *ngFor=\\\"let class of classData;\\\" [value]=\\\"class.id\\\">{{class.name}}</mat-option>\\r\\n\\t</mat-select>\\r\\n\\t</mat-form-field>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n <form name=\\\"attendanceData\\\" class=\\\"student-form\\\">\\r\\n  <table style=\\\"width:100%\\\" >\\r\\n   <thead> <tr>\\r\\n      <td>Roll Number</td>\\r\\n      <td>First Name</td>\\r\\n      <td>Last Name</td>\\r\\n      <td>Present</td>\\r\\n      <td>Absent</td>\\r\\n      <td>Leave</td>\\r\\n       <td>Late</td>\\r\\n    </tr>\\r\\n  </thead>\\r\\n    <tr *ngFor=\\\"let student of studentData;let i = index;\\\">\\r\\n    <td><mat-form-field>\\r\\n    <input  matInput name=\\\"roll_number{{i}}\\\" [(ngModel)]=\\\"student.roll_number\\\" #roll_number{{i}}=\\\"ngModel\\\">\\r\\n    </mat-form-field></td>\\r\\n    <td><mat-form-field>\\r\\n            <input  matInput name=\\\"first_name{{i}}\\\" [(ngModel)]=\\\"student.first_name\\\" #first_name{{i}}=\\\"ngModel\\\">\\r\\n    </mat-form-field></td>\\r\\n    <td><mat-form-field>\\r\\n            <input  matInput name=\\\"last_name{{i}}\\\" [(ngModel)]=\\\"student.last_name\\\" #last_name{{i}}=\\\"ngModel\\\">\\r\\n    </mat-form-field></td>\\r\\n    <td>\\r\\n    <mat-radio-button  name=\\\"action{{i}}\\\" [(ngModel)]=\\\"student.action\\\"  #action{{i}}=\\\"ngModel\\\" (click)='onRadioClick(i,\\\"P\\\",student)' ></mat-radio-button> \\r\\n    </td>\\r\\n    <td>\\r\\n          <mat-radio-button  name=\\\"action{{i}}\\\" [(ngModel)]=\\\"student.action\\\" #action{{i}}=\\\"ngModel\\\" (click)='onRadioClick(i,\\\"A\\\",student)'></mat-radio-button> \\r\\n    </td>\\r\\n    <td>\\r\\n          <mat-radio-button  name=\\\"action{{i}}\\\" [(ngModel)]=\\\"student.action\\\" #action{{i}}=\\\"ngModel\\\" (click)='onRadioClick(i,\\\"L\\\",student)'></mat-radio-button> \\r\\n    </td>\\r\\n    <td>\\r\\n          <mat-radio-button  name=\\\"action{{i}}\\\" [(ngModel)]=\\\"student.action\\\" #action{{i}}=\\\"ngModel\\\" (click)='onRadioClick(i,\\\"LT\\\",student)'></mat-radio-button> \\r\\n    </td>\\r\\n    </tr>\\r\\n  </table>\\r\\n<!-- <div class=\\\"container\\\"\\r\\n     fxLayout\\r\\n     fxLayout.xs=\\\"column\\\"\\r\\n     fxLayoutAlign=\\\"left\\\"\\r\\n     fxLayoutGap=\\\"10px\\\"\\r\\n     fxLayoutGap.xs=\\\"0\\\">\\r\\n<div class=\\\"button-row\\\">\\r\\n     <button type=\\\"submit\\\" mat-stroked-button color=\\\"primary\\\">Save</button>\\r\\n      <button mat-raised-button color=\\\"primary\\\">Reset</button>\\r\\n  </div></div> -->\\r\\n</form>\\r\\n</mat-sidenav-container>\\r\\n\"","import { Component, OnInit,OnChanges } from '@angular/core';\r\nimport { CLASSES } from '../class';\r\nimport { FormControl,NgForm,Validators } from '@angular/forms';\r\nimport { RestService } from '../rest.service';\r\nimport { Router } from '@angular/router';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n\r\n@Component({\r\n  selector: 'app-attendance',\r\n  templateUrl: './attendance.component.html',\r\n  styleUrls: ['./attendance.component.css']\r\n})\r\nexport class AttendanceComponent {\r\n\r\nclassData = CLASSES;\r\nclassId;\r\nstudentData: any = [];\r\nattendanceObj;\r\ndelAttendanceObj;\r\n\r\nconstructor(public rest:RestService,public router:Router,public datePipe: DatePipe){\r\n console.log(\"class:\",this.classData);\t\r\n};\r\n\r\npublic getClassName(id): void {\r\nthis.classId = id;  \r\n    let classObj = {\"fn\": \"selectAllById\",\"params\": [\"students\",['class'],[id] ]};\r\n    this.rest.getStudentsById(classObj).subscribe((response) => {\r\n\t\t this.studentData = response;\r\n    \t for(let i=0; i<((this.studentData).length ); i++){\r\n           this.studentData[i].action = 'present';\r\n\t\t }\r\n\t});\r\n}\r\n\r\npublic getDate(date): void {\r\n\tconsole.log(\"date:\",date);\r\n}\r\n\r\n/*submitAttendance(form:NgForm){\r\n\t\tconsole.log(\"att form: \",form);\r\n\t\tlet keys = Object.keys(form.controls);\r\n\t\tlet values = Object.values(form.value);\r\n\t\tconsole.log(\"keys: \",keys);\r\n\t\tconsole.log(\"values: \",values);\r\n\t\tkeys.push('date');\r\n\t\tvalues.push(new Date());\r\n\t\tkeys.push('class');\r\n\t\tvalues.push(this.classId);\r\n\t\tconsole.log(\"keys: \",keys);\r\n\t\tconsole.log(\"values: \",values);\r\n\t\tvar key = keys.keys()[0]; console.log(\"key:\",key);\r\n\t\tthis.attendanceObj = {\"fn\": \"insert\",\"params\": [\"attendance\",keys,values]};\r\n\t\tconsole.log(\"attendanceObj: \",this.attendanceObj);\r\n   \t     \tthis.rest.postAttendance(this.attendanceObj).subscribe((response) => {\r\n   \t\t    alert(\"attendance added.\")\r\n           this.router.navigate(['/liststudent']);\r\n  \t  });\r\n}*/\r\n\r\nonRadioClick(index,val,student) {\r\n    this.studentData[index].action = val;\r\n    console.log(\"student:\",student);\r\n    let date = this.datePipe.transform(new Date(), 'yyyy-MM-dd') ;\r\n    let keys = ['date','class','roll_number','action'];\r\n    let values = [date,student.class,student.roll_number,student.action];\r\n    this.delAttendanceObj = {\"fn\": \"deleteRowAttendance\",\"params\": [\"attendance\",[student.roll_number],[date],[student.class] ]};\r\n\tthis.rest.deleteRowAttendance(this.delAttendanceObj).subscribe((response) => {\r\n\t});\r\n\r\n    this.attendanceObj = {\"fn\": \"insert\",\"params\": [\"attendance\",keys,values]};\r\n\tthis.rest.postAttendance(this.attendanceObj).subscribe((response) => {\r\n\t\t/*alert(\"attendance added.\")\r\n\t\tthis.router.navigate(['/liststudent']);*/\r\n\t\t});\r\n    }\r\n}","import { Component, OnInit,OnChanges } from '@angular/core';\r\nimport { RestService } from '../rest.service';\r\nimport { CLASSES } from '../class';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-attendance-view',\r\n  templateUrl: './viewAttendance.component.html',\r\n  styleUrls: ['./attendance.component.css']\r\n})\r\nexport class AttendanceViewComponent {\r\n    classData = CLASSES;\r\n\tclassId;\r\n\tdataSource;\r\n\tdisplayedColumns = ['roll_number','first_name','last_name','action'];\r\n\ttodayDate = this.datePipe.transform(new Date(), 'yyyy-MM-dd');\r\n\tpresentAction: number =0;\r\n\tabsentAction : number =0;\r\n\tleaveAction : number =0;\r\nconstructor(private rest:RestService,private datePipe:DatePipe){};\r\npublic getClassName(id): void {\r\nthis.classId = id;\r\nconsole.log(\"getClassName:\"+this.todayDate);this.dataSource='';\r\n    let classObj = { \"fn\": \"selectAttendance\",\"params\": [\"attendance\",\"students\",[this.classId],[this.todayDate] ]};\r\n    console.log(classObj);\r\n    this.rest.getAttendanceByClass(classObj).subscribe((response) => {\r\n\t\t this.dataSource = response;\r\n\t\t for(let i=0; i<=[response].length; i++){\r\n\t\t \tif(response[i].action == 'A'){\r\n\t\t \t\tthis.absentAction += parseInt(\"01\");\r\n\t\t \t}else if(response[i].action == 'L'){\r\n\t\t \t\tthis.leaveAction += parseInt(\"01\");\r\n\t\t \t}else {\r\n\t\t \t\tthis.presentAction += parseInt(\"01\");\r\n\t\t \t}\r\n\t\t }\r\n\t});\r\n}\r\npublic getSearchDate(searchDate): void {\r\n\t//console.log(this.datePipe.transform(searchDate, 'yyyy-MM-dd'));\r\n\tthis.todayDate = this.datePipe.transform(searchDate, 'yyyy-MM-dd');\r\n\tconsole.log(\"getSearchDate:\"+this.todayDate);\r\n\tthis.getClassName(this.classId);\r\n\r\n}\r\n\r\n}\r\n","module.exports = \"<app-home></app-home>\\r\\n<mat-sidenav-container>\\r\\n<div class=\\\"container\\\"\\r\\n     fxLayout\\r\\n     fxLayout.xs=\\\"column\\\"\\r\\n     fxLayoutGap=\\\"10px\\\"\\r\\n     fxLayoutGap.xs=\\\"0\\\">\\r\\n  <div class=\\\"item item-1\\\" fxFlex=\\\"15%\\\">\\r\\n\\t<mat-form-field >\\r\\n\\t<mat-icon matPrefix class=\\\"icon\\\">book</mat-icon>\\r\\n\\t<mat-select placeholder=\\\"Class\\\" ngModel (ngModelChange)=\\\"getClassName($event)\\\" name=\\\"className\\\" #className=\\\"ngModel\\\">\\r\\n\\t<mat-option *ngFor=\\\"let class of classData;\\\" [value]=\\\"class.id\\\">{{class.name}}</mat-option>\\r\\n\\t</mat-select>\\r\\n\\t</mat-form-field>\\r\\n  </div>\\r\\n  <div class=\\\"item item-1\\\" fxFlex=\\\"15%\\\">\\r\\n\\t<mat-form-field >\\r\\n\\t <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\" name=\\\"searchDate\\\" ngModel #searchDate=\\\"ngModel\\\" (ngModelChange)=\\\"getSearchDate($event)\\\" >\\r\\n  <mat-datepicker-toggle matPrefix [for]=\\\"picker\\\">\\r\\n  </mat-datepicker-toggle>\\r\\n  <mat-datepicker #picker></mat-datepicker>\\r\\n \\r\\n\\t</mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"item item-1\\\" fxFlex=\\\"15%\\\">\\r\\n  <mat-form-field >\\r\\n    <input matInput type=\\\"text\\\" name=\\\"present\\\" style=\\\"color:green;font-weight:bold;\\\" value=\\\"Present- {{presentAction}}\\\">\\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"item item-1\\\" fxFlex=\\\"15%\\\">\\r\\n  <mat-form-field >\\r\\n    <input matInput type=\\\"text\\\" name=\\\"absent\\\" style=\\\"color:red;font-weight:bold;\\\" value=\\\"Leave- {{leaveAction}}\\\">\\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"item item-1\\\" fxFlex=\\\"15%\\\">\\r\\n  <mat-form-field >\\r\\n    <input matInput type=\\\"text\\\" name=\\\"leave\\\" style=\\\"color:blue;font-weight:bold;\\\" value=\\\"Absent- {{absentAction}}\\\">\\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n</div></mat-sidenav-container>\\r\\n<mat-table #table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n  <!-- Position Column -->\\r\\n  <ng-container matColumnDef=\\\"roll_number\\\">\\r\\n            <mat-header-cell *matHeaderCellDef>Roll Number</mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let element \\\">{{element.roll_number }} \\r\\n            </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n  <ng-container matColumnDef=\\\"first_name\\\">\\r\\n            <mat-header-cell *matHeaderCellDef>Name</mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let element \\\">{{element.first_name | titlecase }} \\r\\n            </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n  <!-- Name Column -->\\r\\n  <ng-container matColumnDef=\\\"last_name\\\">\\r\\n    <mat-header-cell *matHeaderCellDef> Last Name </mat-header-cell>\\r\\n    <mat-cell *matCellDef=\\\"let element\\\"> {{element.last_name | titlecase }} </mat-cell>\\r\\n  </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"action\\\">\\r\\n            <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\\r\\n             <mat-cell *matCellDef=\\\"let element\\\" style=\\\"font-weight: bold;\\\" [ngStyle]=\\\"{'color': element.action == 'A' ? 'red' : element.action == 'L' ? 'blue' : 'green'}\\\"> {{element.action }} </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n  <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n  <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n</mat-table>\\r\\n<router-outlet></router-outlet>\"","module.exports = \"mat-header-cell {\\r\\n\\tcolor: #3F51B5;\\r\\n\\tfont-family: courier; \\r\\n\\tfont-size: 100%;\\r\\n}\\r\\nmat-icon {\\r\\n\\tcolor: #3F51B5;\\r\\n}\"","module.exports = \"<app-home></app-home>\\r\\n<mat-sidenav-container>\\r\\n<form name=\\\"bookData\\\" (submit)=\\\"submitBook(postForm); postForm.reset()\\\" #postForm=\\\"ngForm\\\" class=\\\"student-form\\\">\\r\\n<div class=\\\"container\\\"\\r\\n   fxLayout\\r\\n   fxLayout.xs=\\\"column\\\"\\r\\n   fxLayoutGap=\\\"10px\\\"\\r\\n   fxLayoutGap.xs=\\\"0\\\">\\r\\n   <div class=\\\"item item-1\\\" fxFlex=\\\"15%\\\">\\r\\n      <mat-form-field class=\\\"navigation-items\\\">\\r\\n         <mat-label>Book Title</mat-label>\\r\\n         <mat-icon matPrefix class=\\\"icon\\\">book</mat-icon>\\r\\n         <input matInput value=\\\"\\\" name=\\\"book_title\\\" ngModel required minlength=\\\"4\\\" #book_title=\\\"ngModel\\\">\\r\\n         <mat-error *ngIf=\\\"book_title.invalid\\\">Please enter Book Title.</mat-error>\\r\\n      </mat-form-field>\\r\\n   </div>\\r\\n   <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\r\\n      <mat-form-field >\\r\\n         <mat-label>Author Name</mat-label>\\r\\n         <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\r\\n         <input matInput placeholder=\\\"Author Name\\\" name=\\\"author_name\\\" ngModel required minlength=\\\"5\\\" #author_name=\\\"ngModel\\\">\\r\\n         <mat-error *ngIf=\\\"author_name.invalid\\\">Please enter Author name.</mat-error>\\r\\n      </mat-form-field>\\r\\n   </div>\\r\\n\\r\\n   <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\r\\n      <mat-form-field >\\r\\n         <mat-icon matPrefix class=\\\"icon\\\">print</mat-icon>\\r\\n         <input matInput placeholder=\\\"Publication\\\" name=\\\"publication\\\" ngModel required minlength=\\\"4\\\" #publication=\\\"ngModel\\\">\\r\\n         <mat-error *ngIf=\\\"publication.invalid\\\">Please enter publication.</mat-error>\\r\\n      </mat-form-field>\\r\\n   </div>\\r\\n</div>\\r\\n<div class=\\\"container\\\"\\r\\n   fxLayout\\r\\n   fxLayout.xs=\\\"column\\\"\\r\\n   fxLayoutGap=\\\"10px\\\"\\r\\n   fxLayoutGap.xs=\\\"0\\\">\\r\\n   <div class=\\\"item item-1\\\" fxFlex=\\\"15%\\\">\\r\\n      <mat-form-field class=\\\"navigation-items\\\">\\r\\n         <mat-label>Course Book</mat-label>\\r\\n         <mat-icon matPrefix class=\\\"icon\\\">pan_tool</mat-icon>\\r\\n         <mat-select placeholder=\\\"Course Book\\\"  name=\\\"course_book\\\" ngModel required #course_book=\\\"ngModel\\\">\\r\\n            <mat-option value=\\\"yes\\\">Yes</mat-option>\\r\\n            <mat-option value=\\\"no\\\">No</mat-option>\\r\\n         </mat-select>\\r\\n         <mat-error *ngIf=\\\"course_book.invalid\\\">Please select option.</mat-error>\\r\\n      </mat-form-field>\\r\\n   </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"container\\\"\\r\\n   fxLayout\\r\\n   fxLayout.xs=\\\"column\\\"\\r\\n   fxLayoutAlign=\\\"left\\\"\\r\\n   fxLayoutGap=\\\"10px\\\"\\r\\n   fxLayoutGap.xs=\\\"0\\\">\\r\\n   <div class=\\\"button-row\\\">\\r\\n      <button type=\\\"submit\\\" mat-stroked-button color=\\\"primary\\\">Save</button>\\r\\n      <button mat-raised-button color=\\\"primary\\\" type=\\\"reset\\\">Reset</button>\\r\\n   </div>\\r\\n</div>\\r\\n</form>\\r\\n</mat-sidenav-container>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { RestService} from '../rest.service';\r\nimport { FormControl,NgForm,Validators } from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'app-book',\r\n  templateUrl: './book.component.html',\r\n  styleUrls: ['./book.component.css']\r\n})\r\nexport class BooksComponent implements OnInit {\r\n\tbookData: any = {};\r\n\r\n  constructor(public rest:RestService) {\r\n  \t/*this.rest.getClasses().subscribe((response) => {\r\n    console.log(\"res KV class: \",response);\r\n    this.classData = response;\r\n    });*/\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  submitBook(form: NgForm) {\r\n  \tif(form.invalid){\r\n  \t\treturn;\r\n  \t}\r\n  let keys = Object.keys(form.form.controls);\r\n\tlet values = Object.values(form.value);\r\n  console.log(\"key & values\",keys,values);\r\n\tvar bookObj = {\"fn\": \"insert\",\"params\": [\"books\",keys,values]};\r\n   \t   \tthis.rest.postBook(bookObj).subscribe((response) => {\r\n   \t\talert(\"Book Added.\");\r\n      });\r\n    }\r\n}\r\n","module.exports = \"<app-home></app-home>\\r\\n<mat-table #table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n  <!-- Position Column -->\\r\\n  <ng-container matColumnDef=\\\"id\\\">\\r\\n            <mat-header-cell *matHeaderCellDef>Book ID</mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let element \\\">{{element.id }}\\r\\n            </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n  <ng-container matColumnDef=\\\"book_title\\\">\\r\\n            <mat-header-cell *matHeaderCellDef>Book Title</mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let element \\\">{{element.book_title | titlecase }}\\r\\n            </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n  <!-- Name Column -->\\r\\n  <ng-container matColumnDef=\\\"author_name\\\">\\r\\n    <mat-header-cell *matHeaderCellDef> Author Name </mat-header-cell>\\r\\n    <mat-cell *matCellDef=\\\"let element\\\"> {{element.author_name | titlecase }} </mat-cell>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Weight Column -->\\r\\n  <ng-container matColumnDef=\\\"publication\\\">\\r\\n    <mat-header-cell  *matHeaderCellDef> Publication </mat-header-cell>\\r\\n    <mat-cell *matCellDef=\\\"let element\\\"> {{element.publication | titlecase }} </mat-cell>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Symbol Column -->\\r\\n  <ng-container matColumnDef=\\\"course_book\\\">\\r\\n    <mat-header-cell *matHeaderCellDef> Course Book </mat-header-cell>\\r\\n    <mat-cell *matCellDef=\\\"let element\\\"> {{element.course_book}} </mat-cell>\\r\\n  </ng-container>\\r\\n\\r\\n<ng-container matColumnDef=\\\"action\\\">\\r\\n    <mat-header-cell *matHeaderCellDef> Action </mat-header-cell>\\r\\n    <mat-cell [routerLink]=\\\"['/bookAdd']\\\" *matCellDef=\\\"let element\\\"><mat-icon  matTooltip=\\\"Edit Book\\\" matPrefix class=\\\"icon\\\">edit</mat-icon> <mat-icon  matTooltip=\\\"Delete Book\\\" matPrefix class=\\\"icon\\\">delete</mat-icon>  \\r\\n            </mat-cell>\\r\\n  </ng-container>\\r\\n  <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n  <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n</mat-table>\\r\\n<router-outlet></router-outlet>\\r\\n\"","import { Component, OnInit,Inject } from '@angular/core';\r\nimport { RestService } from '../rest.service';\r\n\r\n@Component({\r\n  selector: 'app-list-book',\r\n  templateUrl: './viewBook.component.html',\r\n  styleUrls: ['./book.component.css']\r\n})\r\nexport class ListBookComponent implements OnInit {\r\nbookList;\r\ndataSource ;\r\ndisplayedColumns = ['id','book_title','author_name','publication','course_book','action'];\r\n\r\n  constructor( public rest: RestService) {\r\n\r\n  var books = {\r\n  \"fn\":\"selectAll\",\r\n  \"params\":[\"books\"]\r\n  }\r\nthis.rest.getBooks().subscribe((response) => {\r\n    this.dataSource = response ;\r\n    this.bookList = response;\r\n});\r\n }\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export class ClassList {\r\n\tid : string ;\r\n\tname : string ; \r\n}\r\n\r\nexport const CLASSES: ClassList[] = [\r\n  { id: 'Nursery',  name: 'Nursery'  },\r\n  { id: 'LKG',  name: 'LKG'      },\r\n  { id: 'UKG',  name: 'UKG'      },\r\n  { id: 'First',  name: 'First'    },\r\n  { id: 'Second',  name: 'Second'   },\r\n  { id: 'Third' ,  name: 'Third'    },\r\n  { id: 'Fourth',  name: 'Fourth'   },\r\n  { id: 'Fifth',  name: 'Fifth'    },\r\n  { id: 'Sixth',  name: 'Sixth'    },\r\n  { id: 'Seventh', name: 'Seventh'  },\r\n  { id: 'Eighth', name: 'Eighth'   },\r\n  { id: 'Nineth', name: 'Nineth'   },\r\n  { id: 'Tenth', name: 'Tenth'    },\r\n  { id: 'Eleventh', name: 'Eleventh' },\r\n  { id: 'Twelveth', name: 'Twelveth' },\r\n];","module.exports = \"\\r\\n/* mat-grid-tile {\\r\\n  background: lightblue;\\r\\n} */\"","module.exports = \"<app-home></app-home>\\r\\n<mat-sidenav-container>\\r\\n<div class=\\\"container\\\"\\r\\n     fxLayout\\r\\n     fxLayout.xs=\\\"column\\\"\\r\\n     fxLayoutGap=\\\"10px\\\"\\r\\n     fxLayoutGap.xs=\\\"0\\\">\\r\\n     <div fxFlex=\\\"20%\\\">\\r\\n  \\t<mat-card class=\\\"example-card\\\">\\r\\n  <mat-card-header>\\r\\n    <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\r\\n    <mat-card-title>Student</mat-card-title>\\r\\n    <mat-card-subtitle>Class-1 <button mat-button>View</button></mat-card-subtitle>\\r\\n     <mat-card-subtitle>Class-2 <button mat-button>View</button></mat-card-subtitle>\\r\\n      <mat-card-subtitle>Class-3 <button mat-button>View</button></mat-card-subtitle>\\r\\n  </mat-card-header>\\r\\n</mat-card>\\r\\n </div>\\r\\n <div fxFlex=\\\"20%\\\">\\r\\n  \\t<mat-card class=\\\"example-card\\\">\\r\\n  <mat-card-header>\\r\\n    <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\r\\n    <mat-card-title>Student</mat-card-title>\\r\\n    <mat-card-subtitle>Class-1 <button mat-button>View</button></mat-card-subtitle>\\r\\n     <mat-card-subtitle>Class-2 <button mat-button>View</button></mat-card-subtitle>\\r\\n      <mat-card-subtitle>Class-3 <button mat-button>View</button></mat-card-subtitle>\\r\\n  </mat-card-header>\\r\\n</mat-card>\\r\\n </div>\\r\\n <div fxFlex=\\\"20%\\\">\\r\\n  \\t<mat-card class=\\\"example-card\\\">\\r\\n  <mat-card-header>\\r\\n    <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\r\\n    <mat-card-title>Student</mat-card-title>\\r\\n    <mat-card-subtitle>Class-1 <button mat-button>View</button></mat-card-subtitle>\\r\\n     <mat-card-subtitle>Class-2 <button mat-button>View</button></mat-card-subtitle>\\r\\n      <mat-card-subtitle>Class-3 <button mat-button>View</button></mat-card-subtitle>\\r\\n  </mat-card-header>\\r\\n</mat-card>\\r\\n</div>\\r\\n\\r\\n     <div fxFlex=\\\"20%\\\">\\r\\n \\r\\n  \\t<mat-card class=\\\"example-card\\\">\\r\\n  <mat-card-header>\\r\\n    <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\r\\n    <mat-card-title>Student</mat-card-title>\\r\\n    <mat-card-subtitle>Class-1 <button mat-button>View</button></mat-card-subtitle>\\r\\n     <mat-card-subtitle>Class-2 <button mat-button>View</button></mat-card-subtitle>\\r\\n      <mat-card-subtitle>Class-3 <button mat-button>View</button></mat-card-subtitle>\\r\\n  </mat-card-header>\\r\\n</mat-card>\\r\\n  </div></div>\\r\\n</mat-sidenav-container>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<!-- <app-home></app-home>\\r\\n <mat-sidenav-container>\\r\\n   <p>\\r\\n  Edit Student\\r\\n</p>\\r\\n <form name=\\\"studentData\\\" (submit)=\\\"submitEditStudent(postForm.form);\\\" #postForm=\\\"ngForm\\\" class=\\\"student-form\\\" *ngFor = \\\"let student of studentData\\\">\\r\\n<div class=\\\"container\\\"\\r\\n     fxLayout\\r\\n     fxLayout.xs=\\\"column\\\"\\r\\n     fxLayoutGap=\\\"10px\\\"\\r\\n     fxLayoutGap.xs=\\\"0\\\" >\\r\\n  <div class=\\\"item item-1\\\" fxFlex=\\\"15%\\\">\\r\\n     <mat-form-field class=\\\"navigation-items\\\">\\r\\n     <mat-label>Student Name</mat-label>       \\r\\n    <mat-icon matPrefix class=\\\"icon\\\">face</mat-icon>\\r\\n    <input matInput type=\\\"text\\\" name=\\\"first_name\\\" [(ngModel)]=\\\"student.first_name\\\" required minlength=\\\"4\\\" #first_name=\\\"ngModel\\\">\\r\\n    <mat-error *ngIf=\\\"first_name.invalid\\\">Please enter first name.</mat-error>\\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\r\\n    <input matInput placeholder=\\\"Last Name\\\" name=\\\"last_name\\\" [(ngModel)]=\\\"student.last_name\\\" required minlength=\\\"5\\\" #last_name=\\\"ngModel\\\">\\r\\n    <mat-error *ngIf=\\\"last_name.invalid\\\">Please enter last name.</mat-error>\\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n   <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\r\\n    <input matInput placeholder=\\\"Father Name\\\" name=\\\"father_name\\\" [(ngModel)]=\\\"student.father_name\\\" required minlength=\\\"4\\\" #father_name=\\\"ngModel\\\">\\r\\n    <mat-error *ngIf=\\\"father_name.invalid\\\">Please enter father name.</mat-error>\\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\r\\n    <input matInput placeholder=\\\"Mother Name\\\" name=\\\"mother_name\\\" [(ngModel)]=\\\"student.mother_name\\\" required minlength=\\\"5\\\" #mother_name=\\\"ngModel\\\">\\r\\n    <mat-error *ngIf=\\\"mother_name.invalid\\\">Please enter mother name.</mat-error>\\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<div class=\\\"container\\\"\\r\\n     fxLayout\\r\\n     fxLayout.xs=\\\"column\\\"\\r\\n     fxLayoutGap=\\\"10px\\\"\\r\\n     fxLayoutGap.xs=\\\"0\\\">\\r\\n  <div class=\\\"item item-1\\\" fxFlex=\\\"15%\\\">\\r\\n     <mat-form-field class=\\\"navigation-items\\\">\\r\\n     <mat-label>Gender</mat-label>       \\r\\n    <mat-icon matPrefix class=\\\"icon\\\">sex</mat-icon>\\r\\n    <mat-select placeholder=\\\"gender\\\"  name=\\\"gender\\\" [(ngModel)]=\\\"student.gender\\\" required #gender=\\\"ngModel\\\">\\r\\n      <mat-option value=\\\"male\\\">Male</mat-option>\\r\\n      <mat-option value=\\\"female\\\">Female</mat-option>\\r\\n    </mat-select>\\r\\n<mat-error *ngIf=\\\"gender.invalid\\\">Please select gender.</mat-error>\\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n       <mat-label>Address</mat-label>  \\r\\n    <mat-icon matPrefix class=\\\"icon\\\">place</mat-icon>\\r\\n        <textarea matInput name=\\\"address\\\" [(ngModel)]=\\\"student.address\\\" required minlength=\\\"10\\\" #address=\\\"ngModel\\\"></textarea>\\r\\n        <mat-error *ngIf=\\\"address.invalid\\\">Please enter address.</mat-error>\\r\\n\\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n       <mat-label>Phone</mat-label> \\r\\n    <mat-icon matPrefix class=\\\"icon\\\">call</mat-icon>\\r\\n    <input matInput placeholder=\\\"Contact\\\" name=\\\"contact_number\\\" [(ngModel)]=\\\"student.contact_number\\\" required minlength=\\\"9\\\" maxlength=\\\"11\\\" #contact_name=\\\"ngModel\\\">\\r\\n     <mat-error *ngIf=\\\"contact_name.invalid\\\">Please enter contact.</mat-error>\\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<div class=\\\"container\\\"\\r\\n     fxLayout\\r\\n     fxLayout.xs=\\\"column\\\"\\r\\n     fxLayoutGap=\\\"10px\\\"\\r\\n     fxLayoutGap.xs=\\\"0\\\">\\r\\n  <div class=\\\"item item-1\\\" fxFlex=\\\"15%\\\">\\r\\n     <mat-form-field class=\\\"navigation-items\\\">\\r\\n     <mat-label>Email</mat-label>       \\r\\n    <mat-icon matPrefix class=\\\"icon\\\">email</mat-icon>\\r\\n    <input matInput value=\\\"\\\" [(ngModel)]=\\\"student.email\\\" name=\\\"email\\\"  required #email=\\\"ngModel\\\">\\r\\n    <mat-error *ngIf=\\\"email.invalid\\\">Please enter valid email address.</mat-error>\\r\\n   \\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n<div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\r\\n  <mat-form-field >\\r\\n  <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\" name=\\\"dob\\\" [(ngModel)]=\\\"student.dob\\\" required #dob=\\\"ngModel\\\" >\\r\\n<mat-datepicker-toggle matPrefix [for]=\\\"picker\\\">\\r\\n  \\r\\n</mat-datepicker-toggle>\\r\\n<mat-datepicker #picker></mat-datepicker>\\r\\n<mat-error *ngIf=\\\"dob.invalid\\\">Please enter dob.</mat-error>\\r\\n</mat-form-field>\\r\\n</div>\\r\\n\\r\\n</div>\\r\\n<div class=\\\"container\\\"\\r\\n     fxLayout\\r\\n     fxLayout.xs=\\\"column\\\"\\r\\n     fxLayoutAlign=\\\"left\\\"\\r\\n     fxLayoutGap=\\\"10px\\\"\\r\\n     fxLayoutGap.xs=\\\"0\\\">\\r\\n  <div class=\\\"button-row\\\">\\r\\n     <button type=\\\"submit\\\" mat-stroked-button color=\\\"primary\\\">Save</button>\\r\\n      <button type=\\\"button\\\" (click)=\\\"goto()\\\" mat-raised-button color=\\\"primary\\\">Cancel</button>\\r\\n\\r\\n  </div>\\r\\n  \\r\\n\\r\\n</div>\\r\\n\\r\\n</form>\\r\\n</mat-sidenav-container> -->\\r\\n\\r\\n<app-home></app-home>\\r\\n <mat-sidenav-container>\\r\\n <form  name=\\\"editStudentData\\\" (submit)=\\\"submitEditStudent(postForm.form)\\\" #postForm=\\\"ngForm\\\"  class=\\\"student-form\\\" *ngFor = \\\"let student of studentData\\\">\\r\\n<div class=\\\"container\\\"\\r\\n     fxLayout\\r\\n     fxLayout.xs=\\\"column\\\"\\r\\n     fxLayoutGap=\\\"10px\\\"\\r\\n     fxLayoutGap.xs=\\\"0\\\">\\r\\n  <div class=\\\"item item-1\\\" fxFlex=\\\"15%\\\">\\r\\n     <mat-form-field class=\\\"navigation-items\\\">\\r\\n     <mat-label>Student Name</mat-label>       \\r\\n    <mat-icon matPrefix class=\\\"icon\\\">face</mat-icon>\\r\\n    <input matInput value=\\\"\\\" name=\\\"first_name\\\" [(ngModel)]=\\\"student.first_name\\\" #first_name=\\\"ngModel\\\" required>\\r\\n     <mat-error *ngIf=\\\"first_name.invalid\\\">Please enter first name.</mat-error> \\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\r\\n    <input matInput placeholder=\\\"Last Name\\\" name=\\\"last_name\\\" [(ngModel)]=\\\"student.last_name\\\" #last_name=\\\"ngModel\\\" required>\\r\\n     <mat-error *ngIf=\\\"last_name.invalid\\\">Please enter last name.</mat-error> \\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\r\\n    <input matInput placeholder=\\\"Adhaar No\\\" name=\\\"adhaar_no\\\" [(ngModel)]=\\\"student.adhaar_no\\\" #adhaar_no=\\\"ngModel\\\" required>\\r\\n     <mat-error *ngIf=\\\"adhaar_no.invalid\\\">Please enter last name.</mat-error> \\r\\n    \\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\r\\n   <mat-select placeholder=\\\"Category\\\"  name=\\\"category\\\" [(ngModel)]=\\\"student.category\\\" #category=\\\"ngModel\\\">\\r\\n      <mat-option value=\\\"OBC\\\">OBC</mat-option>\\r\\n      <mat-option value=\\\"Gen\\\">Gen</mat-option>\\r\\n      <mat-option value=\\\"SC\\\">SC</mat-option>\\r\\n      <mat-option value=\\\"ST\\\">ST</mat-option>\\r\\n    </mat-select>\\r\\n  </mat-form-field>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\r\\n   <mat-select placeholder=\\\"Religion\\\"  name=\\\"religion\\\" [(ngModel)]=\\\"student.religion\\\" #religion=\\\"ngModel\\\">\\r\\n      <mat-option value=\\\"HINDU\\\">HINDU</mat-option>\\r\\n      <mat-option value=\\\"MUSLIM\\\">MUSLIM</mat-option>\\r\\n      <mat-option value=\\\"SIKH\\\">SIKH</mat-option>\\r\\n      <mat-option value=\\\"CHRISTIAN\\\">CHRISTIAN</mat-option>\\r\\n      <mat-option value=\\\"BODH\\\">BODH</mat-option>\\r\\n      <mat-option value=\\\"JAIN\\\">JAIN</mat-option>\\r\\n    </mat-select>\\r\\n  </mat-form-field>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\r\\n   <mat-select placeholder=\\\"Handicapped\\\"  name=\\\"handicapped\\\" [(ngModel)]=\\\"student.handicapped\\\" #handicapped=\\\"ngModel\\\">\\r\\n      <mat-option value=\\\"YES\\\">Yes</mat-option>\\r\\n      <mat-option value=\\\"NO\\\">No</mat-option>\\r\\n    </mat-select>\\r\\n  </mat-form-field>\\r\\n</div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"container\\\"\\r\\n     fxLayout\\r\\n     fxLayout.xs=\\\"column\\\"\\r\\n     fxLayoutGap=\\\"10px\\\"\\r\\n     fxLayoutGap.xs=\\\"0\\\">\\r\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\r\\n    <input matInput placeholder=\\\"Father Name\\\" name=\\\"father_name\\\" [(ngModel)]=\\\"student.father_name\\\" #father_name=\\\"ngModel\\\" required>\\r\\n     <mat-error *ngIf=\\\"father_name.invalid\\\">Please enter father name.</mat-error> \\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\r\\n    <input matInput placeholder=\\\"Father Qualification\\\" name=\\\"father_qualification\\\" [(ngModel)]=\\\"student.father_qualification\\\" #father_qualification=\\\"ngModel\\\" required>\\r\\n     <mat-error *ngIf=\\\"father_qualification.invalid\\\">Please enter father Qualification.</mat-error> \\r\\n     \\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\r\\n    <input matInput placeholder=\\\"Father Occupation\\\" name=\\\"father_occupation\\\" [(ngModel)]=\\\"student.father_occupation\\\" #father_occupation=\\\"ngModel\\\" required>\\r\\n     <mat-error *ngIf=\\\"father_occupation.invalid\\\">Please enter father Occupation.</mat-error> \\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\r\\n    <input matInput placeholder=\\\"Mother Name\\\" name=\\\"mother_name\\\" [(ngModel)]=\\\"student.mother_name\\\" #mother_name=\\\"ngModel\\\" required>\\r\\n    <mat-error *ngIf=\\\"mother_name.invalid\\\">Please enter mother name.</mat-error>\\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\r\\n    <input matInput placeholder=\\\"Mother Qualification\\\" name=\\\"mother_qualification\\\" [(ngModel)]=\\\"student.mother_qualification\\\" #mother_qualification=\\\"ngModel\\\">\\r\\n     \\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\r\\n    <input matInput placeholder=\\\"Mother Occupation\\\" name=\\\"mother_occupation\\\" [(ngModel)]=\\\"student.mother_occupation\\\" #mother_occupation=\\\"ngModel\\\">\\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n  \\r\\n</div>\\r\\n\\r\\n<div class=\\\"container\\\"\\r\\n     fxLayout\\r\\n     fxLayout.xs=\\\"column\\\"\\r\\n     fxLayoutGap=\\\"10px\\\"\\r\\n     fxLayoutGap.xs=\\\"0\\\">\\r\\n  <div class=\\\"item item-1\\\" fxFlex=\\\"15%\\\">\\r\\n     <mat-form-field class=\\\"navigation-items\\\">\\r\\n     <mat-label>Gender</mat-label>       \\r\\n    <mat-icon matPrefix class=\\\"icon\\\">sex</mat-icon>\\r\\n    <mat-select placeholder=\\\"gender\\\"  name=\\\"gender\\\" [(ngModel)]=\\\"student.gender\\\" #gender=\\\"ngModel\\\" required>\\r\\n      <mat-option value=\\\"male\\\">Male</mat-option>\\r\\n      <mat-option value=\\\"female\\\">Female</mat-option>\\r\\n    </mat-select>\\r\\n<mat-error *ngIf=\\\"gender.invalid\\\">Please select gender.</mat-error> \\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n       <mat-label>Address</mat-label>  \\r\\n    <mat-icon matPrefix class=\\\"icon\\\">place</mat-icon>\\r\\n        <textarea matInput name=\\\"address\\\" [(ngModel)]=\\\"student.address\\\" #address=\\\"ngModel\\\" required></textarea>\\r\\n         <mat-error *ngIf=\\\"address.invalid\\\">Please enter address.</mat-error>\\r\\n\\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n       <mat-label>Phone1</mat-label> \\r\\n    <mat-icon matPrefix class=\\\"icon\\\">call</mat-icon>\\r\\n    <input matInput placeholder=\\\"Contact\\\" name=\\\"contact_number\\\" [(ngModel)]=\\\"student.contact_number\\\" #contact_number=\\\"ngModel\\\" required>\\r\\n      <mat-error *ngIf=\\\"contact_number.invalid\\\">Please enter contact.</mat-error> \\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n       <mat-label>Phone2</mat-label> \\r\\n    <mat-icon matPrefix class=\\\"icon\\\">call</mat-icon>\\r\\n    <input matInput placeholder=\\\"Contact\\\" name=\\\"contact_number2\\\" [(ngModel)]=\\\"student.contact_number2\\\" #contact_number2=\\\"ngModel\\\">\\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n   <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n       <mat-label>Annual Income</mat-label> \\r\\n    <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\r\\n    <input matInput placeholder=\\\"Income\\\" name=\\\"annual_income\\\" [(ngModel)]=\\\"student.annual_income\\\" #annual_income=\\\"ngModel\\\" required>\\r\\n    <mat-error *ngIf=\\\"annual_income.invalid\\\">Please enter annual income.</mat-error> \\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\r\\n   <mat-select placeholder=\\\"miniority\\\"  name=\\\"miniority\\\" [(ngModel)]=\\\"student.miniority\\\" #miniority=\\\"ngModel\\\">\\r\\n      <mat-option value=\\\"YES\\\">Yes</mat-option>\\r\\n      <mat-option value=\\\"NO\\\">No</mat-option>\\r\\n    </mat-select>\\r\\n  </mat-form-field>\\r\\n</div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<div class=\\\"container\\\"\\r\\n     fxLayout\\r\\n     fxLayout.xs=\\\"column\\\"\\r\\n     fxLayoutGap=\\\"10px\\\"\\r\\n     fxLayoutGap.xs=\\\"0\\\">\\r\\n  <div class=\\\"item item-1\\\" fxFlex=\\\"15%\\\">\\r\\n     <mat-form-field class=\\\"navigation-items\\\">\\r\\n     <mat-label>Email</mat-label>       \\r\\n    <mat-icon matPrefix class=\\\"icon\\\">email</mat-icon>\\r\\n    <input matInput value=\\\"\\\" name=\\\"email\\\" [(ngModel)]=\\\"student.email\\\" #email=\\\"ngModel\\\" required>\\r\\n     <mat-error *ngIf=\\\"email.invalid\\\">Please enter valid email address.</mat-error> \\r\\n   \\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\r\\n   <mat-select placeholder=\\\"Only Child\\\"  name=\\\"only_child\\\" [(ngModel)]=\\\"student.only_child\\\" #only_child=\\\"ngModel\\\">\\r\\n      <mat-option value=\\\"YES\\\">Yes</mat-option>\\r\\n      <mat-option value=\\\"NO\\\">No</mat-option>\\r\\n    </mat-select>\\r\\n\\r\\n     <mat-error *ngIf=\\\"only_child.invalid\\\">Please enter only_child.</mat-error> \\r\\n  </mat-form-field>\\r\\n</div>\\r\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"DOB\\\" name=\\\"dob\\\" [(ngModel)]=\\\"student.dob\\\" #dob=\\\"ngModel\\\" required>\\r\\n  <mat-datepicker-toggle matPrefix [for]=\\\"picker\\\">\\r\\n    \\r\\n  </mat-datepicker-toggle>\\r\\n  <mat-datepicker #picker></mat-datepicker>\\r\\n   <mat-error *ngIf=\\\"dob.invalid\\\">Please enter dob.</mat-error> \\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-icon matPrefix class=\\\"icon\\\">book</mat-icon>\\r\\n    <mat-select placeholder=\\\"Class\\\"  name=\\\"class\\\" [(ngModel)]=\\\"student.class\\\" #class=\\\"ngModel\\\" required>\\r\\n      <mat-option *ngFor=\\\"let class of classData;\\\" value=\\\"{{class.id}}\\\">{{class.name}}</mat-option>\\r\\n    </mat-select>\\r\\n     <mat-error *ngIf=\\\"class.invalid\\\">Please select class.</mat-error> \\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n<div class=\\\"item item-1\\\" fxFlex=\\\"15%\\\">\\r\\n    <button mat-stroked-button  type=\\\"button\\\" color=\\\"primary\\\" (click)=\\\"filePicker.click()\\\">Pick Image</button>\\r\\n    <input type=\\\"file\\\"  style=\\\"display: none;\\\" #filePicker (change)=\\\"onImagePicked($event)\\\">\\r\\n  </div>\\r\\n  <div class=\\\"image-preview\\\" *ngIf=\\\"imagePreview !='' && imagePreview\\\">\\r\\n    <img [src]=\\\"imagePreview\\\" [alt]=\\\"form.value.first_name\\\">\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"container\\\"\\r\\n     fxLayout\\r\\n     fxLayout.xs=\\\"column\\\"\\r\\n     fxLayoutAlign=\\\"left\\\"\\r\\n     fxLayoutGap=\\\"10px\\\"\\r\\n     fxLayoutGap.xs=\\\"0\\\">\\r\\n  <div class=\\\"button-row\\\">\\r\\n     <button type=\\\"submit\\\" mat-stroked-button color=\\\"primary\\\">Save</button>\\r\\n      <button mat-raised-button color=\\\"primary\\\">Reset</button>\\r\\n\\r\\n  </div>\\r\\n  \\r\\n\\r\\n</div>\\r\\n\\r\\n</form>\\r\\n</mat-sidenav-container>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl,NgForm,Validators} from '@angular/forms';\r\nimport { RestService } from '../rest.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CLASSES } from '../class';\r\nimport { DatePipe } from '@angular/common';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-edit-student',\r\n  templateUrl: './edit-student.component.html',\r\n  styleUrls: ['./edit-student.component.css']\r\n})\r\nexport class EditStudentComponent implements OnInit {\r\n    studentData: any = {};\r\n    editStudentId;\r\n\tprivate sub: any;\r\n    editStudentData;\r\n    classData = CLASSES ;\r\n\r\n  constructor(public rest: RestService,private route:  ActivatedRoute,private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  \t\r\n     this.sub = this.route.params.subscribe(params => {\r\n    console.log(\"std id: \"+[params['id']]);\r\n    this.editStudentId = params['id'];\r\n    this.rest.getStudentsById(params['id']).then((response) => {\r\n    console.log(\"res KV: \",response);\r\n    this.studentData = response ;\r\n    console.log(\"studentData edit :\",this.studentData);\r\n    });\r\n  });\r\n  }\r\n\r\n   submitEditStudent(form: NgForm) {\r\n    if(form.invalid){\r\n    return;\r\n    }\r\n    console.log(\"edit form :\",form);\r\n    let keys = Object.keys(form.controls);\r\n    //form.value.dob = (form.value.dob).toString();\r\n    let values = Object.values(form.value);\r\n    //let classValue = Object.values(form.value.class) ;\r\n    this.rest.update('students',this.editStudentId,form.value).then((response) => {\r\n       alert(\"Student Edited !!\");\r\n       this.router.navigate(['/liststudent']);\r\n    });\r\n  }\r\n}\r\n\r\n","import firebase from \"firebase\";\r\nexport class FirebaseWrapper {\r\n\r\n  constructor(){\r\n    let config = {\r\n    apiKey: \"AIzaSyD9B2YdN4gAPqryKSiHRQocPc9kA_ZSFLY\",\r\n    authDomain: \"jhoraapp.firebaseapp.com\",\r\n    databaseURL: \"https://jhoraapp.firebaseio.com\",\r\n    projectId: \"jhoraapp\",\r\n    storageBucket: \"jhoraapp.appspot.com\",\r\n    messagingSenderId: \"105398319929\"\r\n  };\r\n    firebase.initializeApp(config);\r\n    this.fireStore = firebase.firestore();\r\n  }\r\n\r\n  uuidv4() {\r\n    let x = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c)=> {\r\n      var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n      return v.toString(16);\r\n    });\r\n    return Math.floor(new Date() / 1000)+\"-\"+ x;\r\n  }\r\n\r\n  login(body){\r\n    return firebase.auth().signInWithEmailAndPassword(body.username, body.password).then(function() {\r\n      return  firebase.auth().currentUser;\r\n    });\r\n  }\r\n\r\n  logout(){\r\n\r\n  }\r\n\r\n  addStudent(student){\r\n    return this.fireStore.collection('students').where('class', '==', student.class).get().then((students)=>{\r\n       return students.size || students.length;\r\n    })\r\n    .then((data)=>{\r\n      data ? (student.roll_number = data +1) : (student.roll_number = 1);\r\n      let uId = this.uuidv4();\r\n      student.uId = uId;\r\n      return this.fireStore.collection('students').doc(uId).set(student)\r\n    })\r\n  }\r\n\r\n  addReceipt(receipt){\r\n    let uId = this.uuidv4();\r\n      receipt.uId = uId;\r\n      console.log(\"firebase: \",receipt);\r\n      return this.fireStore.collection('receipt').doc(uId).set(receipt)\r\n\r\n  }\r\n\r\n  selectAll(tableName){\r\n    let p = new Promise( (resolve, reject)=>{\r\n      this.fireStore.collection(tableName).get()\r\n      .then((snapshots) => {\r\n        let rows = []\r\n        snapshots.forEach((doc) => {\r\n          let data = doc.data();\r\n          rows.push(data)\r\n        })\r\n        resolve(rows)\r\n      })\r\n    });\r\n    return p;\r\n  }\r\n\r\n  insert(tableName ='', docName, data){\r\n    let p = new Promise( (resolve, reject)=>{\r\n      resolve(this.fireStore.collection(tableName).doc(docName).set(data));\r\n    });\r\n    return p;\r\n  }\r\n\r\n  update(tableName, docName, data){\r\n    let p = new Promise( (resolve, reject)=>{\r\n      resolve(this.fireStore.collection(tableName).doc(docName).update(data));\r\n    });\r\n    return p;\r\n  }\r\n\r\n  selectAllById(tableName,id){\r\n    let p = new Promise( (resolve, reject)=>{\r\n      this.fireStore.collection(tableName).where('uId', '==', id).get()\r\n      .then((snapshots) => {\r\n        let rows = []\r\n        snapshots.forEach((doc) => {\r\n          let data = doc.data();\r\n          rows.push(data)\r\n        })\r\n        resolve(rows)\r\n      })\r\n    });\r\n    return p;\r\n  }\r\n\r\n  deleteData(tableName, docName){\r\n    let p = new Promise( (resolve, reject)=>{\r\n      resolve(this.fireStore.collection(tableName).doc(docName).delete());\r\n    });\r\n    return p;\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<mat-sidenav-container>\\r\\n <mat-sidenav-content>\\r\\n   <mat-toolbar color=\\\"primary\\\">\\r\\n    <div fxHide.gt-xs>\\r\\n      <button mat-icon-button>\\r\\n       <mat-icon>menu</mat-icon>\\r\\n     </button>\\r\\n   </div>\\r\\n   <div>\\r\\n    <a>\\r\\n     Daksh International Daniyari\\r\\n   </a>\\r\\n </div>\\r\\n <div fxFlex fxLayout fxLayoutAlign=\\\"flex-end\\\"  fxHide.xs>\\r\\n   <ul fxLayout fxLayoutGap=\\\"20px\\\" class=\\\"navigation-items\\\">\\r\\n     <!-- <li>\\r\\n       <a mat-list-item\\r\\n       [routerLink]=\\\"['/login']\\\">\\r\\n       <mat-icon>input</mat-icon>&nbsp;\\r\\n       <span  class=\\\"label\\\">Login</span>\\r\\n     </a>\\r\\n        </li> -->\\r\\n\\r\\n   <li [matMenuTriggerFor]=\\\"student\\\"  #matMenuTrigger1=\\\"matMenuTrigger\\\">\\r\\n     <a mat-list-item (mouseenter)=\\\"matMenuTrigger1.openMenu()\\\">\\r\\n       <mat-icon class=\\\"icon\\\">people</mat-icon>&nbsp;\\r\\n       <span class=\\\"label\\\">Student</span>\\r\\n     </a>\\r\\n     <mat-menu #student=\\\"matMenu\\\" (mouseleave)=\\\"matMenuTrigger1.closeMenu()\\\" [overlapTrigger]=\\\"false\\\">\\r\\n       <button mat-menu-item [routerLink]=\\\"['/student']\\\">Add Student</button>\\r\\n       <button mat-menu-item [routerLink]=\\\"['/liststudent']\\\">View Student</button>\\r\\n       <button mat-menu-item [routerLink]=\\\"['/attendance']\\\">Attendance</button>\\r\\n       <button mat-menu-item [routerLink]=\\\"['/attendanceView']\\\">View Attendance</button>\\r\\n     </mat-menu>\\r\\n   </li>\\r\\n   <li [matMenuTriggerFor]=\\\"books\\\"  #matMenuTrigger3=\\\"matMenuTrigger\\\">\\r\\n     <a mat-list-item (mouseenter)=\\\"matMenuTrigger3.openMenu()\\\">\\r\\n       <mat-icon class=\\\"icon\\\">book</mat-icon>&nbsp;\\r\\n       <span class=\\\"label\\\">Books</span>\\r\\n     </a>\\r\\n     <mat-menu #books=\\\"matMenu\\\" (mouseleave)=\\\"matMenuTrigger1.closeMenu()\\\" [overlapTrigger]=\\\"false\\\">\\r\\n       <button mat-menu-item [routerLink]=\\\"['/bookAdd']\\\">Add Books</button>\\r\\n       <button mat-menu-item [routerLink]=\\\"['/bookView']\\\">View Books</button>\\r\\n       <button mat-menu-item [routerLink]=\\\"['/issueBook']\\\">Add Library</button>\\r\\n       <button mat-menu-item [routerLink]=\\\"['/issuedBooksView']\\\">View Library</button>\\r\\n     </mat-menu>\\r\\n   </li>\\r\\n\\r\\n   <li [matMenuTriggerFor]=\\\"receipt\\\" #matMenuTrigger2=\\\"matMenuTrigger\\\">\\r\\n     <a mat-list-item (mouseenter)=\\\"matMenuTrigger2.openMenu()\\\">\\r\\n       <mat-icon class=\\\"icon\\\">receipt</mat-icon>&nbsp;\\r\\n       <span class=\\\"label\\\">Receipt</span>\\r\\n     </a>\\r\\n     <mat-menu #receipt=\\\"matMenu\\\" (mouseleave)=\\\"matMenuTrigger2.closeMenu()\\\" [overlapTrigger]=\\\"false\\\">\\r\\n       <button mat-menu-item [routerLink]=\\\"['/receipt']\\\">Add Receipt</button>\\r\\n       <button mat-menu-item [routerLink]=\\\"['/receiptList']\\\">View Receipt</button>\\r\\n     </mat-menu>\\r\\n   </li>\\r\\n\\r\\n <li>\\r\\n   <a mat-list-item\\r\\n   [routerLink]=\\\"['/dashboard']\\\">\\r\\n   <mat-icon class=\\\"icon\\\">dashboard</mat-icon>&nbsp;\\r\\n   <span class=\\\"label\\\">Dashboard</span>\\r\\n </a>\\r\\n</li>\\r\\n<li>\\r\\n <a mat-list-item\\r\\n   [routerLink]=\\\"['/login']\\\">\\r\\n   <mat-icon class=\\\"icon\\\">input</mat-icon>&nbsp;\\r\\n   <span class=\\\"label\\\">LogOut</span>\\r\\n </a>\\r\\n</li>\\r\\n</ul>\\r\\n</div>\\r\\n</mat-toolbar>\\r\\n<main>\\r\\n</main>\\r\\n</mat-sidenav-content>\\r\\n</mat-sidenav-container>\\r\\n<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<app-home></app-home>\\r\\n<p>\\r\\n  library works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-library',\r\n  templateUrl: './library.component.html',\r\n  styleUrls: ['./library.component.css']\r\n})\r\nexport class LibraryComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<h2 mat-dialog-title>Delete Student</h2>\\r\\n<mat-dialog-content>Are you sure?</mat-dialog-content>\\r\\n<mat-dialog-actions>\\r\\n  <button mat-button mat-dialog-close>No</button>\\r\\n  <!-- The mat-dialog-close directive optionally accepts a value as a result for the dialog. -->\\r\\n  <button mat-button [mat-dialog-close]=\\\"true\\\" (click)=\\\"deleteStudent(data.studentId)\\\" >Yes</button>\\r\\n</mat-dialog-actions>\"","module.exports = \"mat-header-cell {\\r\\n\\tcolor: #3F51B5;\\r\\n\\tfont-family: courier; \\r\\n\\tfont-size: 100%;\\r\\n}\\r\\nmat-icon {\\r\\n\\tcolor: #3F51B5;\\r\\n}\"","module.exports = \"<app-home></app-home>\\r\\n<mat-table #table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n  <!-- Position Column -->\\r\\n  <ng-container matColumnDef=\\\"roll_number\\\">\\r\\n            <mat-header-cell *matHeaderCellDef>Roll Number</mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let element \\\">{{element.roll_number }} \\r\\n            </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n  <ng-container matColumnDef=\\\"first_name\\\">\\r\\n            <mat-header-cell *matHeaderCellDef>Name</mat-header-cell>\\r\\n            <mat-cell  *matCellDef=\\\"let element \\\"><a href=\\\"\\\" [routerLink]=\\\"['/studentDetail',element.uId]\\\">{{element.first_name | titlecase }} </a>\\r\\n            </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n  <!-- Name Column -->\\r\\n  <ng-container matColumnDef=\\\"father_name\\\">\\r\\n    <mat-header-cell *matHeaderCellDef> Father Name </mat-header-cell>\\r\\n    <mat-cell *matCellDef=\\\"let element\\\"> {{element.father_name | titlecase }} </mat-cell>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Weight Column -->\\r\\n  <ng-container matColumnDef=\\\"mother_name\\\">\\r\\n    <mat-header-cell  *matHeaderCellDef> Mother Name </mat-header-cell>\\r\\n    <mat-cell *matCellDef=\\\"let element\\\"> {{element.mother_name | titlecase }} </mat-cell>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Symbol Column -->\\r\\n  <ng-container matColumnDef=\\\"class\\\">\\r\\n    <mat-header-cell *matHeaderCellDef> Class </mat-header-cell>\\r\\n    <mat-cell *matCellDef=\\\"let element\\\"> {{element.class}} </mat-cell>\\r\\n  </ng-container>\\r\\n\\r\\n<ng-container matColumnDef=\\\"dob\\\">\\r\\n            <mat-header-cell *matHeaderCellDef>DOB</mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let element \\\">  {{element.dob | date}}\\r\\n            </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"uId\\\">\\r\\n            <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\\r\\n            <mat-cell [routerLink]=\\\"['/student',element.uId]\\\" *matCellDef=\\\"let element\\\"><mat-icon  matTooltip=\\\"Edit Student\\\" matPrefix class=\\\"icon\\\">edit</mat-icon> <mat-icon (click)=\\\"openDialog(element)\\\" matTooltip=\\\"Delete Student\\\" matPrefix class=\\\"icon\\\">delete</mat-icon>\\r\\n            </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n  <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n  <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n</mat-table>\\r\\n<router-outlet></router-outlet>\\r\\n\"","import { Component, OnInit,Inject } from '@angular/core';\r\nimport { RestService } from '../rest.service';\r\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { Router } from '@angular/router';\r\n\r\nexport interface DialogData {\r\n  studentId;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-list-student',\r\n  templateUrl: './list-student.component.html',\r\n  styleUrls: ['./list-student.component.css']\r\n})\r\nexport class ListStudentComponent implements OnInit {\r\nstudentList;\r\ndataSource ;\r\ndisplayedColumns = ['roll_number','first_name','father_name','mother_name','class','dob','uId'];\r\n\r\n  constructor( public rest: RestService, public dialog: MatDialog) {\r\n\r\n  var student = {\r\n  \"fn\":\"selectAll\",\r\n  \"params\":[\"students\"]\r\n  }\r\nthis.rest.getStudents().then((response) => {\r\n    console.log(\"res KV: \",response);\r\n    this.dataSource = response ;\r\n    this.studentList = response;\r\n    console.log(\"dataSource :\",this.dataSource);\r\n});\r\n }\r\n openDialog(studentData) {\r\n   console.log(\"studentData console: \",studentData);\r\n    const dialogRef = this.dialog.open(DialogContent, {\r\n      data: {\r\n        studentId: studentData.uId\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log(`Dialog result: ${result}`);\r\n      console.log(\"Dialog result: \",result);\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\r\n@Component({\r\n  selector: 'dialog-content-example-dialog',\r\n  templateUrl: 'delete_dialog.html',\r\n})\r\nexport class DialogContent {\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: DialogData,public rest: RestService,private router: Router) {}\r\n  deleteStudent(id) {\r\n   console.log(\"delete : \"+id);\r\n     this.rest.delete(\"students\",id).then((response) => {\r\n       alert(\"Student deleted.\");\r\n       this.rest.getStudents().then((response) => {\r\n    console.log(\"res KV getStudents: \",response);\r\n\r\n});\r\n       this.router.navigate(['/liststudent']);\r\n    });\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<!-- <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\">\\r\\n  <form name=\\\"loginForm\\\" (submit)=\\\"getLoggedIn(postForm)\\\" #postForm=\\\"ngForm\\\">\\r\\n<mat-card>\\r\\n   <mat-card-header color=\\\"primary\\\">\\r\\n     <mat-card-title>Login</mat-card-title>\\r\\n   </mat-card-header>\\r\\n   <mat-card-content>\\r\\n     <form class=\\\"example-form\\\">\\r\\n       <table class=\\\"example-full-width\\\" cellspacing=\\\"0\\\">\\r\\n         <tr>\\r\\n           <td>\\r\\n             <mat-form-field>\\r\\n               <mat-icon matPrefix class=\\\"icon\\\">email</mat-icon>\\r\\n             <input matInput placeholder=\\\"Username\\\" ngModel name=\\\"username\\\" #username=\\\"ngModel\\\" minlength=\\\"5\\\" required>\\r\\n                          <mat-error *ngIf=\\\"username.invalid\\\">Please enter last name.</mat-error>\\r\\n\\r\\n             <input matInput placeholder=\\\"Username\\\" ngModel name=\\\"username\\\" #username=\\\"ngModel\\\" minlength=\\\"5\\\" required>\\r\\n             <mat-error *ngIf=\\\"username.invalid\\\">Please enter User Name.</mat-error>\\r\\n             </mat-form-field>\\r\\n           </td>\\r\\n         </tr>\\r\\n         <tr>\\r\\n         <td><mat-form-field>\\r\\n           <mat-icon matPrefix class=\\\"icon\\\">lock</mat-icon>\\r\\n           <input matInput placeholder=\\\"Password\\\" ngModel type=\\\"password\\\" name=\\\"password\\\" #password=\\\"ngModel\\\" minlength=\\\"5\\\" required>\\r\\n           <mat-error *ngIf=\\\"password.invalid\\\">Please enter Password.</mat-error>\\r\\n         </mat-form-field>\\r\\n       </td>\\r\\n       </tr></table>\\r\\n     </form>\\r\\n   </mat-card-content>\\r\\n   <div style=\\\"margin-left:70px;\\\">\\r\\n   <mat-card-actions>\\r\\n     <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\">Login</button>\\r\\n   </mat-card-actions>\\r\\n</div>\\r\\n </mat-card>\\r\\n</form>\\r\\n</div>\\r\\n -->\\r\\n\\r\\n\\r\\n <!-- <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\">\\r\\n    <form class=\\\"example-form\\\" name=\\\"loginData\\\" (submit)=\\\"getLoggedIn(postForm)\\\" #postForm=\\\"ngForm\\\">\\r\\n <mat-card>\\r\\n   <mat-card-header color=\\\"primary\\\">\\r\\n     <mat-card-title>Login</mat-card-title>\\r\\n   </mat-card-header>\\r\\n   <mat-card-content>\\r\\n   \\r\\n       <table class=\\\"example-full-width\\\" cellspacing=\\\"0\\\">\\r\\n         <tr>\\r\\n           <td>\\r\\n             <mat-form-field>\\r\\n              <mat-icon matPrefix class=\\\"icon\\\">email</mat-icon>\\r\\n             <input matInput placeholder=\\\"Username\\\" ngModel name=\\\"username\\\" #username=\\\"ngModel\\\" minlength=\\\"5\\\" required>\\r\\n             <mat-error *ngIf=\\\"username.invalid\\\">Please enter last name.</mat-error>\\r\\n             </mat-form-field>\\r\\n           </td>\\r\\n         </tr>\\r\\n         <tr>\\r\\n         <td><mat-form-field>\\r\\n          <mat-icon matPrefix class=\\\"icon\\\">lock</mat-icon>\\r\\n           <input matInput placeholder=\\\"Password\\\" ngModel type=\\\"password\\\" name=\\\"password\\\" #password=\\\"ngModel\\\" required>\\r\\n         </mat-form-field></td>\\r\\n       </tr></table>\\r\\n     \\r\\n   </mat-card-content>\\r\\n   <div style=\\\"margin-left:70px;\\\">\\r\\n   <mat-card-actions>\\r\\n     <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\">Login</button>\\r\\n   </mat-card-actions>\\r\\n </div>\\r\\n </mat-card>\\r\\n </form>\\r\\n </div> -->\\r\\n\\r\\n\\r\\n <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\">\\r\\n    <form class=\\\"example-form\\\" name=\\\"loginData\\\" (submit)=\\\"getLoggedIn(postForm)\\\" #postForm=\\\"ngForm\\\">\\r\\n<mat-card>\\r\\n   <mat-card-header color=\\\"primary\\\">\\r\\n     <mat-card-title>Login</mat-card-title>\\r\\n   </mat-card-header>\\r\\n   <mat-card-content>\\r\\n   \\r\\n       <table class=\\\"example-full-width\\\" cellspacing=\\\"0\\\">\\r\\n         <tr>\\r\\n           <td>\\r\\n             <mat-form-field>\\r\\n              <mat-icon matPrefix class=\\\"icon\\\">email</mat-icon>\\r\\n             <input matInput placeholder=\\\"Username\\\" ngModel name=\\\"username\\\" #username=\\\"ngModel\\\" minlength=\\\"5\\\" required>\\r\\n             <mat-error *ngIf=\\\"username.invalid\\\">Please enter user name.</mat-error>\\r\\n             </mat-form-field>\\r\\n           </td>\\r\\n         </tr>\\r\\n         <tr>\\r\\n         <td><mat-form-field>\\r\\n          <mat-icon matPrefix class=\\\"icon\\\">lock</mat-icon>\\r\\n           <input matInput placeholder=\\\"Password\\\" ngModel type=\\\"password\\\" name=\\\"password\\\" #password=\\\"ngModel\\\" required>\\r\\n            <mat-error *ngIf=\\\"password.invalid\\\">Please enter password.</mat-error>\\r\\n         </mat-form-field></td>\\r\\n       </tr></table>\\r\\n     \\r\\n   </mat-card-content>\\r\\n   <div style=\\\"margin-left:70px;\\\">\\r\\n   <mat-card-actions>\\r\\n     <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\">Login</button>\\r\\n   </mat-card-actions>\\r\\n</div>\\r\\n </mat-card>\\r\\n</form>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { RestService } from '../rest.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  constructor(private router: Router,private api:RestService) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  getLoggedIn(form:NgForm){\r\n  \tif(form.invalid){\r\n  \t\treturn;\r\n  \t}\r\n\r\n    this.api.postLogin(form.value).then((response)=>{\r\n  \t     console.log(\"response: \",response);\r\n         this.router.navigateByUrl('/home');\r\n  \t});\r\n  }\r\n}\r\n","module.exports = \"\\r\\n\\r\\n<app-home></app-home>\\r\\n<h4>Edit Receipt</h4>\\r\\n<mat-sidenav-container>\\r\\n <form  name=\\\"receiptData\\\" (submit)=\\\"updateStudentFee(postForm.form)\\\" #postForm=\\\"ngForm\\\" *ngFor=\\\"let receipt of editReceiptData\\\">\\r\\n<div class=\\\"container\\\"\\r\\n     fxLayout\\r\\n     fxLayout.xs=\\\"column\\\"\\r\\n     fxLayoutGap=\\\"10px\\\"\\r\\n     fxLayoutGap.xs=\\\"0\\\">\\r\\n\\r\\n      <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-label>Session</mat-label>       \\r\\n    <mat-icon matPrefix class=\\\"icon\\\">face</mat-icon>\\r\\n    <input matInput value=\\\"\\\" name=\\\"session\\\" [(ngModel)]=\\\"receipt.session\\\" #session=\\\"ngModel\\\" required>\\r\\n    <mat-error *ngIf=\\\"session.invalid\\\">Please enter session.</mat-error>\\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n<div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-icon matPrefix class=\\\"icon\\\">book</mat-icon>\\r\\n    <input matInput value=\\\"\\\" name=\\\"class\\\" [(ngModel)]=\\\"receipt.class\\\" #class=\\\"ngModel\\\" readonly>\\r\\n    \\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n    <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-label>Student Name</mat-label>       \\r\\n    <mat-icon matPrefix class=\\\"icon\\\">face</mat-icon>\\r\\n    <input matInput name=\\\"student_name\\\" [(ngModel)]=\\\"receipt.student_name\\\" #student_name=\\\"ngModel\\\" required>\\r\\n    <mat-error *ngIf=\\\"student_name.invalid\\\">Please enter student name.</mat-error>\\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-label>Mother Name</mat-label>       \\r\\n    <mat-icon matPrefix class=\\\"icon\\\">face</mat-icon>\\r\\n    <input matInput value=\\\"\\\" name=\\\"mother_name\\\" [(ngModel)]=\\\"receipt.mother_name\\\" #mother_name=\\\"ngModel\\\" required>\\r\\n    <mat-error *ngIf=\\\"mother_name.invalid\\\">Please enter mother name.</mat-error>\\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-label>Father Name</mat-label>       \\r\\n    <mat-icon matPrefix class=\\\"icon\\\">face</mat-icon>\\r\\n    <input matInput value=\\\"\\\" name=\\\"father_name\\\" [(ngModel)]=\\\"receipt.father_name\\\" #father_name=\\\"ngModel\\\" required>\\r\\n    <mat-error *ngIf=\\\"father_name.invalid\\\">Please enter father name.</mat-error>\\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n   <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-label>SNo.</mat-label>       \\r\\n    <mat-icon matPrefix class=\\\"icon\\\">face</mat-icon>\\r\\n    <input matInput type=\\\"number\\\" name=\\\"sno\\\" [(ngModel)]=\\\"receipt.sno\\\" #sno=\\\"ngModel\\\">\\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"container\\\"\\r\\n     fxLayout\\r\\n     fxLayout.xs=\\\"column\\\"\\r\\n     fxLayoutGap=\\\"10px\\\"\\r\\n     fxLayoutGap.xs=\\\"0\\\">\\r\\n\\r\\n \\r\\n\\r\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-icon matPrefix class=\\\"icon\\\">date_range</mat-icon>\\t\\r\\n    <input matInput name=\\\"searchDate\\\" [(ngModel)]=\\\"receipt.searchDate\\\" #searchDate=\\\"ngModel\\\" readonly >\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"container\\\"\\r\\n     fxLayout\\r\\n     fxLayout.xs=\\\"column\\\"\\r\\n     fxLayoutGap=\\\"10px\\\"\\r\\n     fxLayoutGap.xs=\\\"0\\\">\\r\\n    <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-label>Pre Balance</mat-label>       \\r\\n    <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\r\\n    <input matInput type=\\\"number\\\" name=\\\"pre_bal\\\" [(ngModel)]=\\\"receipt.pre_bal\\\" #pre_bal=\\\"ngModel\\\" (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\r\\n    \\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n    <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-label>Form Chargs.</mat-label>       \\r\\n    <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\r\\n    <input matInput type=\\\"number\\\" name=\\\"form_chrgs\\\" [(ngModel)]=\\\"receipt.form_chrgs\\\" #form_chrgs=\\\"ngModel\\\" (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\r\\n    \\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-label>Admission Fee</mat-label>       \\r\\n    <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\r\\n    <input matInput type=\\\"number\\\" name=\\\"adm_fee\\\" [(ngModel)]=\\\"receipt.adm_fee\\\" #adm_fee=\\\"ngModel\\\" required (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\r\\n    <mat-error *ngIf=\\\"adm_fee.invalid\\\">Please enter Admission Fee.</mat-error>\\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-label>Dearness Fee</mat-label>       \\r\\n    <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\r\\n    <input matInput type=\\\"number\\\" name=\\\"dearness_fee\\\" [(ngModel)]=\\\"receipt.dearness_fee\\\" #dearness_fee=\\\"ngModel\\\" required (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\r\\n    <mat-error *ngIf=\\\"dearness_fee.invalid\\\">Please enter dearness fee.</mat-error>\\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n   <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-label>Devlop Fee</mat-label>       \\r\\n    <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\r\\n    <input matInput type=\\\"number\\\" name=\\\"dev_fee\\\" [(ngModel)]=\\\"receipt.dev_fee\\\" #dev_fee=\\\"ngModel\\\" (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-label>Electric Fee.</mat-label>       \\r\\n    <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\r\\n    <input matInput type=\\\"number\\\" name=\\\"elec_fee\\\" [(ngModel)]=\\\"receipt.elec_fee\\\" #elec_fee=\\\"ngModel\\\" (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n </div>\\r\\n\\r\\n <div class=\\\"container\\\"\\r\\n     fxLayout\\r\\n     fxLayout.xs=\\\"column\\\"\\r\\n     fxLayoutGap=\\\"10px\\\"\\r\\n     fxLayoutGap.xs=\\\"0\\\">\\r\\n\\r\\n      <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-label>Library Fee</mat-label>       \\r\\n    <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\r\\n    <input matInput type=\\\"number\\\" name=\\\"lib_fee\\\" [(ngModel)]=\\\"receipt.lib_fee\\\" #lib_fee=\\\"ngModel\\\" (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\r\\n    \\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n    <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-label>Lab Fee</mat-label>       \\r\\n    <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\r\\n    <input matInput type=\\\"number\\\" name=\\\"lab_fee\\\" [(ngModel)]=\\\"receipt.lab_fee\\\" #lab_fee=\\\"ngModel\\\" (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\r\\n    \\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-label>Music Fee</mat-label>       \\r\\n    <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\r\\n    <input matInput type=\\\"number\\\" name=\\\"music_fee\\\" [(ngModel)]=\\\"receipt.music_fee\\\" #music_fee=\\\"ngModel\\\" (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\r\\n    \\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-label>Annual Func Chrgs</mat-label>       \\r\\n    <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\r\\n    <input matInput type=\\\"number\\\" name=\\\"annual_func_fee\\\" [(ngModel)]=\\\"receipt.annual_func_fee\\\" #annual_func_fee=\\\"ngModel\\\" (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n   <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-label>Exam Fee</mat-label>       \\r\\n    <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\r\\n    <input matInput type=\\\"number\\\" name=\\\"exam_fee\\\" [(ngModel)]=\\\"receipt.exam_fee\\\" #exam_fee=\\\"ngModel\\\" (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-label>S Class Fee.</mat-label>       \\r\\n    <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\r\\n    <input matInput type=\\\"number\\\" name=\\\"sclass\\\" [(ngModel)]=\\\"receipt.sclass\\\" #sclass=\\\"ngModel\\\" (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  \\r\\n </div>\\r\\n\\r\\n <div class=\\\"container\\\"\\r\\n     fxLayout\\r\\n     fxLayout.xs=\\\"column\\\"\\r\\n     fxLayoutGap=\\\"10px\\\"\\r\\n     fxLayoutGap.xs=\\\"0\\\">\\r\\n\\r\\n     <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n      <mat-form-field >\\r\\n      <mat-label>Tuition Fee</mat-label>       \\r\\n      <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\r\\n      <input matInput type=\\\"number\\\" name=\\\"tution_fee\\\" [(ngModel)]=\\\"receipt.tution_fee\\\" #tution_fee=\\\"ngModel\\\" (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\r\\n      <!-- <mat-error *ngIf=\\\"form.get('tution_fee').invalid\\\">Please enter tution fee.</mat-error> -->\\r\\n      </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n      <mat-form-field >\\r\\n      <mat-label>Activity Fee</mat-label>       \\r\\n      <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\r\\n      <input matInput type=\\\"number\\\" name=\\\"acti_fee\\\" [(ngModel)]=\\\"receipt.acti_fee\\\" #acti_fee=\\\"ngModel\\\" (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\r\\n      </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n      <mat-form-field >\\r\\n      <mat-label>Month</mat-label>       \\r\\n      <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\r\\n      <mat-select placeholder=\\\"Month\\\" name=\\\"monthName\\\"  [(ngModel)]=\\\"receipt.monthName\\\" #monthName=\\\"ngModel\\\">\\r\\n      <mat-option value=\\\"January\\\">January</mat-option>\\r\\n      <mat-option value=\\\"February\\\">February</mat-option>\\r\\n      <mat-option value=\\\"March\\\">March</mat-option>\\r\\n      <mat-option value=\\\"April\\\">April</mat-option>\\r\\n      <mat-option value=\\\"May\\\">May</mat-option>\\r\\n      <mat-option value=\\\"June\\\">June</mat-option>\\r\\n      <mat-option value=\\\"July\\\">July</mat-option>\\r\\n      <mat-option value=\\\"August\\\">August</mat-option>\\r\\n      <mat-option value=\\\"September\\\">September</mat-option>\\r\\n      <mat-option value=\\\"October\\\">October</mat-option>\\r\\n      <mat-option value=\\\"November\\\">November</mat-option>\\r\\n      <mat-option value=\\\"December\\\">December</mat-option>\\r\\n  </mat-select>\\r\\n      </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n        <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n      <mat-form-field >\\r\\n      <mat-label>Late Fee(if any)</mat-label>       \\r\\n      <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon> \\r\\n      <input matInput type=\\\"number\\\" name=\\\"late_fee\\\" [(ngModel)]=\\\"receipt.late_fee\\\" #late_fee=\\\"ngModel\\\" (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\r\\n      </mat-form-field>\\r\\n      </div>\\r\\n</div>\\r\\n\\r\\n <div class=\\\"container\\\"\\r\\n     fxLayout\\r\\n     fxLayout.xs=\\\"column\\\"\\r\\n     fxLayoutGap=\\\"10px\\\"\\r\\n     fxLayoutGap.xs=\\\"0\\\">\\r\\n      \\r\\n       <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n      <mat-form-field >\\r\\n      <mat-label>Total Amount</mat-label>       \\r\\n      <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\r\\n      <input matInput type=\\\"number\\\" name=\\\"total_amount\\\" [(ngModel)]=\\\"receipt.total_amount\\\" #total_amount=\\\"ngModel\\\" required>\\r\\n      <mat-error *ngIf=\\\"total_amount.invalid\\\">Please enter total amount.</mat-error>\\r\\n      </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n       <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n      <mat-form-field >\\r\\n      <mat-label>Amount Deposite</mat-label>       \\r\\n      <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\r\\n      <input matInput type=\\\"number\\\" name=\\\"amt_deposite\\\" [(ngModel)]=\\\"receipt.amt_deposite\\\" #amt_deposite=\\\"ngModel\\\" required>\\r\\n      <mat-error *ngIf=\\\"amt_deposite.invalid\\\">Please enter total amount.</mat-error>\\r\\n      </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n       <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n      <mat-form-field >\\r\\n      <mat-label>Balance Amount</mat-label>       \\r\\n      <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\r\\n      <input matInput type=\\\"number\\\" name=\\\"bal_amt\\\" [(ngModel)]=\\\"receipt.bal_amt\\\"  #bal_amt=\\\"ngModel\\\">\\r\\n      </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n       <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n      <mat-form-field >\\r\\n      <mat-label>Remark</mat-label>       \\r\\n      <mat-icon matPrefix class=\\\"icon\\\">pencil</mat-icon>\\r\\n      <input matInput  name=\\\"remark\\\" [(ngModel)]=\\\"receipt.remark\\\" #remark=\\\"ngModel\\\">\\r\\n      </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n       <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n      <mat-form-field >\\r\\n      <mat-label>Received By</mat-label>       \\r\\n      <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\r\\n       <mat-select placeholder=\\\"Received By\\\" name=\\\"received_by\\\" [(ngModel)]=\\\"receipt.received_by\\\" #received_by=\\\"ngModel\\\">\\r\\n      <mat-option value=\\\"Admin\\\">Admin</mat-option>\\r\\n      <mat-option value=\\\"Sales\\\">Sales</mat-option>\\r\\n    </mat-select>\\r\\n      </mat-form-field>\\r\\n      </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"container\\\"\\r\\n     fxLayout\\r\\n     fxLayout.xs=\\\"column\\\"\\r\\n     fxLayoutAlign=\\\"left\\\"\\r\\n     fxLayoutGap=\\\"10px\\\"\\r\\n     fxLayoutGap.xs=\\\"0\\\">\\r\\n  <div class=\\\"button-row\\\">\\r\\n  \\t <button type=\\\"submit\\\" mat-stroked-button color=\\\"primary\\\">Save</button>\\r\\n  \\t  <button mat-raised-button color=\\\"primary\\\">Reset</button>\\r\\n\\r\\n  </div>\\r\\n  \\r\\n\\r\\n</div>\\r\\n</form>\\r\\n</mat-sidenav-container>\\r\\n\\r\\n\\r\\n<router-outlet></router-outlet>\"","import { Component, OnInit,Inject } from '@angular/core';\r\nimport { RestService } from '../rest.service';\r\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { Router,ActivatedRoute } from '@angular/router';\r\nimport { FormControl,Validators,FormGroup ,NgForm} from '@angular/forms';\r\n\r\n\r\nexport interface DialogData {\r\n  studentId;\r\n}\r\n\r\n@Component({\r\n  selector: 'edit-receipt',\r\n  templateUrl: './edit-receipt.commponent.html',\r\n  styleUrls: ['./receipt.component.css']\r\n})\r\nexport class EditReceiptComponent implements OnInit {\r\neditReceiptData ;\r\nedirReceiptId;\r\nsum:number =0;\r\nprivate sub : any;\r\ndisplayedColumns = ['roll_number','first_name','father_name','mother_name','class','dob','uId'];\r\n\r\n  constructor( public rest: RestService, public dialog: MatDialog,public route : ActivatedRoute,public router : Router) {\r\n  }\r\n  ngOnInit(){\r\n  \tthis.sub = this.route.params.subscribe(params => {\r\n  \tconsole.log(\"std id: \"+[params['id']]);\r\n  \tthis.edirReceiptId = params['id'];\r\n\t\tthis.rest.getReceiptById(params['id']).then((response) => {\r\n\t\tconsole.log(\"res KV: \",response);\r\n\t\tthis.editReceiptData = response ;\r\n\t\tconsole.log(\"editReceiptData receipt :\",this.editReceiptData);\r\n\t\t});\r\n  });\r\n}\r\n\r\nupdateStudentFee(form: NgForm){\r\n\tif(form.invalid){\r\n\t\treturn;\r\n\t}\r\n\tconsole.log(\"update form: \",form);\r\n\tconsole.log(\"id: \"+this.edirReceiptId);\r\n\tif(this.sum > 0){\r\n\t\t//form.controls.amt_deposite.value = this.sum;\r\n    form.controls.amt_deposite.setValue(this.sum);\r\n\t}\r\n\tconsole.log(\"update form2: \",form);\r\n\tthis.rest.update('receipt',this.edirReceiptId,form.value).then((response) => {\r\n       alert(\"Receipt added. !!\");\r\n       this.router.navigate(['/receiptList']);\r\n    });\r\n}\r\n\r\n getDepositeAmt(formData){\r\n   console.log(\"val:\",formData);\r\n   console.log(formData.controls.pre_bal.value);\r\n   console.log(formData.controls.form_chrgs.value);\r\n     if(formData.controls.pre_bal.value == ''){\r\n       formData.controls.pre_bal.value =0;\r\n     }\r\n     if(formData.controls.form_chrgs.value == ''){\r\n       formData.controls.form_chrgs.value = 0;\r\n     }\r\n     if(formData.controls.adm_fee.value == ''){\r\n       formData.controls.adm_fee.value = 0;\r\n     }\r\n     if(formData.controls.dearness_fee.value == ''){\r\n       formData.controls.dearness_fee.value = 0;\r\n     }\r\n    if(formData.controls.dev_fee.value == ''){\r\n       formData.controls.dev_fee.value = 0;\r\n     }\r\n     if(formData.controls.elec_fee.value == ''){\r\n       formData.controls.elec_fee.value = 0;\r\n     }\r\n     if(formData.controls.lib_fee.value == ''){\r\n       formData.controls.lib_fee.value = 0;\r\n     }\r\n     if(formData.controls.lab_fee.value == ''){\r\n       formData.controls.lab_fee.value = 0;\r\n     }\r\n     if(formData.controls.music_fee.value == ''){\r\n       formData.controls.music_fee.value = 0;\r\n     }\r\n     if(formData.controls.annual_func_fee.value == ''){\r\n       formData.controls.annual_func_fee.value = 0;\r\n     }\r\n     if(formData.controls.exam_fee.value == ''){\r\n       formData.controls.exam_fee.value = 0;\r\n     }\r\n     if(formData.controls.sclass.value == ''){\r\n       formData.controls.sclass.value = 0;\r\n     }\r\n     if(formData.controls.tution_fee.value == ''){\r\n       formData.controls.tution_fee.value = 0;\r\n     }\r\n\r\n     if(formData.controls.acti_fee.value == ''){\r\n       formData.controls.acti_fee.value = 0;\r\n     }\r\n     if(formData.controls.late_fee.value == ''){\r\n       formData.controls.late_fee.value = 0;\r\n     }\r\n      let depositeAmt = +(formData.controls.pre_bal.value ) + (formData.controls.form_chrgs.value) + (formData.controls.adm_fee.value) + (formData.controls.dearness_fee.value)  + (formData.controls.dev_fee.value)\r\n     + (formData.controls.elec_fee.value) + (formData.controls.lib_fee.value) + (formData.controls.lab_fee.value) + (formData.controls.music_fee.value) \r\n     + (formData.controls.annual_func_fee.value) + (formData.controls.exam_fee.value) + (formData.controls.sclass.value) + (formData.controls.tution_fee.value)  + (formData.controls.acti_fee.value)  + (formData.controls.late_fee.value);\r\n     this.sum = depositeAmt;\r\n     formData.controls.amt_deposite.value = this.sum;\r\n     console.log(\"sum:: \"+this.sum);\r\n  }\r\n\r\n}","module.exports = \"<app-home></app-home>\\r\\n<p>Receipt list works</p>\\r\\n<mat-table #table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n  <!-- Position Column -->\\r\\n  <ng-container matColumnDef=\\\"session\\\">\\r\\n            <mat-header-cell *matHeaderCellDef>Session</mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let element \\\">{{element.session }} \\r\\n            </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n  <ng-container matColumnDef=\\\"class\\\">\\r\\n            <mat-header-cell *matHeaderCellDef>Class</mat-header-cell>\\r\\n            <mat-cell  *matCellDef=\\\"let element \\\">{{element.class | titlecase }} \\r\\n            </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n  <!-- Name Column -->\\r\\n   <ng-container matColumnDef=\\\"student_name\\\">\\r\\n    <mat-header-cell *matHeaderCellDef> Student Name </mat-header-cell>\\r\\n    <mat-cell *matCellDef=\\\"let element\\\"> {{element.student_name | titlecase }} </mat-cell>\\r\\n  </ng-container>\\r\\n\\r\\n  <ng-container matColumnDef=\\\"father_name\\\">\\r\\n    <mat-header-cell *matHeaderCellDef> Father Name </mat-header-cell>\\r\\n    <mat-cell *matCellDef=\\\"let element\\\"> {{element.father_name | titlecase }} </mat-cell>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Weight Column -->\\r\\n  <ng-container matColumnDef=\\\"mother_name\\\">\\r\\n    <mat-header-cell  *matHeaderCellDef> Mother Name </mat-header-cell>\\r\\n    <mat-cell *matCellDef=\\\"let element\\\"> {{element.mother_name | titlecase }} </mat-cell>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Symbol Column -->\\r\\n  <ng-container matColumnDef=\\\"total_amount\\\">\\r\\n    <mat-header-cell *matHeaderCellDef> Total Fee </mat-header-cell>\\r\\n    <mat-cell *matCellDef=\\\"let element\\\"> {{element.total_amount}} </mat-cell>\\r\\n  </ng-container>\\r\\n\\r\\n<ng-container matColumnDef=\\\"amt_deposite\\\">\\r\\n            <mat-header-cell *matHeaderCellDef>Amount Deposite</mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let element \\\">  {{ element.amt_deposite }}\\r\\n            </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"pre_bal\\\">\\r\\n            <mat-header-cell *matHeaderCellDef>Pre Balance</mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let element \\\">  {{ element.pre_bal }}\\r\\n            </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"bal_amount\\\">\\r\\n            <mat-header-cell *matHeaderCellDef>Balance Amount</mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let element \\\">  {{ element.bal_amount }}\\r\\n            </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"annual_func_fee\\\">\\r\\n            <mat-header-cell *matHeaderCellDef>Annual Func Fee</mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let element \\\">  {{ element.annual_func_fee }}\\r\\n            </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"dearness_fee\\\">\\r\\n            <mat-header-cell *matHeaderCellDef>Dearness Fee</mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let element \\\">  {{ element.dearness_fee }}\\r\\n            </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"dev_fee\\\">\\r\\n            <mat-header-cell *matHeaderCellDef>Dev Fee</mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let element \\\">  {{ element.dev_fee }}\\r\\n            </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"elec_fee\\\">\\r\\n            <mat-header-cell *matHeaderCellDef>Elec. Fee</mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let element \\\">  {{ element.elec_fee }}\\r\\n            </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"exam_fee\\\">\\r\\n            <mat-header-cell *matHeaderCellDef>Exam Fee</mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let element \\\">  {{ element.exam_fee }}\\r\\n            </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"form_chrgs\\\">\\r\\n            <mat-header-cell *matHeaderCellDef>Form Chargs</mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let element \\\">  {{ element.form_chrgs }}\\r\\n            </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"lab_fee\\\">\\r\\n            <mat-header-cell *matHeaderCellDef>Lab Fee</mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let element \\\">  {{ element.lab_fee }}\\r\\n            </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"lib_fee\\\">\\r\\n            <mat-header-cell *matHeaderCellDef>Lib Fee</mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let element \\\">  {{ element.lib_fee }}\\r\\n            </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"monthName\\\">\\r\\n            <mat-header-cell *matHeaderCellDef>month Name</mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let element \\\">  {{ element.monthName }}\\r\\n            </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"music_fee\\\">\\r\\n            <mat-header-cell *matHeaderCellDef>Music Fee</mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let element \\\">  {{ element.music_fee }}\\r\\n            </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"received_by\\\">\\r\\n            <mat-header-cell *matHeaderCellDef>Received By</mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let element \\\">  {{ element.received_by }}\\r\\n            </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"remark\\\">\\r\\n            <mat-header-cell *matHeaderCellDef>Remark</mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let element \\\">  {{ element.remark }}\\r\\n            </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n         <ng-container matColumnDef=\\\"sclass\\\">\\r\\n            <mat-header-cell *matHeaderCellDef>Sclass</mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let element \\\">  {{ element.sclass }}\\r\\n            </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n         <ng-container matColumnDef=\\\"searchDate\\\">\\r\\n            <mat-header-cell *matHeaderCellDef>Date</mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let element \\\">  {{ element.searchDate }}\\r\\n            </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"uId\\\">\\r\\n            <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\\r\\n            <mat-cell [routerLink]=\\\"['/editReceipt',element.uId]\\\" *matCellDef=\\\"let element\\\"><mat-icon  matTooltip=\\\"Edit Receipt\\\" matPrefix class=\\\"icon\\\">edit</mat-icon> <mat-icon (click)=\\\"openDialog(element)\\\" matTooltip=\\\"Delete Receipt\\\" matPrefix class=\\\"icon\\\">delete</mat-icon>\\r\\n            </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n  <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n  <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n</mat-table>\\r\\n<router-outlet></router-outlet>\\r\\n\"","import { Component, OnInit,Inject } from '@angular/core';\r\nimport { RestService } from '../rest.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-list-receipt',\r\n  templateUrl: './list-receipt.component.html',\r\n  styleUrls: ['./receipt.component.css']\r\n})\r\nexport class ListReceiptComponent implements OnInit {\r\n\tdataSource ;\r\ndisplayedColumns = ['session','class','student_name','father_name','mother_name','total_amount','amt_deposite','pre_bal','bal_amount','annual_func_fee','dearness_fee','dev_fee','elec_fee','exam_fee','form_chrgs','lab_fee','lib_fee','monthName','music_fee','received_by','remark','sclass','searchDate','uId'];\r\nconstructor(public rest:RestService){\r\nthis.rest.getReceipt().then((response) => {\r\n    console.log(\"res KV: \",response);\r\n    this.dataSource = response ;\r\n   \r\n    console.log(\"dataSource receipt :\",this.dataSource);\r\n});\r\n}\r\nngOnInit() {\r\n  }\r\n}\r\n\r\n","module.exports = \"\"","module.exports = \"<app-home></app-home>\\r\\n<mat-sidenav-container>\\r\\n <form  name=\\\"receiptData\\\" (submit)=\\\"saveStudentFee(postForm.form)\\\" #postForm=\\\"ngForm\\\">\\r\\n<div class=\\\"container\\\"\\r\\n     fxLayout\\r\\n     fxLayout.xs=\\\"column\\\"\\r\\n     fxLayoutGap=\\\"10px\\\"\\r\\n     fxLayoutGap.xs=\\\"0\\\">\\r\\n\\r\\n      <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-label>Session</mat-label>       \\r\\n    <mat-icon matPrefix class=\\\"icon\\\">face</mat-icon>\\r\\n    <input matInput value=\\\"\\\" name=\\\"session\\\" ngModel #session=\\\"ngModel\\\" required>\\r\\n    <mat-error *ngIf=\\\"session.invalid\\\">Please enter session.</mat-error>\\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n<div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-icon matPrefix class=\\\"icon\\\">book</mat-icon>\\r\\n    <mat-select placeholder=\\\"Class\\\"  name=\\\"class\\\"  ngModel #class=\\\"ngModel\\\" required>\\r\\n      <mat-option *ngFor=\\\"let class of classData;\\\" value=\\\"{{class.id}}\\\">{{class.name}}</mat-option>\\r\\n    </mat-select>\\r\\n    <mat-error *ngIf=\\\"class.invalid\\\">Please select class.</mat-error>\\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n    <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-label>Student Name</mat-label>       \\r\\n    <mat-icon matPrefix class=\\\"icon\\\">face</mat-icon>\\r\\n    <input matInput name=\\\"student_name\\\" ngModel #student_name=\\\"ngModel\\\" required>\\r\\n    <mat-error *ngIf=\\\"student_name.invalid\\\">Please enter student name.</mat-error>\\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-label>Mother Name</mat-label>       \\r\\n    <mat-icon matPrefix class=\\\"icon\\\">face</mat-icon>\\r\\n    <input matInput value=\\\"\\\" name=\\\"mother_name\\\" ngModel #mother_name=\\\"ngModel\\\" required>\\r\\n    <mat-error *ngIf=\\\"mother_name.invalid\\\">Please enter mother name.</mat-error>\\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-label>Father Name</mat-label>       \\r\\n    <mat-icon matPrefix class=\\\"icon\\\">face</mat-icon>\\r\\n    <input matInput value=\\\"\\\" name=\\\"father_name\\\" ngModel #father_name=\\\"ngModel\\\" required>\\r\\n    <mat-error *ngIf=\\\"father_name.invalid\\\">Please enter father name.</mat-error>\\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n   <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-label>SNo.</mat-label>       \\r\\n    <mat-icon matPrefix class=\\\"icon\\\">face</mat-icon>\\r\\n    <input matInput name=\\\"sno\\\" ngModel #sno=\\\"ngModel\\\" >\\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"container\\\"\\r\\n     fxLayout\\r\\n     fxLayout.xs=\\\"column\\\"\\r\\n     fxLayoutGap=\\\"10px\\\"\\r\\n     fxLayoutGap.xs=\\\"0\\\">\\r\\n\\r\\n \\r\\n\\r\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-icon matPrefix class=\\\"icon\\\">date_range</mat-icon>\\r\\n    <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\" name=\\\"searchDate\\\" [(ngModel)]=\\\"todayDate\\\" #searchDate=\\\"ngModel\\\" >\\r\\n    <mat-datepicker-toggle matPrefix [for]=\\\"picker\\\">\\r\\n    </mat-datepicker-toggle>\\r\\n    <mat-datepicker #picker></mat-datepicker>\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"container\\\"\\r\\n     fxLayout\\r\\n     fxLayout.xs=\\\"column\\\"\\r\\n     fxLayoutGap=\\\"10px\\\"\\r\\n     fxLayoutGap.xs=\\\"0\\\">\\r\\n    <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-label>Pre Balance</mat-label>       \\r\\n    <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\r\\n    <input matInput type=\\\"number\\\" name=\\\"pre_bal\\\" ngModel #pre_bal=\\\"ngModel\\\" (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\r\\n    \\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n    <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-label>Form Chargs.</mat-label>       \\r\\n    <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\r\\n    <input matInput type=\\\"number\\\" name=\\\"form_chrgs\\\" ngModel #form_chrgs=\\\"ngModel\\\" (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\r\\n    \\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-label>Admission Fee</mat-label>       \\r\\n    <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\r\\n    <input matInput type=\\\"number\\\" name=\\\"adm_fee\\\" ngModel #adm_fee=\\\"ngModel\\\" required (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\r\\n    <mat-error *ngIf=\\\"adm_fee.invalid\\\">Please enter Admission Fee.</mat-error>\\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-label>Dearness Fee</mat-label>       \\r\\n    <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\r\\n    <input matInput type=\\\"number\\\" name=\\\"dearness_fee\\\" ngModel #dearness_fee=\\\"ngModel\\\" required (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\r\\n    <mat-error *ngIf=\\\"dearness_fee.invalid\\\">Please enter dearness fee.</mat-error>\\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n   <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-label>Devlop Fee</mat-label>       \\r\\n    <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\r\\n    <input matInput type=\\\"number\\\" name=\\\"dev_fee\\\" ngModel #dev_fee=\\\"ngModel\\\" (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-label>Electric Fee.</mat-label>       \\r\\n    <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\r\\n    <input matInput type=\\\"number\\\" name=\\\"elec_fee\\\" ngModel #elec_fee=\\\"ngModel\\\" (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n </div>\\r\\n\\r\\n <div class=\\\"container\\\"\\r\\n     fxLayout\\r\\n     fxLayout.xs=\\\"column\\\"\\r\\n     fxLayoutGap=\\\"10px\\\"\\r\\n     fxLayoutGap.xs=\\\"0\\\">\\r\\n\\r\\n      <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-label>Library Fee</mat-label>       \\r\\n    <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\r\\n    <input matInput type=\\\"number\\\" name=\\\"lib_fee\\\" ngModel #lib_fee=\\\"ngModel\\\" (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\r\\n    \\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n    <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-label>Lab Fee</mat-label>       \\r\\n    <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\r\\n    <input matInput type=\\\"number\\\" name=\\\"lab_fee\\\" ngModel #lab_fee=\\\"ngModel\\\" (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\r\\n    \\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-label>Music Fee</mat-label>       \\r\\n    <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\r\\n    <input matInput type=\\\"number\\\" name=\\\"music_fee\\\" ngModel #music_fee=\\\"ngModel\\\" (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\r\\n    \\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-label>Annual Func Chrgs</mat-label>       \\r\\n    <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\r\\n    <input matInput type=\\\"number\\\" name=\\\"annual_func_fee\\\" ngModel #annual_func_fee=\\\"ngModel\\\" (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n   <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-label>Exam Fee</mat-label>       \\r\\n    <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\r\\n    <input matInput type=\\\"number\\\" name=\\\"exam_fee\\\" ngModel #exam_fee=\\\"ngModel\\\" (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-label>S Class Fee.</mat-label>       \\r\\n    <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\r\\n    <input matInput type=\\\"number\\\" name=\\\"sclass\\\" ngModel #sclass=\\\"ngModel\\\" (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  \\r\\n </div>\\r\\n\\r\\n <div class=\\\"container\\\"\\r\\n     fxLayout\\r\\n     fxLayout.xs=\\\"column\\\"\\r\\n     fxLayoutGap=\\\"10px\\\"\\r\\n     fxLayoutGap.xs=\\\"0\\\">\\r\\n\\r\\n     <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n      <mat-form-field >\\r\\n      <mat-label>Tuition Fee</mat-label>       \\r\\n      <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\r\\n      <input matInput type=\\\"number\\\" name=\\\"tution_fee\\\" ngModel #tution_fee=\\\"ngModel\\\" (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\r\\n      <!-- <mat-error *ngIf=\\\"form.get('tution_fee').invalid\\\">Please enter tution fee.</mat-error> -->\\r\\n      </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n      <mat-form-field >\\r\\n      <mat-label>Activity Fee</mat-label>       \\r\\n      <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\r\\n      <input matInput type=\\\"number\\\" name=\\\"acti_fee\\\" ngModel #acti_fee=\\\"ngModel\\\" (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\r\\n      </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n      <mat-form-field >\\r\\n      <mat-label>Month</mat-label>       \\r\\n      <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\r\\n      <mat-select placeholder=\\\"Month\\\" name=\\\"monthName\\\"  ngModel #monthName=\\\"ngModel\\\">\\r\\n      <mat-option value=\\\"January\\\">January</mat-option>\\r\\n      <mat-option value=\\\"February\\\">February</mat-option>\\r\\n      <mat-option value=\\\"March\\\">March</mat-option>\\r\\n      <mat-option value=\\\"April\\\">April</mat-option>\\r\\n      <mat-option value=\\\"May\\\">May</mat-option>\\r\\n      <mat-option value=\\\"June\\\">June</mat-option>\\r\\n      <mat-option value=\\\"July\\\">July</mat-option>\\r\\n      <mat-option value=\\\"August\\\">August</mat-option>\\r\\n      <mat-option value=\\\"September\\\">September</mat-option>\\r\\n      <mat-option value=\\\"October\\\">October</mat-option>\\r\\n      <mat-option value=\\\"November\\\">November</mat-option>\\r\\n      <mat-option value=\\\"December\\\">December</mat-option>\\r\\n  </mat-select>\\r\\n      </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n        <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n      <mat-form-field >\\r\\n      <mat-label>Late Fee(if any)</mat-label>       \\r\\n      <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon> \\r\\n      <input matInput type=\\\"number\\\" name=\\\"late_fee\\\" ngModel #late_fee=\\\"ngModel\\\" (ngModelChange)=\\\"getDepositeAmt(postForm)\\\">\\r\\n      </mat-form-field>\\r\\n      </div>\\r\\n</div>\\r\\n\\r\\n <div class=\\\"container\\\"\\r\\n     fxLayout\\r\\n     fxLayout.xs=\\\"column\\\"\\r\\n     fxLayoutGap=\\\"10px\\\"\\r\\n     fxLayoutGap.xs=\\\"0\\\">\\r\\n      \\r\\n       <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n      <mat-form-field >\\r\\n      <mat-label>Total Amount</mat-label>       \\r\\n      <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\r\\n      <input matInput type=\\\"number\\\" name=\\\"total_amount\\\" ngModel #total_amount=\\\"ngModel\\\" required>\\r\\n      <mat-error *ngIf=\\\"total_amount.invalid\\\">Please enter total amount.</mat-error>\\r\\n      </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n       <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n      <mat-form-field >\\r\\n      <mat-label>Amount Deposite</mat-label>       \\r\\n      <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\r\\n      <input matInput type=\\\"number\\\" name=\\\"amt_deposite\\\" [(ngModel)]=\\\"sum\\\" readonly #amt_deposite=\\\"ngModel\\\" required>\\r\\n      <mat-error *ngIf=\\\"amt_deposite.invalid\\\">Please enter total amount.</mat-error>\\r\\n      </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n       <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n      <mat-form-field >\\r\\n      <mat-label>Balance Amount</mat-label>       \\r\\n      <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\r\\n      <input matInput type=\\\"number\\\" name=\\\"bal_amt\\\" ngModel  #bal_amt=\\\"ngModel\\\">\\r\\n      </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n       <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n      <mat-form-field >\\r\\n      <mat-label>Remark</mat-label>       \\r\\n      <mat-icon matPrefix class=\\\"icon\\\">pencil</mat-icon>\\r\\n      <input matInput  name=\\\"remark\\\" ngModel #remark=\\\"ngModel\\\">\\r\\n      </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n       <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n      <mat-form-field >\\r\\n      <mat-label>Received By</mat-label>       \\r\\n      <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\r\\n       <mat-select placeholder=\\\"Received By\\\" name=\\\"received_by\\\" ngModel #received_by=\\\"ngModel\\\">\\r\\n      <mat-option value=\\\"Admin\\\">Admin</mat-option>\\r\\n      <mat-option value=\\\"Sales\\\">Sales</mat-option>\\r\\n    </mat-select>\\r\\n      </mat-form-field>\\r\\n      </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"container\\\"\\r\\n     fxLayout\\r\\n     fxLayout.xs=\\\"column\\\"\\r\\n     fxLayoutAlign=\\\"left\\\"\\r\\n     fxLayoutGap=\\\"10px\\\"\\r\\n     fxLayoutGap.xs=\\\"0\\\">\\r\\n  <div class=\\\"button-row\\\">\\r\\n  \\t <button type=\\\"submit\\\" mat-stroked-button color=\\\"primary\\\">Save</button>\\r\\n  \\t  <button mat-raised-button color=\\\"primary\\\">Reset</button>\\r\\n\\r\\n  </div>\\r\\n  \\r\\n\\r\\n</div>\\r\\n</form>\\r\\n</mat-sidenav-container>\"","import { Component, OnInit, Inject, Input } from '@angular/core';\r\nimport { RestService} from '../rest.service';\r\nimport { FormControl,Validators,FormGroup ,NgForm} from '@angular/forms';\r\nimport { CLASSES } from '../class';\r\nimport { Router } from '@angular/router';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n\r\n@Component({\r\n  selector: 'app-receipt',\r\n  templateUrl: './receipt.component.html',\r\n  styleUrls: ['./receipt.component.css']\r\n})\r\nexport class ReceiptComponent implements OnInit {\r\n   studentData: any = {};\r\n\tclassData = CLASSES ;\r\n  sum;\r\n\r\n\ttodayDate = this.datePipe.transform(new Date(), 'yyyy-MM-dd');\r\n  form: FormGroup;\r\n  constructor(public datePipe : DatePipe,public rest: RestService) { \r\n  \tconsole.log(\"date: \"+(new Date()) );\r\n    }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  saveStudentFee(form: NgForm){\r\n    if(form.invalid){\r\n    return;\r\n    }\r\n  \t/*let keys = Object.keys(form.controls);\r\n    let values = Object.values(form.value);*/\r\n    console.log(\"form: \",form.value);\r\n  \t\r\n    this.rest.postReceipt(form.value).then((response) => {\r\n      console.log(\"post 1\");\r\n       alert(\"Receipt added. !!\");\r\n       \r\n    });\r\n\r\n  }\r\n\r\n  getDepositeAmt(formData){\r\n   console.log(\"val:\",formData);\r\n   console.log(formData.controls.pre_bal.value);\r\n   console.log(formData.controls.form_chrgs.value);\r\n     if(formData.controls.pre_bal.value == ''){\r\n       formData.controls.pre_bal.value =0;\r\n     }\r\n     if(formData.controls.form_chrgs.value == ''){\r\n       formData.controls.form_chrgs.value = 0;\r\n     }\r\n     if(formData.controls.adm_fee.value == ''){\r\n       formData.controls.adm_fee.value = 0;\r\n     }\r\n     if(formData.controls.dearness_fee.value == ''){\r\n       formData.controls.dearness_fee.value = 0;\r\n     }\r\n    if(formData.controls.dev_fee.value == ''){\r\n       formData.controls.dev_fee.value = 0;\r\n     }\r\n     if(formData.controls.elec_fee.value == ''){\r\n       formData.controls.elec_fee.value = 0;\r\n     }\r\n     if(formData.controls.lib_fee.value == ''){\r\n       formData.controls.lib_fee.value = 0;\r\n     }\r\n     if(formData.controls.lab_fee.value == ''){\r\n       formData.controls.lab_fee.value = 0;\r\n     }\r\n     if(formData.controls.music_fee.value == ''){\r\n       formData.controls.music_fee.value = 0;\r\n     }\r\n     if(formData.controls.annual_func_fee.value == ''){\r\n       formData.controls.annual_func_fee.value = 0;\r\n     }\r\n     if(formData.controls.exam_fee.value == ''){\r\n       formData.controls.exam_fee.value = 0;\r\n     }\r\n     if(formData.controls.sclass.value == ''){\r\n       formData.controls.sclass.value = 0;\r\n     }\r\n     if(formData.controls.tution_fee.value == ''){\r\n       formData.controls.tution_fee.value = 0;\r\n     }\r\n\r\n     if(formData.controls.acti_fee.value == ''){\r\n       formData.controls.acti_fee.value = 0;\r\n     }\r\n     if(formData.controls.late_fee.value == ''){\r\n       formData.controls.late_fee.value = 0;\r\n     }\r\n      let depositeAmt = +(formData.controls.pre_bal.value ) + (formData.controls.form_chrgs.value) + (formData.controls.adm_fee.value) + (formData.controls.dearness_fee.value)  + (formData.controls.dev_fee.value)\r\n     + (formData.controls.elec_fee.value) + (formData.controls.lib_fee.value) + (formData.controls.lab_fee.value) + (formData.controls.music_fee.value) \r\n     + (formData.controls.annual_func_fee.value) + (formData.controls.exam_fee.value) + (formData.controls.sclass.value) + (formData.controls.tution_fee.value)  + (formData.controls.acti_fee.value)  + (formData.controls.late_fee.value);\r\n     this.sum = depositeAmt;\r\n  }\r\n\r\n}\r\n","/*import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RestService {\r\n\r\n  constructor() { }\r\n}\r\n*/\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, catchError, tap } from 'rxjs/operators';\r\nimport { FirebaseWrapper } from './firebasewrapper';\r\nlet firewrap = new FirebaseWrapper();\r\n//import firebase from \"firebase\";\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json',\r\n  'Authorization': 'did' })\r\n};\r\n\r\n@Injectable({ providedIn: 'root'})\r\n\r\nexport class RestService {\r\n API_URL  =  'http://localhost:5001/sql';\r\nconstructor(private  httpClient:  HttpClient)\r\n {}\r\n\tgetStudents(){\r\n\t\t //const body = JSON.stringify({\"fn\": 'selectAll', \"params\": [\"students\"]});\r\n     return firewrap.selectAll('students');\r\n\t    //return  this.httpClient.post(`${this.API_URL}`,body, httpOptions)\r\n\t}\r\n  getBooks(){\r\n\t\t //const body = JSON.stringify({\"fn\": 'selectAll', \"params\": [\"books\"]});\r\n\t    return firewrap.selectAll('books');\r\n\t}\r\n\r\n  postStudent(student) {\r\n    return firewrap.addStudent(student);\r\n    //return this.httpClient.post(`${this.API_URL}`,studentData, httpOptions)\r\n  }\r\n  postReceipt(receiptDate) {\r\n    console.log(\"rest postReceipt\");\r\n    return firewrap.addReceipt(receiptDate);\r\n    //return this.httpClient.post(`${this.API_URL}`,studentData, httpOptions)\r\n  }\r\n  getReceipt(){\r\n     //const body = JSON.stringify({\"fn\": 'selectAll', \"params\": [\"students\"]});\r\n     return firewrap.selectAll('receipt');\r\n      //return  this.httpClient.post(`${this.API_URL}`,body, httpOptions)\r\n  }\r\n  getReceiptById(id){\r\n    return firewrap.selectAllById('receipt',id);\r\n  }\r\n  update(tableName,id,data){\r\n    return firewrap.update(tableName,id,data);\r\n  }\r\n  delete(tableName,id){\r\n    return firewrap.deleteData(tableName,id);\r\n  }\r\n  getStudentsById(id){\r\n      return firewrap.selectAllById('students',id);\r\n  }\r\n  postBook(bookData) {\r\n    return this.httpClient.post(`${this.API_URL}`,bookData, httpOptions)\r\n  }\r\n  getClasses(){\r\n     //const body = JSON.stringify({\"fn\": 'selectAll', \"params\": [\"class\"]});\r\n      return firewrap.selectAll('class');\r\n  }\r\n  getRollNumber(classId){\r\n      return  this.httpClient.post(`${this.API_URL}`,classId, httpOptions)\r\n  }\r\n  \r\n  postEditStudent(editStudentData){\r\n      return this.httpClient.post(`${this.API_URL}`,editStudentData,httpOptions)\r\n  }\r\n  postLogin(body){\r\n    return firewrap.login(body);\r\n  }\r\n  postAttendance(body){\r\n    return this.httpClient.post(`${this.API_URL}`,body,httpOptions)\r\n  }\r\n  deleteRowAttendance(body){\r\n    return this.httpClient.post(`${this.API_URL}`,body,httpOptions)\r\n  }\r\n  getAttendanceByClass(body){\r\n    return this.httpClient.post(`${this.API_URL}`,body,httpOptions)\r\n  }\r\n};\r\n","module.exports = \"<h2 mat-dialog-title>Save Student</h2>\\r\\n<mat-dialog-content>Student Saved !!</mat-dialog-content>\\r\\n<mat-dialog-actions>\\r\\n  <button mat-button mat-dialog-close>OK</button>\\r\\n  \\r\\n  <!-- <button mat-button [mat-dialog-close]=\\\"true\\\" (click)=\\\"deleteStudent(data.studentId)\\\" >Yes</button> -->\\r\\n</mat-dialog-actions>\\r\\n\\r\\n<!-- <h1 mat-dialog-title>Favorite Animal</h1>\\r\\n<div mat-dialog-content>\\r\\n  My favorite animal is:\\r\\n  <ul>\\r\\n    <li>\\r\\n      <span *ngIf=\\\"data.animal === 'panda'\\\">&#10003;</span> Panda\\r\\n    </li>\\r\\n    <li>\\r\\n      <span *ngIf=\\\"data.animal === 'unicorn'\\\">&#10003;</span> Unicorn\\r\\n    </li>\\r\\n    <li>\\r\\n      <span *ngIf=\\\"data.animal === 'lion'\\\">&#10003;</span> Lion\\r\\n    </li>\\r\\n  </ul>\\r\\n</div> -->\"","module.exports = \".image-preview{\\r\\n\\theight: 5rem;\\r\\n\\tmargin: 1rem 0;\\r\\n\\r\\n}\\r\\n.image-preview img {\\r\\n\\theight: 100%;\\r\\n}\"","module.exports = \"<app-home></app-home>\\r\\n <mat-sidenav-container>\\r\\n <form [formGroup]=\\\"form\\\" name=\\\"studentData\\\" (submit)=\\\"submitStudent()\\\"  class=\\\"student-form\\\">\\r\\n<div class=\\\"container\\\"\\r\\n     fxLayout\\r\\n     fxLayout.xs=\\\"column\\\"\\r\\n     fxLayoutGap=\\\"10px\\\"\\r\\n     fxLayoutGap.xs=\\\"0\\\">\\r\\n  <div class=\\\"item item-1\\\" fxFlex=\\\"15%\\\">\\r\\n  \\t <mat-form-field class=\\\"navigation-items\\\">\\r\\n  \\t <mat-label>Student Name</mat-label>       \\r\\n  \\t<mat-icon matPrefix class=\\\"icon\\\">face</mat-icon>\\r\\n    <input matInput value=\\\"\\\" name=\\\"first_name\\\" formControlName=\\\"first_name\\\">\\r\\n     <mat-error *ngIf=\\\"form.get('first_name').invalid\\\">Please enter first name.</mat-error> \\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\r\\n    <input matInput placeholder=\\\"Last Name\\\" name=\\\"last_name\\\" formControlName=\\\"last_name\\\">\\r\\n     <mat-error *ngIf=\\\"form.get('last_name').invalid\\\">Please enter last name.</mat-error> \\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\r\\n    <input matInput placeholder=\\\"Adhaar No\\\" name=\\\"adhaar_no\\\" formControlName=\\\"adhaar_no\\\">\\r\\n     <mat-error *ngIf=\\\"form.get('adhaar_no').invalid\\\">Please enter last name.</mat-error> \\r\\n    \\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\r\\n   <mat-select placeholder=\\\"Category\\\"  name=\\\"category\\\" >\\r\\n      <mat-option value=\\\"OBC\\\">OBC</mat-option>\\r\\n      <mat-option value=\\\"Gen\\\">Gen</mat-option>\\r\\n      <mat-option value=\\\"SC\\\">SC</mat-option>\\r\\n      <mat-option value=\\\"ST\\\">ST</mat-option>\\r\\n    </mat-select>\\r\\n  </mat-form-field>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\r\\n   <mat-select placeholder=\\\"Religion\\\"  name=\\\"religion\\\" >\\r\\n      <mat-option value=\\\"HINDU\\\">HINDU</mat-option>\\r\\n      <mat-option value=\\\"MUSLIM\\\">MUSLIM</mat-option>\\r\\n      <mat-option value=\\\"SIKH\\\">SIKH</mat-option>\\r\\n      <mat-option value=\\\"CHRISTIAN\\\">CHRISTIAN</mat-option>\\r\\n      <mat-option value=\\\"BODH\\\">BODH</mat-option>\\r\\n      <mat-option value=\\\"JAIN\\\">JAIN</mat-option>\\r\\n    </mat-select>\\r\\n  </mat-form-field>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\r\\n   <mat-select placeholder=\\\"Handicapped\\\"  name=\\\"handicapped\\\" >\\r\\n      <mat-option value=\\\"YES\\\">Yes</mat-option>\\r\\n      <mat-option value=\\\"NO\\\">No</mat-option>\\r\\n    </mat-select>\\r\\n  </mat-form-field>\\r\\n</div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"container\\\"\\r\\n     fxLayout\\r\\n     fxLayout.xs=\\\"column\\\"\\r\\n     fxLayoutGap=\\\"10px\\\"\\r\\n     fxLayoutGap.xs=\\\"0\\\">\\r\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\r\\n  \\t<mat-form-field >\\r\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\r\\n    <input matInput placeholder=\\\"Father Name\\\" name=\\\"father_name\\\" formControlName=\\\"father_name\\\">\\r\\n     <mat-error *ngIf=\\\"form.get('father_name').invalid\\\">Please enter father name.</mat-error> \\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\r\\n    <input matInput placeholder=\\\"Father Qualification\\\" name=\\\"father_qualification\\\" formControlName=\\\"father_qualification\\\">\\r\\n     <mat-error *ngIf=\\\"form.get('father_qualification').invalid\\\">Please enter father Qualification.</mat-error> \\r\\n     \\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\r\\n    <input matInput placeholder=\\\"Father Occupation\\\" name=\\\"father_occupation\\\" formControlName=\\\"father_occupation\\\">\\r\\n     <mat-error *ngIf=\\\"form.get('father_occupation').invalid\\\">Please enter father Occupation.</mat-error> \\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n  \\t<mat-form-field >\\r\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\r\\n    <input matInput placeholder=\\\"Mother Name\\\" name=\\\"mother_name\\\" formControlName=\\\"mother_name\\\">\\r\\n    <mat-error *ngIf=\\\"form.get('mother_name').invalid\\\">Please enter mother name.</mat-error>\\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\r\\n    <input matInput placeholder=\\\"Mother Qualification\\\" name=\\\"mother_qualification\\\" formControlName=\\\"mother_qualification\\\"> \\r\\n     \\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\r\\n    <input matInput placeholder=\\\"Mother Occupation\\\" name=\\\"mother_occupation\\\" formControlName=\\\"mother_occupation\\\">\\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n  \\r\\n</div>\\r\\n\\r\\n<div class=\\\"container\\\"\\r\\n     fxLayout\\r\\n     fxLayout.xs=\\\"column\\\"\\r\\n     fxLayoutGap=\\\"10px\\\"\\r\\n     fxLayoutGap.xs=\\\"0\\\">\\r\\n  <div class=\\\"item item-1\\\" fxFlex=\\\"15%\\\">\\r\\n  \\t <mat-form-field class=\\\"navigation-items\\\">\\r\\n  \\t <mat-label>Gender</mat-label>       \\r\\n  \\t<mat-icon matPrefix class=\\\"icon\\\">sex</mat-icon>\\r\\n    <mat-select placeholder=\\\"gender\\\"  name=\\\"gender\\\" formControlName=\\\"gender\\\">\\r\\n      <mat-option value=\\\"male\\\">Male</mat-option>\\r\\n      <mat-option value=\\\"female\\\">Female</mat-option>\\r\\n    </mat-select>\\r\\n<mat-error *ngIf=\\\"form.get('gender').invalid\\\">Please select gender.</mat-error> \\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\r\\n  \\t<mat-form-field >\\r\\n  \\t\\t <mat-label>Address</mat-label>  \\r\\n    <mat-icon matPrefix class=\\\"icon\\\">place</mat-icon>\\r\\n        <textarea matInput name=\\\"address\\\" formControlName=\\\"address\\\"></textarea>\\r\\n         <mat-error *ngIf=\\\"form.get('address').invalid\\\">Please enter address.</mat-error>\\r\\n\\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n  \\t<mat-form-field >\\r\\n  \\t\\t <mat-label>Phone1</mat-label> \\r\\n    <mat-icon matPrefix class=\\\"icon\\\">call</mat-icon>\\r\\n    <input matInput placeholder=\\\"Contact\\\" name=\\\"contact_number\\\" formControlName=\\\"contact_number\\\">\\r\\n      <mat-error *ngIf=\\\"form.get('contact_number').invalid\\\">Please enter contact.</mat-error> \\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n       <mat-label>Phone2</mat-label> \\r\\n    <mat-icon matPrefix class=\\\"icon\\\">call</mat-icon>\\r\\n    <input matInput placeholder=\\\"Contact\\\" name=\\\"contact_number2\\\" >\\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n   <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n       <mat-label>Annual Income</mat-label> \\r\\n    <mat-icon matPrefix class=\\\"icon\\\">money</mat-icon>\\r\\n    <input matInput placeholder=\\\"Income\\\" name=\\\"annual_income\\\" formControlName=\\\"annual_income\\\" >\\r\\n    <mat-error *ngIf=\\\"form.get('annual_income').invalid\\\">Please enter annual income.</mat-error> \\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\r\\n   <mat-select placeholder=\\\"miniority\\\"  name=\\\"miniority\\\" >\\r\\n      <mat-option value=\\\"YES\\\">Yes</mat-option>\\r\\n      <mat-option value=\\\"NO\\\">No</mat-option>\\r\\n    </mat-select>\\r\\n  </mat-form-field>\\r\\n</div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<div class=\\\"container\\\"\\r\\n     fxLayout\\r\\n     fxLayout.xs=\\\"column\\\"\\r\\n     fxLayoutGap=\\\"10px\\\"\\r\\n     fxLayoutGap.xs=\\\"0\\\">\\r\\n  <div class=\\\"item item-1\\\" fxFlex=\\\"15%\\\">\\r\\n  \\t <mat-form-field class=\\\"navigation-items\\\">\\r\\n  \\t <mat-label>Email</mat-label>       \\r\\n  \\t<mat-icon matPrefix class=\\\"icon\\\">email</mat-icon>\\r\\n    <input matInput value=\\\"\\\" name=\\\"email\\\" formControlName=\\\"email\\\">\\r\\n     <mat-error *ngIf=\\\"form.get('email').invalid\\\">Please enter valid email address.</mat-error> \\r\\n   \\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\r\\n    <mat-form-field >\\r\\n    <mat-icon matPrefix class=\\\"icon\\\">perm_identity</mat-icon>\\r\\n   <mat-select placeholder=\\\"Only Child\\\"  name=\\\"only_child\\\" formControlName=\\\"only_child\\\">\\r\\n      <mat-option value=\\\"YES\\\">Yes</mat-option>\\r\\n      <mat-option value=\\\"NO\\\">No</mat-option>\\r\\n    </mat-select>\\r\\n\\r\\n     <mat-error *ngIf=\\\"form.get('only_child').invalid\\\">Please enter only_child.</mat-error> \\r\\n  </mat-form-field>\\r\\n</div>\\r\\n  <div class=\\\"item item-2\\\" fxFlex=\\\"15%\\\">\\r\\n  \\t<mat-form-field >\\r\\n    <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"DOB\\\" name=\\\"dob\\\" formControlName=\\\"dob\\\">\\r\\n  <mat-datepicker-toggle matPrefix [for]=\\\"picker\\\">\\r\\n    \\r\\n  </mat-datepicker-toggle>\\r\\n  <mat-datepicker #picker></mat-datepicker>\\r\\n   <mat-error *ngIf=\\\"form.get('dob').invalid\\\">Please enter dob.</mat-error> \\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"item item-3\\\" fxFlex=\\\"15%\\\">\\r\\n  \\t<mat-form-field >\\r\\n    <mat-icon matPrefix class=\\\"icon\\\">book</mat-icon>\\r\\n    <mat-select placeholder=\\\"Class\\\"  name=\\\"class\\\" formControlName=\\\"class\\\">\\r\\n      <mat-option *ngFor=\\\"let class of classData;\\\" value=\\\"{{class.id}}\\\">{{class.name}}</mat-option>\\r\\n    </mat-select>\\r\\n     <mat-error *ngIf=\\\"form.get('class').invalid\\\">Please select class.</mat-error> \\r\\n  </mat-form-field>\\r\\n  </div>\\r\\n<div class=\\\"item item-1\\\" fxFlex=\\\"15%\\\">\\r\\n    <button mat-stroked-button  type=\\\"button\\\" color=\\\"primary\\\" (click)=\\\"filePicker.click()\\\">Pick Image</button>\\r\\n    <input type=\\\"file\\\"  style=\\\"display: none;\\\" #filePicker (change)=\\\"onImagePicked($event)\\\">\\r\\n  </div>\\r\\n  <div class=\\\"image-preview\\\" *ngIf=\\\"imagePreview !='' && imagePreview\\\">\\r\\n    <img [src]=\\\"imagePreview\\\" [alt]=\\\"form.value.first_name\\\">\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"container\\\"\\r\\n     fxLayout\\r\\n     fxLayout.xs=\\\"column\\\"\\r\\n     fxLayoutAlign=\\\"left\\\"\\r\\n     fxLayoutGap=\\\"10px\\\"\\r\\n     fxLayoutGap.xs=\\\"0\\\">\\r\\n  <div class=\\\"button-row\\\">\\r\\n  \\t <button type=\\\"submit\\\" mat-stroked-button color=\\\"primary\\\">Save</button>\\r\\n  \\t  <button mat-raised-button color=\\\"primary\\\">Reset</button>\\r\\n\\r\\n  </div>\\r\\n  \\r\\n\\r\\n</div>\\r\\n\\r\\n</form>\\r\\n</mat-sidenav-container>\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { RestService} from '../rest.service';\r\nimport { FormControl,Validators,FormGroup } from '@angular/forms';\r\nimport { CLASSES } from '../class';\r\nimport { ActivatedRoute,Router } from '@angular/router';\r\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { DatePipe } from '@angular/common';\r\n\r\nexport interface DialogData {\r\n  studentId;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-student',\r\n  templateUrl: './student.component.html',\r\n  styleUrls: ['./student.component.css']\r\n})\r\nexport class StudentComponent implements OnInit {\r\n\tstudentData: any = {};\r\n\tclassData = CLASSES ;\r\n  form: FormGroup;\r\n  imagePreview: string;\r\n\r\n  constructor(public rest:RestService,private route: ActivatedRoute,private router: Router,public dialog : MatDialog ,public datePipe:DatePipe) {\r\n  \t/*this.rest.getClasses().subscribe((response) => {\r\n    console.log(\"res KV class: \",response);\r\n    this.classData = response;\r\n    });*/\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = new FormGroup({\r\n      'first_name' : new FormControl('',{\r\n        validators:[Validators.required, Validators.minLength(3)]\r\n      }),\r\n      'last_name' : new FormControl('',{\r\n        validators:[Validators.required, Validators.minLength(3)]\r\n      }),\r\n      'father_name' : new FormControl('',{\r\n        validators:[Validators.required, Validators.minLength(3)]\r\n      }),\r\n      'mother_name' : new FormControl('',{\r\n        validators:[Validators.required, Validators.minLength(3)]\r\n      }),\r\n      'address' : new FormControl('',{\r\n        validators:[Validators.required, Validators.minLength(3)]\r\n      }),\r\n       'gender' : new FormControl('',{\r\n        validators:[Validators.required]\r\n      }),\r\n        'contact_number' : new FormControl('',{\r\n        validators:[Validators.required, Validators.minLength(3)]\r\n      }),\r\n         'email' : new FormControl('',{\r\n        validators:[Validators.required, Validators.minLength(3)]\r\n      }),\r\n          'dob' : new FormControl('',{\r\n        validators:[Validators.required]\r\n      }),\r\n           'class' : new FormControl('',{\r\n        validators:[Validators.required]\r\n      }),\r\n           'image' : new FormControl('',{\r\n             validators:[Validators.required]\r\n           }),\r\n            'adhaar_no' : new FormControl('',{ \r\n        validators:[Validators.required, Validators.minLength(10)] \r\n      }),\r\n             'father_occupation' : new FormControl('',{ \r\n        validators:[Validators.required, Validators.minLength(10)] \r\n      }),\r\n             'father_qualification' : new FormControl('',{ \r\n        validators:[Validators.required, Validators.minLength(10)] \r\n      }),\r\n             'only_child' : new FormControl('',{ \r\n        validators:[Validators.required] \r\n      }),\r\n              'annual_income' : new FormControl('',{ \r\n        validators:[Validators.required, Validators.minLength(4)] \r\n      }),\r\n\r\n    })\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    //this.sub.unsubscribe();\r\n  }\r\n onImagePicked(event:Event){\r\n   const file = (event.target as HTMLInputElement).files[0];\r\n   this.form.patchValue({image:file});\r\n   this.form.get('image').updateValueAndValidity();\r\n   const reader = new FileReader();\r\n   reader.onload = () => {\r\n     this.imagePreview = reader.result;\r\n   };\r\n   reader.readAsDataURL(file);\r\n\r\n }\r\n\r\n  submitStudent() {\r\n    this.form.value.dob= this.datePipe.transform(this.form.value.dob, 'yyyy-MM-dd');\r\n\t  this.rest.postStudent(this.form.value).then((response) => {\r\n       this.openDialog();\r\n       console.log(\"Student added. !!\");\r\n       this.form.reset();\r\n    });\r\n}\r\n\r\nopenDialog() {\r\n    const dialogRef = this.dialog.open(SaveDialogContent);\r\n  }\r\n\r\n}\r\n\r\n@Component({\r\n  selector: 'save-dialog',\r\n  templateUrl: '../save_dialog.html',\r\n})\r\nexport class SaveDialogContent {\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: DialogData,public rest: RestService,public router: Router) {}\r\n  //this.router.navigate(['/liststudent']);\r\n}\r\n","module.exports = \"<app-home></app-home>\\r\\n<p>Student Detail</p>\"","import { Component, OnInit, Inject } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-student-detail',\r\n  templateUrl: './studentDetail.component.html',\r\n  styleUrls: ['./student.component.css']\r\n})\r\n\r\nexport class StudentDetailComponent  {\r\n\tconstructor(){\r\n\tconsole.log(\"StudentDetailComponent\");\r\n\t}\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n"],"sourceRoot":""}